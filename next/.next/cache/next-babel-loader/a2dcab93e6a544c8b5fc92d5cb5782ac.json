{"ast":null,"code":"var _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/auth/forgot-password/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { Modal, Button, Form, Alert, Container, Row, Col } from \"react-bootstrap\";\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useRouter } from \"next/router\";\nimport Page from '../../../components/Page';\nimport Layout from '../../../components/Layouts';\nimport { post } from '../../../services/http';\nimport './styles.scss';\n\nfunction AccessLogin(props) {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const crumbs = [{\n    name: 'Recuperar Senha'\n  }];\n  const pageTitle = 'Recuperar Senha';\n  useEffect(() => {\n    if (props.status && props.status.success) {\n      toast.success(`Bem vindo(a) ${props.status.data.user.name}`, {\n        position: toast.POSITION.BOTTOM_CENTER\n      });\n      dispatch(setUser(props.status.data));\n      router.push('/');\n    }\n  }, [props.status]);\n  return __jsx(Page, {\n    title: pageTitle,\n    crumbs: crumbs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(Layout, {\n    pageTitle: pageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.status.success && __jsx(Alert, {\n    variant: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Foi enviado um email com as instru\\xE7\\xF5es para voc\\xEA recuperar sua senha.\"), __jsx(Form, {\n    onSubmit: props.handleSubmit,\n    className: \"mt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.errors.error && __jsx(Alert, {\n    variant: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.errors.error)), __jsx(Form.Group, {\n    controlId: \"formBasicEmail\",\n    className: \"mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"E-mail\"), __jsx(Form.Control, {\n    type: \"email\",\n    value: props.values.email,\n    onChange: e => props.setFieldValue('email', e.target.value),\n    placeholder: \"E-mail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), props.touched.email && props.errors.email && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.errors.email)), __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/auth/access\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"btn btn-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Cancelar\")), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Recuperar Senha\")))));\n}\n\nexport default withFormik({\n  mapPropsToValues: props => ({\n    email: ''\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Informe um e-mail válido').required('Informe seu e-mail')\n  }),\n  handleSubmit: async (values, {\n    setSubmitting,\n    setErrors,\n    props,\n    setStatus\n  }) => {\n    try {\n      setSubmitting(true);\n      const result = await post('/auth/forgotPassword', values);\n\n      if (result.success) {\n        setStatus({\n          success: true,\n          data: result\n        });\n      } else {\n        setErrors({\n          error: 'E-mail inválido'\n        });\n      }\n    } catch (error) {\n      setErrors({\n        error: 'E-mail ou senha inválidos'\n      });\n    }\n  }\n})(AccessLogin);","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/auth/forgot-password/index.js"],"names":["Link","Modal","Button","Form","Alert","Container","Row","Col","withFormik","Yup","useDispatch","useEffect","toast","useRouter","Page","Layout","post","AccessLogin","props","router","dispatch","crumbs","name","pageTitle","status","success","data","user","position","POSITION","BOTTOM_CENTER","setUser","push","handleSubmit","errors","error","values","email","e","setFieldValue","target","value","touched","mapPropsToValues","validationSchema","object","shape","string","required","setSubmitting","setErrors","setStatus","result"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { Modal, Button, Form, Alert, Container, Row, Col } from \"react-bootstrap\";\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useRouter } from \"next/router\";\n\nimport Page from '../../../components/Page';\nimport Layout from '../../../components/Layouts';\n\nimport { post } from '../../../services/http';\n\nimport './styles.scss';\n\nfunction AccessLogin(props) {\n    const router = useRouter();\n    const dispatch = useDispatch();\n\n    const crumbs = [\n        { name: 'Recuperar Senha' },\n    ];\n\n    const pageTitle = 'Recuperar Senha';\n\n    useEffect(() => {\n        if (props.status && props.status.success) {\n\n            toast.success(`Bem vindo(a) ${props.status.data.user.name}`, {\n                position: toast.POSITION.BOTTOM_CENTER\n            });\n\n            dispatch(setUser(props.status.data));\n            router.push('/');\n        }\n        \n    }, [props.status]);\n  \n    return (\n        <Page title={pageTitle} crumbs={crumbs}>\n            <Layout pageTitle={pageTitle}>\n                \n                {props.status.success &&\n                    <Alert variant=\"success\">\n                        Foi enviado um email com as instruções para você recuperar sua senha.\n                    </Alert>\n                }\n\n                <Form onSubmit={props.handleSubmit} className=\"mt-2\">\n                    {props.errors.error &&\n                        <Alert variant=\"danger\">\n                            <Form.Control.Feedback type=\"invalid\">{props.errors.error}</Form.Control.Feedback>\n                        </Alert>\n                    }\n\n                    <Form.Group controlId=\"formBasicEmail\" className=\"mt-4\">\n                        <Form.Label>E-mail</Form.Label>\n                        <Form.Control \n                            type=\"email\" \n                            value={props.values.email}\n                            onChange={e => props.setFieldValue('email', e.target.value)}\n                            placeholder=\"E-mail\"\n                        />\n                        {props.touched.email && props.errors.email && \n                            <Form.Control.Feedback type=\"invalid\">{props.errors.email}</Form.Control.Feedback>\n                        }\n                    </Form.Group>\n\n                    <div className=\"d-flex justify-content-between\">\n                        <Link href=\"/auth/access\">\n                            <a className=\"btn btn-secondary\">\n                                Cancelar\n                            </a>\n                        </Link>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Recuperar Senha\n                        </Button>\n                    </div>\n                </Form>\n            </Layout>\n        </Page>\n    );\n}\n\nexport default withFormik({\n  mapPropsToValues: props => ({ \n      email: '',\n  }),\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Informe um e-mail válido')\n        .required('Informe seu e-mail')\n  }),\n\n  handleSubmit: async (values, { setSubmitting, setErrors, props, setStatus }) => {\n      try {\n        setSubmitting(true);\n        const result = await post('/auth/forgotPassword', values);\n\n        if (result.success) {\n            setStatus({ success: true, data: result });\n        } else {\n            setErrors({ error: 'E-mail inválido' });\n        }\n\n      } catch(error) {\n          setErrors({ error: 'E-mail ou senha inválidos' });\n      }\n  },\n\n})(AccessLogin);\n\n"]},"metadata":{},"sourceType":"module"}