{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/auth/access/login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { Modal, Button, Form, Alert, Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useRouter } from \"next/router\";\nimport { setUser } from '../../../store/actions/auth';\nimport { post } from '../../../services/http';\nimport './styles.scss';\n\nfunction AccessLogin(props) {\n  var router = useRouter();\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (props.status && props.status.success) {\n      toast.success(\"Bem vindo(a) \".concat(props.status.data.user.name), {\n        position: toast.POSITION.BOTTOM_CENTER\n      });\n      dispatch(setUser(props.status.data));\n      router.push('/');\n    }\n  }, [props.status]);\n  return __jsx(Form, {\n    onSubmit: props.handleSubmit,\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"J\\xE1 tenho uma conta.\"), __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), props.errors.error && __jsx(Alert, {\n    variant: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.errors.error)), __jsx(Form.Group, {\n    controlId: \"formBasicEmail\",\n    className: \"mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"E-mail\"), __jsx(Form.Control, {\n    type: \"email\",\n    value: props.values.email,\n    onChange: function onChange(e) {\n      return props.setFieldValue('email', e.target.value);\n    },\n    placeholder: \"E-mail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), props.touched.email && props.errors.email && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.errors.email)), __jsx(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Senha\"), __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: props.values.password,\n    onChange: function onChange(e) {\n      return props.setFieldValue('password', e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), props.touched.password && props.errors.password && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, props.errors.password)), __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/auth/forgot-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"btn btn-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Recuperar Senha\")), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Acessar minha Conta\", props.isSubmitting && __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Loading...\")))));\n}\n\nexport default withFormik({\n  mapPropsToValues: function mapPropsToValues(props) {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Informe um e-mail válido').required('Informe seu e-mail'),\n    password: Yup.string().required('Informe sua senha')\n  }),\n  handleSubmit: function handleSubmit(values, _ref) {\n    var setSubmitting, setErrors, props, setStatus, result;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setSubmitting = _ref.setSubmitting, setErrors = _ref.setErrors, props = _ref.props, setStatus = _ref.setStatus;\n            _context.prev = 1;\n            setSubmitting(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(post('/auth/login', values));\n\n          case 5:\n            result = _context.sent;\n\n            if (result.success) {\n              setSubmitting(false);\n              setStatus({\n                success: true,\n                data: result\n              });\n            } else {\n              setSubmitting(false);\n              setErrors({\n                error: 'E-mail ou senha inválidos'\n              });\n            }\n\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            setErrors({\n              error: 'E-mail ou senha inválidos'\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]]);\n  }\n})(AccessLogin);","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/auth/access/login.js"],"names":["Link","Modal","Button","Form","Alert","Container","Row","Col","Spinner","withFormik","Yup","useDispatch","useEffect","toast","useRouter","setUser","post","AccessLogin","props","router","dispatch","status","success","data","user","name","position","POSITION","BOTTOM_CENTER","push","handleSubmit","errors","error","values","email","e","setFieldValue","target","value","touched","password","isSubmitting","mapPropsToValues","validationSchema","object","shape","string","required","setSubmitting","setErrors","setStatus","result"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { Modal, Button, Form, Alert, Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useRouter } from \"next/router\";\n\nimport { setUser } from '../../../store/actions/auth';\nimport { post } from '../../../services/http';\n\nimport './styles.scss';\n\nfunction AccessLogin(props) {\n    const router = useRouter();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (props.status && props.status.success) {\n\n            toast.success(`Bem vindo(a) ${props.status.data.user.name}`, {\n                position: toast.POSITION.BOTTOM_CENTER\n            });\n\n            dispatch(setUser(props.status.data));\n            router.push('/');\n        }\n        \n    }, [props.status]);\n  \n    return (\n        <Form onSubmit={props.handleSubmit} className=\"mt-5\">\n            <h4>Já tenho uma conta.</h4>\n            <hr />\n\n            {props.errors.error &&\n                <Alert variant=\"danger\">\n                    <Form.Control.Feedback type=\"invalid\">{props.errors.error}</Form.Control.Feedback>\n                </Alert>\n            }\n\n            <Form.Group controlId=\"formBasicEmail\" className=\"mt-4\">\n                <Form.Label>E-mail</Form.Label>\n                <Form.Control \n                    type=\"email\" \n                    value={props.values.email}\n                    onChange={e => props.setFieldValue('email', e.target.value)}\n                    placeholder=\"E-mail\"\n                />\n                {props.touched.email && props.errors.email && \n                    <Form.Control.Feedback type=\"invalid\">{props.errors.email}</Form.Control.Feedback>\n                }\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Senha</Form.Label>\n                <Form.Control \n                    type=\"password\" \n                    placeholder=\"Password\" \n                    value={props.values.password}\n                    onChange={e => props.setFieldValue('password', e.target.value)}\n                />\n                {props.touched.password && props.errors.password && \n                    <Form.Control.Feedback type=\"invalid\">{props.errors.password}</Form.Control.Feedback>\n                }                  \n            </Form.Group>\n\n            <div className=\"d-flex justify-content-between\">\n                <Link href=\"/auth/forgot-password\">\n                    <a className=\"btn btn-secondary\">\n                        Recuperar Senha\n                    </a>\n                </Link>\n                <Button variant=\"primary\" type=\"submit\">\n                    Acessar minha Conta\n                    {props.isSubmitting && \n                      <Spinner animation=\"border\" role=\"status\">\n                          <span className=\"sr-only\">Loading...</span>\n                      </Spinner>\n                    }                    \n                </Button>\n            </div>\n        </Form>\n    );\n}\n\nexport default withFormik({\n  mapPropsToValues: props => ({ \n      email: '',\n      password: ''\n    }),\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Informe um e-mail válido')\n        .required('Informe seu e-mail'),\n    password: Yup.string()\n        .required('Informe sua senha'),\n  }),\n\n  handleSubmit: async (values, { setSubmitting, setErrors, props, setStatus }) => {\n      try {\n        setSubmitting(true);\n        const result = await post('/auth/login', values);\n\n        if (result.success) {\n            setSubmitting(false);\n            setStatus({ success: true, data: result });\n        } else {\n            setSubmitting(false);\n            setErrors({ error: 'E-mail ou senha inválidos' });\n        }\n\n      } catch(error) {\n          setErrors({ error: 'E-mail ou senha inválidos' });\n      }\n  },\n\n})(AccessLogin);\n\n"]},"metadata":{},"sourceType":"module"}