{"ast":null,"code":"import nextCookie from 'next-cookies';\nimport cookie from \"js-cookie\";\nimport * as cartActions from '../types/cart';\nimport * as authActions from '../types/auth';\nexport const authLogout = function () {\n  return async dispatch => {\n    const token = cookie.remove('token');\n    const user = cookie.remove('user');\n    dispatch({\n      type: authActions.LOGOUT\n    });\n    dispatch({\n      type: cartActions.RESET_CART\n    });\n  };\n};\nexport const loginStorage = function () {\n  return async dispatch => {\n    const token = cookie.get('token');\n    const user = cookie.get('user');\n\n    if (user && token) {\n      dispatch({\n        type: authActions.SET_USER,\n        payload: JSON.parse(user)\n      });\n      dispatch({\n        type: authActions.SET_TOKEN,\n        payload: token\n      });\n    }\n\n    dispatch({\n      type: authActions.SET_LOADED,\n      payload: true\n    });\n  };\n};\nexport const setUser = function (data) {\n  return async dispatch => {\n    if (data.token) {\n      cookie.set('token', data.token);\n    }\n\n    cookie.set('user', JSON.stringify(data.user));\n    dispatch({\n      type: authActions.SET_USER,\n      payload: data.user\n    });\n    dispatch({\n      type: authActions.SET_LOADED,\n      payload: true\n    });\n  };\n};\nexport const setUserData = function (data) {\n  return async dispatch => {\n    cookie.set('user', JSON.stringify(data));\n    dispatch({\n      type: authActions.SET_USER,\n      payload: data\n    });\n  };\n};\nexport const setToken = function (token) {\n  return async dispatch => {\n    cookie.set('token', token);\n    dispatch({\n      type: authActions.SET_TOKEN,\n      payload: token\n    });\n  };\n};\nexport const logout = () => {\n  return async dispatch => {\n    cookie.remove('token');\n    cookie.remove('user');\n    dispatch({\n      type: authActions.LOGOUT\n    });\n  };\n};","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/store/actions/auth.js"],"names":["nextCookie","cookie","cartActions","authActions","authLogout","dispatch","token","remove","user","type","LOGOUT","RESET_CART","loginStorage","get","SET_USER","payload","JSON","parse","SET_TOKEN","SET_LOADED","setUser","data","set","stringify","setUserData","setToken","logout"],"mappings":"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","sourcesContent":["import nextCookie from 'next-cookies';\nimport cookie from \"js-cookie\";\n\nimport * as cartActions from '../types/cart';\nimport * as authActions from '../types/auth';\n\nexport const authLogout = function() {\n    return async dispatch => {\n        const token = cookie.remove('token');\n        const user = cookie.remove('user');\n        dispatch({ type: authActions.LOGOUT });\n        dispatch({ type: cartActions.RESET_CART });\n    }\n}\n\nexport const loginStorage = function() {\n    return async dispatch => {\n\n        const token = cookie.get('token');\n        const user = cookie.get('user');\n\n        if (user && token) {\n            dispatch({ type: authActions.SET_USER, payload: JSON.parse(user) });\n            dispatch({ type: authActions.SET_TOKEN, payload: token });\n        }\n\n        dispatch({ type: authActions.SET_LOADED, payload: true });\n    }\n}\n\nexport const setUser = function(data) {\n    return async dispatch => {\n        if (data.token) {\n            cookie.set('token', data.token);\n        }\n\n        cookie.set('user', JSON.stringify(data.user));\n\n        dispatch({ type: authActions.SET_USER, payload: data.user });\n        dispatch({ type: authActions.SET_LOADED, payload: true });\n    }\n}\n\nexport const setUserData = function(data) {\n    return async dispatch => {\n        cookie.set('user', JSON.stringify(data));\n        dispatch({ type: authActions.SET_USER, payload: data });\n    }\n}\n\nexport const setToken = function(token) {\n    return async dispatch => {\n        cookie.set('token', token);\n        dispatch({ type: authActions.SET_TOKEN, payload: token });\n    }\n}\n\nexport const logout = () => {\n    return async dispatch => {\n        cookie.remove('token');\n        cookie.remove('user');\n        dispatch({type: authActions.LOGOUT});\n    }\n}"]},"metadata":{},"sourceType":"module"}