{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { Container, Table, Card, ListGroup, Alert, Button } from 'react-bootstrap';\nimport { withRouter } from 'next/router';\nimport { useDispatch } from 'react-redux';\nimport PageTitle from '../../../components/PageTitle';\nimport Spinner from '../../../components/Spinner';\nimport Breadcrumb from '../../../components/Breadcrumb';\nimport ProductDetails from '../../../components/Pages/Order/productDetails';\nimport currency from '../../../utils/currency';\nimport { get } from '../../../services/http';\nimport { addCrumb, clearCrumbs } from '../../../store/actions/breadcrumb';\n\nfunction OrderDetails(props) {\n  var _useState = useState({}),\n      order = _useState[0],\n      setOrder = _useState[1];\n\n  var _useState2 = useState({}),\n      orderViewSelected = _useState2[0],\n      setOrderViewSelected = _useState2[1];\n\n  var _useState3 = useState(true),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(clearCrumbs());\n    dispatch(addCrumb('Meus Pedidos', '/order'));\n    dispatch(addCrumb('Detalhes'));\n  }, []);\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!props.router.query.id) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(get(\"/order/\".concat(props.router.query.id)));\n\n            case 3:\n              data = _context.sent;\n              setOrder(data);\n              setLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    fetchData();\n  }, [props.router.query.id]);\n  return __jsx(React.Fragment, null, __jsx(ProductDetails, {\n    showDetails: orderViewSelected.id > 0,\n    cartProduct: orderViewSelected,\n    closeDetails: function closeDetails() {\n      return setOrderViewSelected({});\n    }\n  }), __jsx(Container, null, __jsx(Breadcrumb, null), __jsx(PageTitle, {\n    title: loading ? 'Pedido' : \"Pedido #\".concat(order.id),\n    className: \"d-flex justify-content-between align-items-center\"\n  }, __jsx(\"div\", null, __jsx(Link, {\n    href: \"/order\"\n  }, __jsx(\"a\", {\n    className: \"btn btn-sm btn-primary\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-chevron-left\"\n  }), \"  Voltar\")))), loading && __jsx(Spinner, null), !loading && __jsx(React.Fragment, null, __jsx(Card, {\n    className: \"mb-4 mt-4\"\n  }, __jsx(Card.Header, null, \"Pedido\"), __jsx(Card.Body, null, __jsx(Alert, {\n    variant: \"warning\"\n  }, order.state.name), __jsx(ListGroup, null, __jsx(ListGroup.Item, null, __jsx(\"strong\", null, \"Valor Total:\"), \" \", currency(order.total_price)), __jsx(ListGroup.Item, null, __jsx(\"strong\", null, \"Quantidade de Produtos:\"), \" (\", order.cart.__meta__.products_count, \")\"), __jsx(ListGroup.Item, null, __jsx(\"strong\", null, \"Data da Compra:\"), \" \", order.created_at)))), __jsx(Card, null, __jsx(Card.Header, null, \"Produtos\"), __jsx(Card.Body, null, __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Produto\"), __jsx(\"th\", null, \"Valor\"), __jsx(\"th\", null, \"Quantidade\"), __jsx(\"th\", null, \"Total\"), __jsx(\"th\", null))), __jsx(\"tbody\", null, order.cart.products.map(function (cartProduct) {\n    return __jsx(\"tr\", {\n      key: cartProduct.id\n    }, __jsx(\"td\", null, cartProduct.product.name, __jsx(\"span\", {\n      className: \"text-muted\"\n    }, cartProduct.option && cartProduct.option.name)), __jsx(\"td\", null, currency(cartProduct.price_unity)), __jsx(\"td\", null, cartProduct.quantity), __jsx(\"td\", null, currency(cartProduct.total_price)), __jsx(\"td\", null, __jsx(Button, {\n      size: \"sm\",\n      onClick: function onClick() {\n        // order.showDetails = !order.showDetails;\n        // setOrder({ ...order, order });\n        setOrderViewSelected(cartProduct);\n      }\n    }, __jsx(\"i\", {\n      className: \"fas fa-eye\"\n    }))));\n  }))))), __jsx(\"div\", {\n    className: \"mt-5 mb-5 d-flex justify-content-between\"\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    className: \"btn btn-light\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-chevron-left\"\n  }), \"Continuar Comprando\")), __jsx(Link, {\n    href: \"/account\"\n  }, __jsx(\"a\", {\n    className: \"btn btn-primary\"\n  }, \"Ir para minha Conta\", __jsx(\"i\", {\n    className: \"fas fa-chevron-right\"\n  })))))));\n}\n\nexport default withRouter(OrderDetails);","map":null,"metadata":{},"sourceType":"module"}