{"ast":null,"code":"var _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/components/Cart/Checkout/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Form, Modal, Button, ListGroup, Alert } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport Spinner from '../../../components/Spinner';\nimport { get, post } from '../../../services/http';\nimport currency from '../../../utils/currency';\n\nfunction CheckoutComponent(props) {\n  const {\n    onHide,\n    show,\n    addresses,\n    addressSelected,\n    cart,\n    cartLoading\n  } = props;\n  const {\n    0: paymentMethods,\n    1: setPaymentMethods\n  } = useState([]);\n  const {\n    0: credits,\n    1: setCredits\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: data,\n    1: setData\n  } = useState({});\n  const {\n    0: error,\n    1: setError\n  } = useState({});\n  const router = useRouter();\n  useEffect(() => {\n    if (addressSelected) {\n      data.user_address_id = addressSelected.id;\n      setData(() => _objectSpread({}, data, {}, data));\n    }\n  }, [addressSelected]);\n  useEffect(() => {\n    async function getPaymentMethods() {\n      const result = await get('/paymentMethod');\n      setPaymentMethods(result);\n\n      if (!data.payment_method_id) {\n        data.payment_method_id = result[0].id;\n        setData(() => _objectSpread({}, data, {}, data));\n      }\n\n      setLoading(false);\n    }\n\n    async function getCredits() {\n      const result = await get('/credit');\n      setCredits(result);\n    }\n\n    getCredits();\n    getPaymentMethods();\n  }, []);\n\n  async function processCheckout() {\n    setError({});\n\n    if (data.payment_method_id === 4 && credits.total_value < cart.total_price) {\n      return setError({\n        credit: 'Você não tem créditos suficientes para realizar esse pedido. Escolha outra forma de pagamento.'\n      });\n    }\n\n    if (!data.user_address_id) {\n      return setError({\n        user_address_id: 'Selecione um endereço para entrega.'\n      });\n    }\n\n    if (!data.payment_method_id) {\n      return setError({\n        payment_method_id: 'Selecione a forma de pagamento.'\n      });\n    } // setLoading(true);\n\n\n    const result = await post('/checkout', data);\n    toast.success('Seu pedido fopi enviado com sucesso!', {\n      position: toast.POSITION.BOTTOM_CENTER\n    }); // router.push(`/order/${result.id}?credit=${result.credit ? result.credit.id : false}`);\n  }\n\n  return __jsx(Modal, {\n    size: \"lg\",\n    show: show,\n    onHide: onHide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Finalizar Pedido\")), __jsx(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"h6\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Selecione o endere\\xE7o de entrega\"), error.user_address_id && __jsx(Alert, {\n    variant: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, error.user_address_id), addresses.map(address => __jsx(Form.Group, {\n    key: address.id,\n    controlId: `address-${address.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(Form.Check, {\n    type: \"radio\",\n    value: address.id,\n    checked: data.user_address_id === address.id,\n    label: `\n                                ${address.street}, ${address.number} - \n                                ${address.neighborhood.name} \n                            `,\n    onChange: e => {\n      data.user_address_id = parseInt(e.target.value);\n      setError(_objectSpread({}, error, {\n        user_address_id: null\n      }));\n      setData(() => _objectSpread({}, data, {}, data));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })))), paymentMethods && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(\"h6\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Selecione o m\\xE9todo de Pagamento\"), __jsx(ListGroup, {\n    className: \"options mt-3\",\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, paymentMethods.map(paymentMethod => __jsx(ListGroup.Item, {\n    key: paymentMethod.id,\n    active: data.payment_method_id === paymentMethod.id,\n    onClick: () => {\n      data.payment_method_id = paymentMethod.id;\n      setData(() => _objectSpread({}, data, {}, data));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, paymentMethod.name)))), credits.total_value > 0 && __jsx(Alert, {\n    variant: \"success\",\n    className: \"mt-3 shadow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Voc\\xEA tem \", currency(credits.total_value), \" dispon\\xEDvel\"), error.credit && __jsx(Alert, {\n    variant: \"danger\",\n    className: \"mt-3 shadow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Voc\\xEA n\\xE3o tem cr\\xE9ditos suficientes para realizar esse pedido. Escolha outra forma de pagamento.\"), data.payment_method_id === 4 && credits.total_value < cart.total_price && !error.credit && __jsx(Alert, {\n    variant: \"danger\",\n    className: \"mt-3 shadow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Voc\\xEA n\\xE3o tem cr\\xE9ditos suficientes para realizar esse pedido. Escolha outra forma de pagamento.\"), __jsx(Form.Group, {\n    controlId: \"observation\",\n    className: \"mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Observa\\xE7\\xE3o\"), __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    placeholder: \"Ex: (Troco Para R$ 50,00)\",\n    onChange: e => {\n      data.observation = e.target.value;\n      setData(() => _objectSpread({}, data, {}, data));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), __jsx(ListGroup, {\n    className: \"shadow ml-3 mr-3 mb-4 border-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, __jsx(ListGroup.Item, {\n    className: \"d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Total de Items\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, cartLoading ? __jsx(Spinner, {\n    animation: \"border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }) : currency(cart.total_products))), __jsx(ListGroup.Item, {\n    className: \"d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Taxa de Entrega\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, cartLoading ? __jsx(Spinner, {\n    animation: \"border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }) : currency(cart.shipping)))), __jsx(\"div\", {\n    className: \"btn btn-light btn-lg rounded-0 btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, cartLoading ? __jsx(Spinner, {\n    animation: \"border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }) : 'Total a Pagar: ' + currency(cart.total_price))), __jsx(Modal.Footer, {\n    className: \"d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: onHide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Cancelar\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: processCheckout,\n    disabled: loading || cartLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Confirmar Pedido\", loading && __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }))));\n}\n\nexport default CheckoutComponent;","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/components/Cart/Checkout/index.js"],"names":["useState","useEffect","useRouter","Form","Modal","Button","ListGroup","Alert","toast","Spinner","get","post","currency","CheckoutComponent","props","onHide","show","addresses","addressSelected","cart","cartLoading","paymentMethods","setPaymentMethods","credits","setCredits","loading","setLoading","data","setData","error","setError","router","user_address_id","id","getPaymentMethods","result","payment_method_id","getCredits","processCheckout","total_value","total_price","credit","success","position","POSITION","BOTTOM_CENTER","map","address","street","number","neighborhood","name","e","parseInt","target","value","paymentMethod","observation","total_products","shipping"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router'\nimport { Form, Modal, Button, ListGroup, Alert } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n\nimport Spinner from '../../../components/Spinner';\n\nimport { get, post } from '../../../services/http';\nimport currency from '../../../utils/currency';\n\nfunction CheckoutComponent(props) {\n    const { onHide, show, addresses, addressSelected, cart, cartLoading } = props;\n\n    const [paymentMethods, setPaymentMethods] = useState([]);\n    const [credits, setCredits] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [data, setData] = useState({});\n    const [error, setError] = useState({});\n\n    const router = useRouter();\n\n    useEffect(() => {\n        if (addressSelected) {\n            data.user_address_id = addressSelected.id;\n            setData(() => ({ ...data, ...data }));\n        }\n    }, [addressSelected]);\n\n    useEffect(() => {\n        async function getPaymentMethods() {\n            const result = await get('/paymentMethod');\n            setPaymentMethods(result);\n\n            if (!data.payment_method_id) {\n                data.payment_method_id = result[0].id;\n                setData(() => ({ ...data, ...data }));\n            }\n\n            setLoading(false);\n        } \n\n        async function getCredits() {\n            const result = await get('/credit');\n            setCredits(result);\n        } \n\n        getCredits();\n        getPaymentMethods();\n    }, []);\n\n    async function processCheckout() {\n        setError({});\n        \n        if (data.payment_method_id === 4 && credits.total_value < cart.total_price) {\n            return setError({ credit: 'Você não tem créditos suficientes para realizar esse pedido. Escolha outra forma de pagamento.' });\n        }\n\n        if (!data.user_address_id) {\n            return setError({ user_address_id: 'Selecione um endereço para entrega.' });\n        }\n\n        if (!data.payment_method_id) {\n            return setError({ payment_method_id: 'Selecione a forma de pagamento.' });\n        }\n        \n        // setLoading(true);\n\n        const result = await post('/checkout', data);\n\n        toast.success('Seu pedido fopi enviado com sucesso!', {\n            position: toast.POSITION.BOTTOM_CENTER\n        });\n\n        // router.push(`/order/${result.id}?credit=${result.credit ? result.credit.id : false}`);\n    }\n\n    return (\n      <Modal\n        size=\"lg\"\n        show={show}\n        onHide={onHide}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Finalizar Pedido\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n            <div className=\"mb-3\">\n                <h6 className=\"text-primary\">Selecione o endereço de entrega</h6>\n                {error.user_address_id && <Alert variant=\"danger\">{error.user_address_id}</Alert>}\n\n                {addresses.map(address => \n                    <Form.Group key={address.id} controlId={`address-${address.id}`}>\n                        <Form.Check \n                            type=\"radio\" \n                            value={address.id}\n                            checked={data.user_address_id === address.id}\n                            label={`\n                                ${address.street}, ${address.number} - \n                                ${address.neighborhood.name} \n                            `} \n                            onChange={(e) => {\n                                data.user_address_id = parseInt(e.target.value);\n                                setError({ ...error, user_address_id: null })\n                                setData(() => ({ ...data, ...data }));\n                            }}\n                        />\n                        <hr />\n                    </Form.Group>\n                )}\n            </div>\n\n            {paymentMethods && \n                <div>\n                    <h6 className=\"text-primary\">Selecione o método de Pagamento</h6>\n                    <ListGroup className=\"options mt-3\" horizontal>\n                        {paymentMethods.map(paymentMethod =>\n                            <ListGroup.Item \n                                key={paymentMethod.id} \n                                active={data.payment_method_id === paymentMethod.id}\n                                onClick={() => {\n                                    data.payment_method_id = paymentMethod.id;\n                                    setData(() => ({ ...data, ...data }));\n                                }}\n                            >\n                                {paymentMethod.name}\n                            </ListGroup.Item>\n                        )}\n                    </ListGroup>\n                </div>\n            }\n\n            {credits.total_value > 0 && \n                <Alert variant=\"success\" className=\"mt-3 shadow\">Você tem {currency(credits.total_value)} disponível</Alert>\n            }\n\n            {error.credit && \n                <Alert variant=\"danger\" className=\"mt-3 shadow\">\n                    Você não tem créditos suficientes para realizar esse pedido. Escolha outra forma de pagamento.\n                </Alert>\n            }\n\n            {data.payment_method_id === 4 && credits.total_value < cart.total_price && !error.credit && \n                <Alert variant=\"danger\" className=\"mt-3 shadow\">\n                    Você não tem créditos suficientes para realizar esse pedido. Escolha outra forma de pagamento.\n                </Alert>\n            }\n            \n            <Form.Group controlId=\"observation\" className=\"mt-3\">\n                <Form.Label>Observação</Form.Label>\n                <Form.Control \n                    as=\"textarea\"\n                    rows=\"3\" \n                    placeholder=\"Ex: (Troco Para R$ 50,00)\"\n                    onChange={(e) => {\n                    data.observation = e.target.value;\n                    setData(() => ({ ...data, ...data }));\n                }} />\n            </Form.Group>\n\n            <ListGroup className=\"shadow ml-3 mr-3 mb-4 border-0\">\n                <ListGroup.Item className=\"d-flex justify-content-between\">\n                    <div>\n                        Total de Items \n                    </div>\n                    <div>\n                        {cartLoading ? <Spinner animation=\"border\" /> : currency(cart.total_products)}\n                    </div>\n                </ListGroup.Item>\n                <ListGroup.Item className=\"d-flex justify-content-between\">\n                    <div>\n                        Taxa de Entrega \n                    </div>\n                    <div>\n                        {cartLoading ? <Spinner animation=\"border\" /> : currency(cart.shipping)}\n                    </div>\n                </ListGroup.Item>\n            </ListGroup>\n\n            <div className=\"btn btn-light btn-lg rounded-0 btn-block\">\n                {cartLoading ? <Spinner animation=\"border\" /> : 'Total a Pagar: ' + currency(cart.total_price)}\n            </div>\n        </Modal.Body>\n        <Modal.Footer className=\"d-flex justify-content-between\">\n            <Button variant=\"secondary\" onClick={onHide}>\n                Cancelar\n            </Button>\n            <Button variant=\"primary\" onClick={processCheckout} disabled={loading || cartLoading}>\n                Confirmar Pedido\n                {loading && <Spinner />}\n            </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n}\n\nexport default CheckoutComponent;"]},"metadata":{},"sourceType":"module"}