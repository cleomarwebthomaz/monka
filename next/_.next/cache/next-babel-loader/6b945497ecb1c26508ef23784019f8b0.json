{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useRouter } from 'next/router';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { withRouter } from 'next/router';\nimport Spinner from '../../Spinner';\nimport Loading from '../../Loading';\nimport { get, patch, post } from '../../../services/http';\n\nfunction ChangePasswordForm(props) {\n  var router = useRouter();\n\n  var _useState = useState([]),\n      neighborhoods = _useState[0],\n      setNeighborhoods = _useState[1];\n\n  useEffect(function () {\n    if (props.status && props.status.success) {\n      toast.success('Salvo com sucesso!', {\n        position: toast.POSITION.BOTTOM_CENTER\n      });\n      router.push('/account/addresses');\n    }\n  }, [props.status]);\n  useEffect(function () {\n    function getNeighborhoods() {\n      var result, data;\n      return _regeneratorRuntime.async(function getNeighborhoods$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(get('/neighborhood'));\n\n            case 2:\n              result = _context.sent;\n              data = result.map(function (neighborhood) {\n                return {\n                  label: neighborhood.name,\n                  value: neighborhood.id\n                };\n              });\n              setNeighborhoods(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    getNeighborhoods();\n  }, [props.router]);\n  useEffect(function () {\n    function getNeighborhood() {\n      var result, neighborhood;\n      return _regeneratorRuntime.async(function getNeighborhood$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(props.router.query.id && neighborhoods.length > 0)) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(get(\"/myAddress/\".concat(props.router.query.id)));\n\n            case 3:\n              result = _context2.sent;\n              neighborhood = neighborhoods.find(function (item) {\n                return item.value === result.neighborhood_id;\n              });\n              props.setFieldValue('id', result.id);\n              props.setFieldValue('street', result.street);\n              props.setFieldValue('number', result.number);\n              props.setFieldValue('complement', result.complement || '');\n              props.setFieldValue('neighborhood_id', neighborhood);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n\n    getNeighborhood();\n  }, [neighborhoods]);\n  if (neighborhoods.length <= 0) return __jsx(Loading, null);\n  return __jsx(Form, {\n    onSubmit: props.handleSubmit\n  }, __jsx(Row, null, __jsx(Col, null, __jsx(Form.Group, null, __jsx(Form.Label, null, \"Cidade\"), __jsx(Form.Control, {\n    value: \"Cascavel PR\",\n    disabled: true\n  }))), __jsx(Col, null, __jsx(Form.Group, null, __jsx(Form.Label, null, \"Bairro\"), __jsx(Select, {\n    options: neighborhoods,\n    placeholder: \"Selecione o Bairro\",\n    value: props.values.neighborhood_id,\n    onChange: function onChange(value) {\n      return props.setFieldValue('neighborhood_id', value);\n    }\n  }), props.touched.neighborhood_id && props.errors.neighborhood_id && __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.errors.neighborhood_id)))), __jsx(Row, null, __jsx(Col, {\n    xs: 8\n  }, __jsx(Form.Group, null, __jsx(Form.Label, null, \"Rua\"), __jsx(Form.Control, {\n    onChange: function onChange(e) {\n      return props.setFieldValue('street', e.target.value);\n    },\n    value: props.values.street\n  }), props.touched.street && props.errors.street && __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.errors.street))), __jsx(Col, null, __jsx(Form.Group, null, __jsx(Form.Label, null, \"N\\xBA\"), __jsx(Form.Control, {\n    type: \"number\",\n    onChange: function onChange(e) {\n      return props.setFieldValue('number', e.target.value);\n    },\n    value: props.values.number\n  }), props.touched.number && props.errors.number && __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.errors.number)))), __jsx(Form.Group, null, __jsx(Form.Label, null, \"Complemento\"), __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    value: props.values.complement,\n    onChange: function onChange(e) {\n      return props.setFieldValue('complement', e.target.value);\n    }\n  }), props.touched.complement && props.errors.complement && __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.errors.complement)), __jsx(\"div\", {\n    className: \"mt-3 mb-5 d-flex justify-content-end\"\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    disabled: props.isSubmitting\n  }, \"Salvar\", __jsx(\"i\", {\n    className: \"fas fa-disk\"\n  }), props.isSubmitting && __jsx(Spinner, null))));\n}\n\nexport default withFormik({\n  mapPropsToValues: function mapPropsToValues(props) {\n    return {\n      id: '',\n      street: '',\n      number: '',\n      neighborhood_id: {},\n      complement: ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    street: Yup.string().required('Informe uma nova senha'),\n    number: Yup.number().required('Informe o número').positive('Digite apenas número').integer('Digite apenas número'),\n    neighborhood_id: Yup.object().required('Selecione o bairro')\n  }),\n  handleSubmit: function handleSubmit(values, _ref) {\n    var setSubmitting, setErrors, setStatus, result;\n    return _regeneratorRuntime.async(function handleSubmit$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setSubmitting = _ref.setSubmitting, setErrors = _ref.setErrors, setStatus = _ref.setStatus;\n            _context3.prev = 1;\n            setSubmitting(true);\n\n            if (values.neighborhood_id.value) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", setErrors({\n              neighborhood_id: 'Selecione o bairro'\n            }));\n\n          case 5:\n            if (!values.id) {\n              _context3.next = 11;\n              break;\n            }\n\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(patch(\"/myAddress/\".concat(values.id), _objectSpread({}, values, {\n              neighborhood_id: values.neighborhood_id.value\n            })));\n\n          case 8:\n            result = _context3.sent;\n            _context3.next = 14;\n            break;\n\n          case 11:\n            _context3.next = 13;\n            return _regeneratorRuntime.awrap(post(\"/myAddress\", _objectSpread({}, values, {\n              neighborhood_id: values.neighborhood_id.value\n            })));\n\n          case 13:\n            result = _context3.sent;\n\n          case 14:\n            if (result.success) {\n              setSubmitting(false);\n              setStatus({\n                success: true\n              });\n            }\n\n            if (result.validations) {\n              result.validations.map(function (e) {\n                var error = {};\n                error[e.field] = e.message;\n                setErrors(error);\n              });\n            }\n\n            _context3.next = 22;\n            break;\n\n          case 18:\n            _context3.prev = 18;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.log(_context3.t0);\n            setErrors({\n              error: 'Não foi possível salvar. Tente novamente.'\n            });\n\n          case 22:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 18]]);\n  }\n})(withRouter(ChangePasswordForm));","map":null,"metadata":{},"sourceType":"module"}