{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { ButtonGroup, ListGroup, Form, Spinner, Row, Col, Image, Card, Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { toast } from 'react-toastify';\nimport CheckoutComponent from './Checkout';\nimport Quantity from './Quantity';\nimport Voucher from './Voucher';\nimport Details from './components/Details';\nimport currency from '../../utils/currency';\nimport { showCart, loadCart } from '../../store/actions/cart';\nimport { get, patch, httpDelete } from '../../services/http';\nimport './styles.scss';\n\nfunction CartComponent() {\n  var _useState = useState([]),\n      addresses = _useState[0],\n      setAddresses = _useState[1];\n\n  var _useState2 = useState({}),\n      addressSelected = _useState2[0],\n      setAddressSelected = _useState2[1];\n\n  var route = useRouter();\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      isLogged = _useSelector.isLogged;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.cart;\n  }),\n      show = _useSelector2.show,\n      cart = _useSelector2.cart,\n      loading = _useSelector2.loading;\n\n  var _useState3 = useState(false),\n      openCheckout = _useState3[0],\n      setOpenCheckout = _useState3[1];\n\n  useEffect(function () {\n    function getAddresses() {\n      var result, addressDefault;\n      return _regeneratorRuntime.async(function getAddresses$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(get('/myAddress'));\n\n            case 2:\n              result = _context.sent;\n\n              if (!(result.length <= 0)) {\n                _context.next = 7;\n                break;\n              }\n\n              toast.warning('Adicione um endereÃ§o para continuar', {\n                position: toast.POSITION.BOTTOM_CENTER\n              });\n              dispatch(showCart(false));\n              return _context.abrupt(\"return\", route.push('/auth/access/register-address'));\n\n            case 7:\n              if (!addressSelected || !addressSelected.id) {\n                addressDefault = result.find(function (item) {\n                  return item.is_default;\n                });\n                setAddressSelected(addressDefault);\n              }\n\n              setAddresses(result);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    if (isLogged && show) getAddresses();\n  }, [isLogged, show]);\n\n  function deleteItem(cartProduct) {\n    return _regeneratorRuntime.async(function deleteItem$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(httpDelete(\"/cart/\".concat(cartProduct.cart_id, \"/product/\").concat(cartProduct.id)));\n\n          case 2:\n            dispatch(loadCart());\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function setAddress(address) {\n    return _regeneratorRuntime.async(function setAddress$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setAddressSelected(address);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(patch(\"/myAddress/set-default/\".concat(address.id), address));\n\n          case 3:\n            dispatch(loadCart());\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function deleteItem(cartProduct) {\n    return _regeneratorRuntime.async(function deleteItem$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(httpDelete(\"/cart/\".concat(cart.id, \"/product/\").concat(cartProduct.id)));\n\n          case 2:\n            dispatch(loadCart());\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  }\n\n  if (!show) return __jsx(\"div\", null);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    onClick: function onClick() {\n      return dispatch(showCart(false));\n    },\n    className: \"cart-mask\"\n  }), __jsx(CheckoutComponent, {\n    show: openCheckout && cart.products.length > 0,\n    onHide: function onHide() {\n      return setOpenCheckout();\n    },\n    addressSelected: addressSelected,\n    addresses: addresses,\n    cart: cart,\n    cartLoading: loading\n  }), __jsx(\"div\", {\n    id: \"block-cart\",\n    className: \"shadow animated fadeInRight faster\"\n  }, __jsx(\"div\", {\n    className: \"cart-header p-2 d-flex align-items-center border-bottom shadow justify-content-between\"\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center\"\n  }, __jsx(\"h4\", {\n    className: \"m-0 mr-1 text-light text-primary\"\n  }, \"Minha sacola\"), \"(\", cart.products.length, \") produto\", cart.products <= 1 ? '' : 's'), __jsx(\"button\", {\n    className: \"btn btn-light rounded-circle\",\n    onClick: function onClick() {\n      return dispatch(showCart(false));\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-times\"\n  }))), __jsx(\"div\", {\n    className: \"body p-4 border-bottom\"\n  }, cart.products.length <= 0 && __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(\"h1\", null, \"Sua sacola est\\xE1 vazia\"), __jsx(\"div\", {\n    className: \"mt-5 empty-icon\"\n  }, __jsx(\"i\", {\n    className: \"far fa-frown-open\"\n  }))), cart.products.map(function (cartProduct) {\n    return __jsx(\"div\", {\n      key: cartProduct.id\n    }, __jsx(Card, {\n      className: \"rounded position-relative mb-4 pt-1 pb-2 item border-0\",\n      key: cartProduct.id\n    }, __jsx(Row, {\n      key: cartProduct.id\n    }, __jsx(Col, {\n      xs: 4\n    }, __jsx(Image, {\n      src: cartProduct.product.image_url,\n      className: \"img-fluid\"\n    }), __jsx(\"div\", {\n      className: \"d-block d-sm-none\"\n    }, __jsx(Quantity, {\n      cartProduct: cartProduct\n    }))), __jsx(Col, {\n      xs: 8\n    }, __jsx(\"h6\", {\n      className: \"text-primary mb-0 mt-3\"\n    }, cartProduct.product.name), __jsx(\"strong\", null, cartProduct.observation), __jsx(Row, null, __jsx(Col, null, __jsx(\"div\", null, __jsx(\"b\", {\n      className: \"group-name text-secondary mb-0\"\n    }, \"Tamanho\")), cartProduct.option && __jsx(\"div\", {\n      className: \"group-value\"\n    }, cartProduct.option.name)), __jsx(Col, {\n      sm: 6,\n      className: \"pr-5 mt-4 mt-sm-0 d-none d-sm-block\"\n    }, __jsx(Quantity, {\n      cartProduct: cartProduct\n    }))), __jsx(Row, {\n      className: \"p-0 groups\"\n    }, cartProduct.groups.map(function (group) {\n      return __jsx(Col, {\n        xs: 6,\n        key: group.id\n      }, __jsx(ListGroup, {\n        className: \"mb-2 list-groups\"\n      }, __jsx(ListGroup.Item, {\n        className: \"p-0 m-0 border-0 group-option\"\n      }, group.name), group.options.map(function (groupOption) {\n        return __jsx(ListGroup.Item, {\n          className: \"p-0 m-0 border-0 group-option-name\",\n          key: groupOption.id\n        }, \"- \", groupOption.option.name, \" +\", __jsx(\"span\", {\n          className: \"text-muted\"\n        }, currency(groupOption.option.price)));\n      })));\n    }))), __jsx(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      className: \"rounded-circle btn-trash\",\n      onClick: function onClick() {\n        deleteItem(cartProduct);\n      }\n    }, __jsx(\"i\", {\n      className: \"fas fa-trash\"\n    })))));\n  }), cart.products.length > 0 && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"addresses ml-3 mr-3 mb-4\"\n  }, addresses.map(function (address) {\n    return __jsx(Form.Group, {\n      key: address.id,\n      controlId: \"address-\".concat(address.id),\n      className: \"mb-0\"\n    }, __jsx(Form.Check, {\n      type: \"radio\",\n      value: address.id,\n      checked: addressSelected && addressSelected.id === address.id,\n      label: \"\\n                                    \".concat(address.street, \", \").concat(address.number, \" - \\n                                    \").concat(address.neighborhood.name, \" \\n                                \"),\n      onChange: function onChange() {\n        return setAddress(address);\n      }\n    }));\n  })), __jsx(Voucher, null), __jsx(Details, {\n    cart: cart,\n    loading: loading\n  }))), __jsx(\"div\", {\n    className: \"footer w-100 mt-3 d-flex flex-column border-top\"\n  }, __jsx(ButtonGroup, null, __jsx(\"div\", {\n    className: \"btn btn-light btn-lg rounded-0\"\n  }, \"Total: \", currency(cart.total_price)), __jsx(\"button\", {\n    className: \"btn btn-success btn-lg rounded-0\",\n    onClick: function onClick() {\n      return setOpenCheckout(true);\n    },\n    disabled: cart.products.length <= 0 || loading\n  }, \"Finalizar Pedido\", __jsx(\"i\", {\n    className: \"fas fa-chevron-right\"\n  }))))));\n}\n\nexport default CartComponent;","map":null,"metadata":{},"sourceType":"module"}