{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Form, Modal, Button, ListGroup, Alert } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport Spinner from '../../../components/Spinner';\nimport { get, post } from '../../../services/http';\nimport currency from '../../../utils/currency';\n\nfunction CheckoutComponent(props) {\n  const {\n    onHide,\n    show,\n    addresses,\n    addressSelected,\n    cart,\n    cartLoading\n  } = props;\n  const {\n    0: paymentMethods,\n    1: setPaymentMethods\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: data,\n    1: setData\n  } = useState({});\n  const {\n    0: error,\n    1: setError\n  } = useState({});\n  const router = useRouter();\n  useEffect(() => {\n    if (addressSelected) {\n      data.user_address_id = addressSelected.id;\n      setData(() => _objectSpread({}, data, {}, data));\n    }\n  }, [addressSelected]);\n  useEffect(() => {\n    async function getPaymentMethods() {\n      const result = await get('/paymentMethod');\n      setPaymentMethods(result);\n\n      if (!data.payment_method_id) {\n        data.payment_method_id = result[0].id;\n        setData(() => _objectSpread({}, data, {}, data));\n      }\n\n      setLoading(false);\n    }\n\n    getPaymentMethods();\n  }, []);\n\n  async function processCheckout() {\n    setError({});\n    setLoading(true);\n\n    if (!data.user_address_id) {\n      return setError({\n        user_address_id: 'Selecione um endereÃ§o para entrega.'\n      });\n    }\n\n    if (!data.payment_method_id) {\n      return setError({\n        payment_method_id: 'Selecione a forma de pagamento.'\n      });\n    }\n\n    const result = await post('/checkout', data);\n    setLoading(true);\n    toast.success('Seu pedido fopi enviado com sucesso!', {\n      position: toast.POSITION.BOTTOM_CENTER\n    });\n    router.push(`/order/${result.id}`);\n  }\n\n  return __jsx(Modal, {\n    size: \"lg\",\n    show: show,\n    onHide: onHide\n  }, __jsx(Modal.Header, {\n    closeButton: true\n  }, __jsx(Modal.Title, {\n    id: \"contained-modal-title-vcenter\"\n  }, \"Finalizar Pedido\")), __jsx(Modal.Body, null, __jsx(\"div\", {\n    className: \"mb-3\"\n  }, __jsx(\"h6\", {\n    className: \"text-primary\"\n  }, \"Selecione o endere\\xE7o de entrega\"), error.user_address_id && __jsx(Alert, {\n    variant: \"danger\"\n  }, error.user_address_id), addresses.map(address => __jsx(Form.Group, {\n    key: address.id,\n    controlId: `address-${address.id}`\n  }, __jsx(Form.Check, {\n    type: \"radio\",\n    value: address.id,\n    checked: data.user_address_id === address.id,\n    label: `\n                                ${address.street}, ${address.number} - \n                                ${address.neighborhood.name} \n                            `,\n    onChange: e => {\n      data.user_address_id = parseInt(e.target.value);\n      setError(_objectSpread({}, error, {\n        user_address_id: null\n      }));\n      setData(() => _objectSpread({}, data, {}, data));\n    }\n  }), __jsx(\"hr\", null)))), paymentMethods && __jsx(\"div\", null, __jsx(\"h6\", {\n    className: \"text-primary\"\n  }, \"Selecione o m\\xE9todo de Pagamento\"), __jsx(ListGroup, {\n    className: \"options mt-3\",\n    horizontal: true\n  }, paymentMethods.map(paymentMethod => __jsx(ListGroup.Item, {\n    key: paymentMethod.id,\n    active: data.payment_method_id === paymentMethod.id,\n    onClick: () => {\n      data.payment_method_id = paymentMethod.id;\n      setData(() => _objectSpread({}, data, {}, data));\n    }\n  }, paymentMethod.name)))), __jsx(Form.Group, {\n    controlId: \"observation\",\n    className: \"mt-3\"\n  }, __jsx(Form.Label, null, \"Observa\\xE7\\xE3o\"), __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    onChange: e => {\n      data.observation = e.target.value;\n      setData(() => _objectSpread({}, data, {}, data));\n    }\n  })), __jsx(ListGroup, {\n    className: \"shadow ml-3 mr-3 mb-4 border-0\"\n  }, __jsx(ListGroup.Item, {\n    className: \"d-flex justify-content-between\"\n  }, __jsx(\"div\", null, \"Total de Items\"), __jsx(\"div\", null, cartLoading ? __jsx(Spinner, {\n    animation: \"border\"\n  }) : currency(cart.total_products))), __jsx(ListGroup.Item, {\n    className: \"d-flex justify-content-between\"\n  }, __jsx(\"div\", null, \"Taxa de Entrega\"), __jsx(\"div\", null, cartLoading ? __jsx(Spinner, {\n    animation: \"border\"\n  }) : currency(cart.shipping)))), __jsx(\"div\", {\n    className: \"btn btn-light btn-lg rounded-0 btn-block\"\n  }, cartLoading ? __jsx(Spinner, {\n    animation: \"border\"\n  }) : 'Total a Pagar: ' + currency(cart.total_price))), __jsx(Modal.Footer, {\n    className: \"d-flex justify-content-between\"\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: onHide\n  }, \"Cancelar\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: processCheckout,\n    disabled: loading || cartLoading\n  }, \"Confirmar Pedido\", loading && __jsx(Spinner, null))));\n}\n\nexport default CheckoutComponent;","map":null,"metadata":{},"sourceType":"module"}