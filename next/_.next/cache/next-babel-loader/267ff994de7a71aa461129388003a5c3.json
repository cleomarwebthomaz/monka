{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/api/next/components/Pages/Auth/Register/form.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { Form, Alert } from \"react-bootstrap\";\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport Spinner from '../../../Spinner';\nimport { setUser } from '../../../../store/actions/auth';\nimport { post } from '../../../../services/http';\nimport './styles.scss';\n\nfunction FormRegister(props) {\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (props.status && props.status.success) {\n      dispatch(setUser(props.status.data));\n      toast.success(\"Seja bem vindo(a) \".concat(props.status.data.user.name), {\n        position: toast.POSITION.BOTTOM_CENTER\n      });\n      props.onSuccess();\n    }\n  }, [props.status]);\n  return __jsx(Form, {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.errors.error && __jsx(Alert, {\n    variant: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.errors.error)), __jsx(Form.Group, {\n    controlId: \"formName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Nome\"), __jsx(Form.Control, {\n    type: \"text\",\n    value: props.values.name,\n    onChange: function onChange(e) {\n      return props.setFieldValue('name', e.target.value);\n    },\n    placeholder: \"Seu nome Completo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), props.touched.name && props.errors.name && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.errors.name)), __jsx(Form.Group, {\n    controlId: \"formEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"E-mail\"), __jsx(Form.Control, {\n    type: \"email\",\n    value: props.values.email,\n    onChange: function onChange(e) {\n      return props.setFieldValue('email', e.target.value);\n    },\n    placeholder: \"E-mail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), props.touched.email && props.errors.email && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, props.errors.email)), __jsx(Form.Group, {\n    controlId: \"formPhone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Celular\"), __jsx(Form.Control, {\n    type: \"text\",\n    value: props.values.phone,\n    onChange: function onChange(e) {\n      return props.setFieldValue('phone', e.target.value);\n    },\n    placeholder: \"Celular\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), props.touched.phone && props.errors.phone && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.errors.phone)), __jsx(Form.Group, {\n    controlId: \"formPersonType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Tipo de Pessoa\"), __jsx(Form.Control, {\n    as: \"select\",\n    value: props.values.person_type,\n    onChange: function onChange(e) {\n      return props.setFieldValue('person_type', e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"individual\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Pessoa F\\xEDsica\"), __jsx(\"option\", {\n    value: \"legal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Pessoa Jur\\xEDdica\")), props.touched.person_type && props.errors.person_type && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, props.errors.person_type)), __jsx(Form.Group, {\n    controlId: \"formDocument\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, props.values.person_type === 'legal' ? 'CNPJ' : 'CPF'), __jsx(Form.Control, {\n    type: \"text\",\n    value: props.values.document,\n    onChange: function onChange(e) {\n      return props.setFieldValue('document', e.target.value);\n    },\n    placeholder: props.values.person_type === 'legal' ? 'CNPJ' : 'CPF',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), props.touched.document && props.errors.document && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, props.errors.document)), __jsx(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Senha\"), __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Digite uma senha com mais de 4 caracteres\",\n    value: props.values.password,\n    onChange: function onChange(e) {\n      return props.setFieldValue('password', e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), props.touched.password && props.errors.password && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, props.errors.password)), props.values.password.length >= 3 && __jsx(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Confirme a Senha\"), __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirme a Senha\",\n    value: props.values.confirm_password,\n    onChange: function onChange(e) {\n      return props.setFieldValue('confirm_password', e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), props.touched.confirm_password && props.errors.confirm_password && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, props.errors.confirm_password)), __jsx(\"div\", {\n    className: \"mt-3 mb-5 d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"btn btn-light\",\n    type: \"button\",\n    onClick: function onClick() {\n      return props.onCancel(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Fazer Login\", __jsx(\"i\", {\n    className: \"fas fa-disk\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Cadastre-se\", __jsx(\"i\", {\n    className: \"fas fa-disk\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), props.isSubmitting && __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }))));\n}\n\nexport default withFormik({\n  mapPropsToValues: function mapPropsToValues(props) {\n    return {\n      name: 'tetse d eteste',\n      email: Math.random() + '@mail.co',\n      password: 'cleomar201',\n      confirm_password: 'cleomar201',\n      person_type: 'individual',\n      document: '570.294.160-82',\n      phone: '49561561616156'\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Informe seu nome').test('real', 'Informe seu nome completo.', function (value) {\n      if (!value) return;\n      var count = value.split(' ');\n\n      if (!count[1]) {\n        return false;\n      }\n\n      return true;\n    }),\n    email: Yup.string().email('Informe um e-mail válido').required('Informe seu e-mail'),\n    phone: Yup.string().required('Esse campo é obrigatório'),\n    password: Yup.string().min(4, 'Digite uma senha com mais de 4 caracteres').required('Digite uma senha'),\n    confirm_password: Yup.string().required('Esse campo é obrigatório').oneOf([Yup.ref('password'), null], 'As senhas não correspondem'),\n    document: Yup.string().required('Esse campo é obrigatório')\n  }),\n  handleSubmit: function handleSubmit(values, _ref) {\n    var setSubmitting, setErrors, props, setStatus, result;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setSubmitting = _ref.setSubmitting, setErrors = _ref.setErrors, props = _ref.props, setStatus = _ref.setStatus;\n            _context.prev = 1;\n            setSubmitting(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(post('/auth/register', values));\n\n          case 5:\n            result = _context.sent;\n\n            if (result.success) {\n              setStatus({\n                success: true,\n                data: result\n              });\n            }\n\n            if (result.errorValidation) {\n              result.error.map(function (e) {\n                var error = {};\n                error[e.field] = e.message;\n                setErrors(error);\n              });\n            }\n\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n            setErrors({\n              error: 'Não foi possível realizar seu cadastro. Tente novamente mais tarde.'\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]]);\n  }\n})(FormRegister);","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/api/next/components/Pages/Auth/Register/form.js"],"names":["useEffect","Form","Alert","withFormik","Yup","useDispatch","toast","Spinner","setUser","post","FormRegister","props","dispatch","status","success","data","user","name","position","POSITION","BOTTOM_CENTER","onSuccess","handleSubmit","errors","error","values","e","setFieldValue","target","value","touched","email","phone","person_type","document","password","length","confirm_password","onCancel","isSubmitting","mapPropsToValues","Math","random","validationSchema","object","shape","string","required","test","count","split","min","oneOf","ref","setSubmitting","setErrors","setStatus","result","errorValidation","map","field","message","console","log"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { Form, Alert } from \"react-bootstrap\";\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport { toast } from 'react-toastify';\n\nimport Spinner from '../../../Spinner';\n\nimport { setUser } from '../../../../store/actions/auth';\nimport { post } from '../../../../services/http';\n\nimport './styles.scss';\n\nfunction FormRegister(props) {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (props.status && props.status.success) {\n            dispatch(setUser(props.status.data));\n\n            toast.success(`Seja bem vindo(a) ${props.status.data.user.name}`, {\n                position: toast.POSITION.BOTTOM_CENTER\n            });\n\n            props.onSuccess();\n        }\n    }, [props.status]);\n\n    return (\n        <Form onSubmit={props.handleSubmit}>\n\n            {props.errors.error &&\n                <Alert variant=\"danger\">\n                    <Form.Control.Feedback type=\"invalid\">{props.errors.error}</Form.Control.Feedback>\n                </Alert>\n            }\n\n            <Form.Group controlId=\"formName\">\n                <Form.Label>Nome</Form.Label>\n                <Form.Control \n                    type=\"text\" \n                    value={props.values.name}\n                    onChange={e => props.setFieldValue('name', e.target.value)}\n                    placeholder=\"Seu nome Completo\"\n                />\n                {props.touched.name && props.errors.name && \n                    <Form.Control.Feedback type=\"invalid\">{props.errors.name}</Form.Control.Feedback>\n                }\n            </Form.Group>\n\n            <Form.Group controlId=\"formEmail\">\n                <Form.Label>E-mail</Form.Label>\n                <Form.Control \n                    type=\"email\" \n                    value={props.values.email}\n                    onChange={e => props.setFieldValue('email', e.target.value)}\n                    placeholder=\"E-mail\"\n                />\n                {props.touched.email && props.errors.email && \n                    <Form.Control.Feedback type=\"invalid\">{props.errors.email}</Form.Control.Feedback>\n                }\n            </Form.Group>\n            \n            <Form.Group controlId=\"formPhone\">\n                <Form.Label>Celular</Form.Label>\n                <Form.Control \n                    type=\"text\" \n                    value={props.values.phone}\n                    onChange={e => props.setFieldValue('phone', e.target.value)}\n                    placeholder=\"Celular\"\n                />\n                {props.touched.phone && props.errors.phone && \n                    <Form.Control.Feedback type=\"invalid\">{props.errors.phone}</Form.Control.Feedback>\n                }\n            </Form.Group>\n\n            <Form.Group controlId=\"formPersonType\">\n                <Form.Label>Tipo de Pessoa</Form.Label>\n                <Form.Control\n                    as=\"select\"\n                    value={props.values.person_type}\n                    onChange={e => props.setFieldValue('person_type', e.target.value)}\n                >\n                    <option value=\"individual\">Pessoa Física</option>\n                    <option value=\"legal\">Pessoa Jurídica</option>\n                </Form.Control>\n                {props.touched.person_type && props.errors.person_type && \n                    <Form.Control.Feedback type=\"invalid\">{props.errors.person_type}</Form.Control.Feedback>\n                }                  \n            </Form.Group>\n\n            <Form.Group controlId=\"formDocument\">\n                <Form.Label>{props.values.person_type === 'legal' ? 'CNPJ' : 'CPF'}</Form.Label>\n                <Form.Control \n                    type=\"text\" \n                    value={props.values.document}\n                    onChange={e => props.setFieldValue('document', e.target.value)}\n                    placeholder={props.values.person_type === 'legal' ? 'CNPJ' : 'CPF'}\n                />\n                {props.touched.document && props.errors.document && \n                    <Form.Control.Feedback type=\"invalid\">{props.errors.document}</Form.Control.Feedback>\n                }\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Senha</Form.Label>\n                <Form.Control \n                    type=\"password\" \n                    placeholder=\"Digite uma senha com mais de 4 caracteres\" \n                    value={props.values.password}\n                    onChange={e => props.setFieldValue('password', e.target.value)}\n                />\n                {props.touched.password && props.errors.password && \n                    <Form.Control.Feedback type=\"invalid\">{props.errors.password}</Form.Control.Feedback>\n                }                    \n            </Form.Group>\n\n            {props.values.password.length >= 3 &&\n                <Form.Group>\n                    <Form.Label>Confirme a Senha</Form.Label>\n                    <Form.Control \n                        type=\"password\" \n                        placeholder=\"Confirme a Senha\"\n                        value={props.values.confirm_password}\n                        onChange={e => props.setFieldValue('confirm_password', e.target.value)}\n                    />\n\n                    {props.touched.confirm_password && props.errors.confirm_password && \n                        <Form.Control.Feedback type=\"invalid\">{props.errors.confirm_password}</Form.Control.Feedback>\n                    }\n                </Form.Group>\n            }\n        \n            <div className=\"mt-3 mb-5 d-flex justify-content-between\">\n                <button className=\"btn btn-light\" type=\"button\" onClick={() => props.onCancel(false)}>\n                    Fazer Login\n                    <i className=\"fas fa-disk\"></i> \n                </button>                    \n                <button className=\"btn btn-primary\" type=\"submit\">\n                    Cadastre-se\n                    <i className=\"fas fa-disk\"></i> \n                    {props.isSubmitting && <Spinner animation=\"border\" role=\"status\" />}\n                </button>\n            </div>\n        </Form>            \n    );\n}\n\nexport default withFormik({\n  mapPropsToValues: props => ({ \n      name: 'tetse d eteste',\n      email: Math.random() + '@mail.co',\n      password: 'cleomar201',\n      confirm_password: 'cleomar201',\n      person_type: 'individual',\n      document: '570.294.160-82',\n      phone: '49561561616156'\n    }),\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string()\n      .required('Informe seu nome')\n      .test('real', 'Informe seu nome completo.', (value) => {\n          if (!value) return;\n\n          const count = value.split(' ');\n\n          if (!count[1]) {\n              return false;\n          }\n\n          return true;\n      }),      \n    email: Yup.string().email('Informe um e-mail válido')\n        .required('Informe seu e-mail'),\n    phone: Yup.string().required('Esse campo é obrigatório'),\n    password: Yup.string()\n            .min(4, 'Digite uma senha com mais de 4 caracteres')\n            .required('Digite uma senha'),\n    confirm_password: Yup.string()\n                        .required('Esse campo é obrigatório')\n                        .oneOf([Yup.ref('password'), null], 'As senhas não correspondem'),\n    document: Yup.string().required('Esse campo é obrigatório')\n  }),\n\n  handleSubmit: async (values, { setSubmitting, setErrors, props, setStatus }) => {\n      try {\n        setSubmitting(true);\n        const result = await post('/auth/register', values);\n\n        if (result.success) {\n            setStatus({ success: true, data: result });\n        }\n\n        if (result.errorValidation) {\n            result.error.map(e => {\n                let error = {};\n                error[e.field] = e.message;\n                setErrors(error);\n            });\n        }\n\n      } catch(error) {\n          console.log(error);\n          setErrors({ error: 'Não foi possível realizar seu cadastro. Tente novamente mais tarde.' });\n      }\n  },\n\n})(FormRegister);\n"]},"metadata":{},"sourceType":"module"}