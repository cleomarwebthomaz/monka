{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { ButtonGroup, ListGroup, Form, Spinner, Row, Col, Image, Card, Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { toast } from 'react-toastify';\nimport CheckoutComponent from './Checkout';\nimport Quantity from './Quantity';\nimport Voucher from './Voucher';\nimport Details from './components/Details';\nimport currency from '../../utils/currency';\nimport { showCart, loadCart } from '../../store/actions/cart';\nimport { get, patch, httpDelete } from '../../services/http';\nimport './styles.scss';\n\nfunction CartComponent() {\n  const {\n    0: addresses,\n    1: setAddresses\n  } = useState([]);\n  const {\n    0: addressSelected,\n    1: setAddressSelected\n  } = useState({});\n  const route = useRouter();\n  const dispatch = useDispatch();\n  const {\n    isLogged\n  } = useSelector(state => state.auth);\n  const {\n    show,\n    cart,\n    loading\n  } = useSelector(state => state.cart);\n  const {\n    0: openCheckout,\n    1: setOpenCheckout\n  } = useState(false);\n  useEffect(() => {\n    async function getAddresses() {\n      const result = await get('/myAddress');\n\n      if (result.length <= 0) {\n        toast.warning('Adicione um endereÃ§o para continuar', {\n          position: toast.POSITION.BOTTOM_CENTER\n        });\n        dispatch(showCart(false));\n        return route.push('/auth/access/register-address');\n      }\n\n      if (!addressSelected || !addressSelected.id) {\n        const addressDefault = result.find(item => item.is_default);\n        setAddressSelected(addressDefault);\n      }\n\n      setAddresses(result);\n    }\n\n    if (isLogged && show) getAddresses();\n  }, [isLogged, show]);\n\n  async function deleteItem(cartProduct) {\n    await httpDelete(`/cart/${cartProduct.cart_id}/product/${cartProduct.id}`);\n    dispatch(loadCart());\n  }\n\n  async function setAddress(address) {\n    setAddressSelected(address);\n    await patch(`/myAddress/set-default/${address.id}`, address);\n    dispatch(loadCart());\n  }\n\n  async function deleteItem(cartProduct) {\n    await httpDelete(`/cart/${cart.id}/product/${cartProduct.id}`);\n    dispatch(loadCart());\n  }\n\n  if (!show) return __jsx(\"div\", null);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    onClick: () => dispatch(showCart(false)),\n    className: \"cart-mask\"\n  }), __jsx(CheckoutComponent, {\n    show: openCheckout && cart.products.length > 0,\n    onHide: () => setOpenCheckout(),\n    addressSelected: addressSelected,\n    addresses: addresses,\n    cart: cart,\n    cartLoading: loading\n  }), __jsx(\"div\", {\n    id: \"block-cart\",\n    className: \"shadow animated fadeInRight faster\"\n  }, __jsx(\"div\", {\n    className: \"cart-header p-2 d-flex align-items-center border-bottom shadow justify-content-between\"\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center\"\n  }, __jsx(\"h4\", {\n    className: \"m-0 mr-1 text-light text-primary\"\n  }, \"Minha sacola\"), \"(\", cart.products.length, \") produto\", cart.products <= 1 ? '' : 's'), __jsx(\"button\", {\n    className: \"btn btn-light rounded-circle\",\n    onClick: () => dispatch(showCart(false))\n  }, __jsx(\"i\", {\n    className: \"fas fa-times\"\n  }))), __jsx(\"div\", {\n    className: \"body p-4 border-bottom\"\n  }, cart.products.length <= 0 && __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(\"h1\", null, \"Sua sacola est\\xE1 vazia\"), __jsx(\"div\", {\n    className: \"mt-5 empty-icon\"\n  }, __jsx(\"i\", {\n    className: \"far fa-frown-open\"\n  }))), cart.products.map(cartProduct => __jsx(\"div\", {\n    key: cartProduct.id\n  }, __jsx(Card, {\n    className: \"rounded position-relative mb-4 pt-1 pb-2 item border-0\",\n    key: cartProduct.id\n  }, __jsx(Row, {\n    key: cartProduct.id\n  }, __jsx(Col, {\n    xs: 4\n  }, __jsx(Image, {\n    src: cartProduct.product.image_url,\n    className: \"img-fluid\"\n  }), __jsx(\"div\", {\n    className: \"d-block d-sm-none\"\n  }, __jsx(Quantity, {\n    cartProduct: cartProduct\n  }))), __jsx(Col, {\n    xs: 8\n  }, __jsx(\"h6\", {\n    className: \"text-primary mb-0 mt-3\"\n  }, cartProduct.product.name), __jsx(\"strong\", null, cartProduct.observation), __jsx(Row, null, __jsx(Col, null, __jsx(\"div\", null, __jsx(\"b\", {\n    className: \"group-name text-secondary mb-0\"\n  }, \"Tamanho\")), cartProduct.option && __jsx(\"div\", {\n    className: \"group-value\"\n  }, cartProduct.option.name)), __jsx(Col, {\n    sm: 6,\n    className: \"pr-5 mt-4 mt-sm-0 d-none d-sm-block\"\n  }, __jsx(Quantity, {\n    cartProduct: cartProduct\n  }))), __jsx(Row, {\n    className: \"p-0 groups\"\n  }, cartProduct.groups.map(group => __jsx(Col, {\n    xs: 6,\n    key: group.id\n  }, __jsx(ListGroup, {\n    className: \"mb-2 list-groups\"\n  }, __jsx(ListGroup.Item, {\n    className: \"p-0 m-0 border-0 group-option\"\n  }, group.name), group.options.map(groupOption => __jsx(ListGroup.Item, {\n    className: \"p-0 m-0 border-0 group-option-name\",\n    key: groupOption.id\n  }, \"- \", groupOption.option.name, \" +\", __jsx(\"span\", {\n    className: \"text-muted\"\n  }, currency(groupOption.option.price))))))))), __jsx(Button, {\n    variant: \"danger\",\n    size: \"sm\",\n    className: \"rounded-circle btn-trash\",\n    onClick: () => {\n      deleteItem(cartProduct);\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-trash\"\n  })))))), cart.products.length > 0 && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"addresses ml-3 mr-3 mb-4\"\n  }, addresses.map(address => __jsx(Form.Group, {\n    key: address.id,\n    controlId: `address-${address.id}`,\n    className: \"mb-0\"\n  }, __jsx(Form.Check, {\n    type: \"radio\",\n    value: address.id,\n    checked: addressSelected && addressSelected.id === address.id,\n    label: `\n                                    ${address.street}, ${address.number} - \n                                    ${address.neighborhood.name} \n                                `,\n    onChange: () => setAddress(address)\n  })))), __jsx(Voucher, null), __jsx(Details, {\n    cart: cart,\n    loading: loading\n  }))), __jsx(\"div\", {\n    className: \"footer w-100 mt-3 d-flex flex-column border-top\"\n  }, __jsx(ButtonGroup, null, __jsx(\"div\", {\n    className: \"btn btn-light btn-lg rounded-0\"\n  }, \"Total: \", currency(cart.total_price)), __jsx(\"button\", {\n    className: \"btn btn-success btn-lg rounded-0\",\n    onClick: () => setOpenCheckout(true),\n    disabled: cart.products.length <= 0 || loading\n  }, \"Finalizar Pedido\", __jsx(\"i\", {\n    className: \"fas fa-chevron-right\"\n  }))))));\n}\n\nexport default CartComponent;","map":null,"metadata":{},"sourceType":"module"}