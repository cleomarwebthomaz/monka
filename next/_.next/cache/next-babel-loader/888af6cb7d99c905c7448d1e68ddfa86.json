{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from 'axios';\nimport { url } from '../config';\naxios.defaults.baseURL = url;\naxios.interceptors.request.use(function _callee(config) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", config);\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}, function (error) {\n  return _Promise.reject(error);\n});\nexport default axios;","map":null,"metadata":{},"sourceType":"module"}