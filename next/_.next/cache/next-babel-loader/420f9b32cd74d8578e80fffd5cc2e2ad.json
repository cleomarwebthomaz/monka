{"ast":null,"code":"var _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/pages/page/[slug]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport renderHTML from 'react-render-html';\nimport Layout from '../../../components/Layouts';\nimport Loading from '../../../components/Loading';\nimport { get } from '../../../services/http';\nimport Page from '../../../components/Page';\n\nfunction PageStatic() {\n  const {\n    0: page,\n    1: setPage\n  } = useState({});\n  const {\n    0: pageTitle,\n    1: setPageTitle\n  } = useState('Página');\n  const router = useRouter();\n  useEffect(() => {\n    async function getPageData() {\n      if (router.query.slug && router.query.slug) {\n        const page = await get(`/page/${router.query.slug}`);\n        setPageTitle(page.title);\n        setPage(page);\n      }\n    }\n\n    getPageData();\n  }, [router.query]);\n  const crumbs = [{\n    name: pageTitle\n  }];\n  if (!page.id) return __jsx(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n  return __jsx(Page, {\n    title: pageTitle,\n    crumbs: crumbs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Layout, {\n    pageTitle: pageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, renderHTML(page.content)));\n}\n\nexport default PageStatic;","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/pages/page/[slug]/index.js"],"names":["useEffect","useState","useRouter","renderHTML","Layout","Loading","get","Page","PageStatic","page","setPage","pageTitle","setPageTitle","router","getPageData","query","slug","title","crumbs","name","id","content"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AAEA,SAASC,GAAT,QAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;;AAEA,SAASC,UAAT,GAAsB;AAClB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACU,SAAD;AAAA,OAAYC;AAAZ,MAA4BX,QAAQ,CAAC,QAAD,CAA1C;AAEA,QAAMY,MAAM,GAAGX,SAAS,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAec,WAAf,GAA6B;AAEzB,UAAID,MAAM,CAACE,KAAP,CAAaC,IAAb,IAAqBH,MAAM,CAACE,KAAP,CAAaC,IAAtC,EAA4C;AACxC,cAAMP,IAAI,GAAG,MAAMH,GAAG,CAAE,SAAQO,MAAM,CAACE,KAAP,CAAaC,IAAK,EAA5B,CAAtB;AACAJ,QAAAA,YAAY,CAACH,IAAI,CAACQ,KAAN,CAAZ;AACAP,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH;AACJ;;AAEDK,IAAAA,WAAW;AACd,GAXQ,EAWN,CAACD,MAAM,CAACE,KAAR,CAXM,CAAT;AAaA,QAAMG,MAAM,GAAG,CACX;AAAEC,IAAAA,IAAI,EAAER;AAAR,GADW,CAAf;AAIA,MAAI,CAACF,IAAI,CAACW,EAAV,EAAc,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEd,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAET,SAAb;AAAwB,IAAA,MAAM,EAAEO,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEP,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,UAAU,CAACM,IAAI,CAACY,OAAN,CADf,CADJ,CADJ;AAOH;;AAGD,eAAeb,UAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport renderHTML from 'react-render-html';\n\nimport Layout from '../../../components/Layouts';\nimport Loading from '../../../components/Loading';\n\nimport { get } from '../../../services/http';\nimport Page from '../../../components/Page';\n\nfunction PageStatic() {\n    const [page, setPage] = useState({});\n    const [pageTitle, setPageTitle] = useState('Página');\n\n    const router = useRouter()\n\n    useEffect(() => {\n        async function getPageData() {\n            \n            if (router.query.slug && router.query.slug) {\n                const page = await get(`/page/${router.query.slug}`);\n                setPageTitle(page.title);\n                setPage(page);\n            }\n        }\n\n        getPageData();\n    }, [router.query]);\n\n    const crumbs = [\n        { name: pageTitle },\n    ];\n  \n    if (!page.id) return <Loading />;\n\n    return (\n        <Page title={pageTitle} crumbs={crumbs}>\n            <Layout pageTitle={pageTitle}>\n                {renderHTML(page.content)}\n            </Layout>\n        </Page>\n    );\n}\n\n\nexport default PageStatic;\n"]},"metadata":{},"sourceType":"module"}