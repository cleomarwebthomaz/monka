{"ast":null,"code":"var _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/pages/order/[id]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { Container, Table, Card, ListGroup, Alert, Button } from 'react-bootstrap';\nimport { withRouter } from 'next/router';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport PageTitle from '../../../components/PageTitle';\nimport Spinner from '../../../components/Spinner';\nimport Breadcrumb from '../../../components/Breadcrumb';\nimport ProductDetails from '../../../components/Pages/Order/productDetails';\nimport currency from '../../../utils/currency';\nimport { get } from '../../../services/http';\nimport { addCrumb, clearCrumbs } from '../../../store/actions/breadcrumb';\n\nfunction OrderDetails(props) {\n  const {\n    0: order,\n    1: setOrder\n  } = useState({});\n  const {\n    0: orderViewSelected,\n    1: setOrderViewSelected\n  } = useState({});\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: loadingCancelable,\n    1: setLoadingCancelable\n  } = useState(true);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(clearCrumbs());\n    dispatch(addCrumb('Meus Pedidos', '/order'));\n    dispatch(addCrumb('Detalhes'));\n  }, []);\n  useEffect(() => {\n    async function fetchData() {\n      if (props.router.query.id) {\n        const data = await get(`/order/${props.router.query.id}`);\n        setOrder(data);\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [props.router.query.id]);\n\n  function onCancel() {\n    try {} catch (error) {\n      toast.success('Pedido cancelado com sucesso!', {\n        position: toast.POSITION.BOTTOM_CENTER\n      });\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(ProductDetails, {\n    showDetails: orderViewSelected.id > 0,\n    cartProduct: orderViewSelected,\n    closeDetails: () => setOrderViewSelected({}),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), __jsx(PageTitle, {\n    title: loading ? 'Pedido' : `Pedido #${order.id}`,\n    className: \"d-flex justify-content-between align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/order\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"btn btn-sm btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-chevron-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), \" Voltar\")))), loading && __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), !loading && __jsx(React.Fragment, null, __jsx(Card, {\n    className: \"mb-4 mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Pedido\"), __jsx(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Alert, {\n    variant: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, order.state.name), __jsx(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Valor Total:\"), \" \", currency(order.total_price)), __jsx(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Quantidade de Produtos:\"), \" (\", order.cart.__meta__.products_count, \")\"), __jsx(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Data da Compra:\"), \" \", order.created_at)))), __jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Produtos\"), __jsx(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Produto\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Valor\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Quantidade\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Total\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, order.cart.products.map(cartProduct => __jsx(\"tr\", {\n    key: cartProduct.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, cartProduct.product.name, __jsx(\"span\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, cartProduct.option && cartProduct.option.name)), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, currency(cartProduct.price_unity)), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, cartProduct.quantity), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, currency(cartProduct.total_price)), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(Button, {\n    size: \"sm\",\n    onClick: () => setOrderViewSelected(cartProduct),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-eye\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }))))))))), __jsx(\"div\", {\n    className: \"mt-5 mb-5 d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-chevron-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), \"Continuar Comprando\")), order.state.cancelable && __jsx(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: onCancel,\n    disabled: loadingCancelable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-times mr-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), !loadingCancelable && __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Cancelar Pedido\"), loadingCancelable && __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), __jsx(Link, {\n    href: \"/account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Ir para minha Conta\", __jsx(\"i\", {\n    className: \"fas fa-chevron-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })))))));\n}\n\nexport default withRouter(OrderDetails);","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/pages/order/[id]/index.js"],"names":["useEffect","useState","Link","Container","Table","Card","ListGroup","Alert","Button","withRouter","useDispatch","toast","PageTitle","Spinner","Breadcrumb","ProductDetails","currency","get","addCrumb","clearCrumbs","OrderDetails","props","order","setOrder","orderViewSelected","setOrderViewSelected","loading","setLoading","loadingCancelable","setLoadingCancelable","dispatch","fetchData","router","query","id","data","onCancel","error","success","position","POSITION","BOTTOM_CENTER","state","name","total_price","cart","__meta__","products_count","created_at","products","map","cartProduct","product","option","price_unity","quantity","cancelable"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { Container, Table, Card, ListGroup, Alert, Button } from 'react-bootstrap';\nimport { withRouter } from 'next/router'\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport PageTitle from '../../../components/PageTitle';\nimport Spinner from '../../../components/Spinner';\nimport Breadcrumb from '../../../components/Breadcrumb';\n\nimport ProductDetails from '../../../components/Pages/Order/productDetails';\n\nimport currency from '../../../utils/currency';\nimport { get } from '../../../services/http';\nimport { addCrumb, clearCrumbs } from '../../../store/actions/breadcrumb';\n\nfunction OrderDetails(props) {\n  const [order, setOrder] = useState({});\n  const [orderViewSelected, setOrderViewSelected] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [loadingCancelable, setLoadingCancelable] = useState(true);\n  \n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(clearCrumbs());\n    dispatch(addCrumb('Meus Pedidos', '/order'));\n    dispatch(addCrumb('Detalhes'));\n  }, []);\n\n  useEffect(() => {\n    async function fetchData() {\n      if (props.router.query.id) {\n        const data = await get(`/order/${props.router.query.id}`);\n        setOrder(data);\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [props.router.query.id]);\n\n  function onCancel() {\n    try {\n      \n    } catch (error) {\n      toast.success('Pedido cancelado com sucesso!', { position: toast.POSITION.BOTTOM_CENTER });\n    }\n  }\n\n  return (\n    <>\n      <ProductDetails \n        showDetails={orderViewSelected.id > 0}\n        cartProduct={orderViewSelected}\n        closeDetails={() => setOrderViewSelected({})}\n      />\n\n      <Container>\n          <Breadcrumb />\n\n          <PageTitle \n              title={loading ? 'Pedido' : `Pedido #${order.id}`} \n              className=\"d-flex justify-content-between align-items-center\"\n          >\n            <div>\n              <Link href=\"/order\">\n                  <a className=\"btn btn-sm btn-primary\">\n                    <i className=\"fas fa-chevron-left\"></i> Voltar\n                  </a>\n              </Link>\n            </div>\n          </PageTitle>\n\n          {loading && <Spinner /> }\n\n          {!loading &&\n          <>\n            <Card className=\"mb-4 mt-4\">\n              <Card.Header>Pedido</Card.Header>\n              <Card.Body>\n                <Alert variant=\"warning\">{order.state.name}</Alert>\n                <ListGroup>\n                    <ListGroup.Item><strong>Valor Total:</strong> {currency(order.total_price)}</ListGroup.Item>\n                    <ListGroup.Item><strong>Quantidade de Produtos:</strong> ({order.cart.__meta__.products_count})</ListGroup.Item>\n                    <ListGroup.Item><strong>Data da Compra:</strong> {order.created_at}</ListGroup.Item>\n                </ListGroup>\n              </Card.Body>\n            </Card>\n\n            <Card>\n              <Card.Header>Produtos</Card.Header>\n              <Card.Body>\n                \n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Produto</th>\n                    <th>Valor</th>\n                    <th>Quantidade</th>\n                    <th>Total</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {order.cart.products.map(cartProduct => \n                    <tr key={cartProduct.id}>\n                      <td>\n                        {cartProduct.product.name}\n                        <span className=\"text-muted\">{cartProduct.option && cartProduct.option.name}</span>\n                      </td>\n                      <td>{currency(cartProduct.price_unity)}</td>\n                      <td>{cartProduct.quantity}</td>\n                      <td>{currency(cartProduct.total_price)}</td>\n                      <td>\n                        <Button\n                          size=\"sm\"  \n                          onClick={() => setOrderViewSelected(cartProduct)}\n                        >\n                          <i className=\"fas fa-eye\"></i> \n                        </Button>\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </Table>\n\n              </Card.Body>\n            </Card>\n\n            <div className=\"mt-5 mb-5 d-flex justify-content-between\">\n                <Link href=\"/\">\n                  <a className=\"btn btn-light\">\n                    <i className=\"fas fa-chevron-left\"></i> \n                    Continuar Comprando  \n                  </a>\n                </Link>\n\n                {order.state.cancelable &&\n                  <button className=\"btn btn-danger\" onClick={onCancel} disabled={loadingCancelable}>\n                      <i className=\"fas fa-times mr-1\"></i> \n                      {!loadingCancelable && <span>Cancelar Pedido</span>}\n                      {loadingCancelable && <Spinner />}\n                  </button>\n                }\n\n                <Link href=\"/account\">\n                  <a className=\"btn btn-primary\">\n                    Ir para minha Conta\n                    <i className=\"fas fa-chevron-right\"></i> \n                  </a>\n                </Link>\n              </div>\n\n            </>\n          }\n\n      </Container>  \n    </>\n  );\n\n}\n\nexport default withRouter(OrderDetails);"]},"metadata":{},"sourceType":"module"}