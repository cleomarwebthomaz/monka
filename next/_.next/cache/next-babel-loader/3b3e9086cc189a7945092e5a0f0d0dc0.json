{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from '../../types/setting';\nvar INITIAL_STATE = {\n  setting: {},\n  loaded: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.SET_SETTING:\n      return _objectSpread({}, state, {\n        setting: action.payload,\n        loaded: true\n      });\n      break;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/store/reducers/setting/index.js"],"names":["actionTypes","INITIAL_STATE","setting","loaded","state","action","type","SET_SETTING","payload"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,qBAA7B;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE,EADS;AAElBC,EAAAA,MAAM,EAAE;AAFU,CAAtB;AAKA,gBAAe,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BH,aAA0B;AAAA,MAAXI,MAAW;;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,WAAW,CAACO,WAAjB;AACI,+BAAWH,KAAX;AAAkBF,QAAAA,OAAO,EAAEG,MAAM,CAACG,OAAlC;AAA2CL,QAAAA,MAAM,EAAE;AAAnD;AACJ;;AAEA;AACI,aAAOC,KAAP;AANR;AAQH,CATD","sourcesContent":["import * as actionTypes from '../../types/setting';\n\nconst INITIAL_STATE = {\n    setting: {},\n    loaded: false\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case actionTypes.SET_SETTING:\n            return {...state, setting: action.payload, loaded: true};\n        break;\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}