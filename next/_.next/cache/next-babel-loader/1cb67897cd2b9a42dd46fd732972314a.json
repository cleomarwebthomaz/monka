{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport fetch from 'isomorphic-unfetch';\nimport cookie from \"js-cookie\";\nimport { url as baseUrl } from '../config';\nexport function get(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new _Promise(function _callee(resolve, reject) {\n    var res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(baseUrl + url, {\n              method: 'GET',\n              headers: {\n                // 'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(cookie.get('token'))\n              }\n            }));\n\n          case 3:\n            res = _context.sent;\n            // const data = await res.json();\n            console.log(res);\n            resolve(data);\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            reject(_context.t0.message);\n            console.log(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]]);\n  });\n}\nexport function post(url, values) {\n  return new _Promise(function _callee2(resolve) {\n    var token, res, data;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            token = cookie.get('token');\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(baseUrl + url, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(token || '')\n              },\n              body: _JSON$stringify(values)\n            }));\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 6:\n            data = _context2.sent;\n            resolve(data);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  });\n}\nexport function patch(url, values) {\n  return new _Promise(function _callee3(resolve) {\n    var res, data;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(fetch(baseUrl + url, {\n              method: 'PATCH',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(cookie.get('token'))\n              },\n              body: _JSON$stringify(values)\n            }));\n\n          case 2:\n            res = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 5:\n            data = _context3.sent;\n            resolve(data);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  });\n}\nexport function httpDelete(url) {\n  return new _Promise(function _callee4(resolve) {\n    var res, data;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(fetch(baseUrl + url, {\n              method: 'DELETE',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(cookie.get('token'))\n              }\n            }));\n\n          case 2:\n            res = _context4.sent;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 5:\n            data = _context4.sent;\n            resolve(data);\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  });\n}","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/services/http.js"],"names":["fetch","cookie","url","baseUrl","get","params","resolve","reject","method","headers","res","console","log","data","message","post","values","token","body","json","patch","httpDelete"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport cookie from \"js-cookie\";\n\nimport { url as baseUrl } from '../config';\n\nexport function get(url, params = {}) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const res = await fetch(baseUrl + url, {\n                method: 'GET',\n                headers: {\n                // 'Content-Type': 'application/json',\n                'Authorization': `Bearer ${cookie.get('token')}`\n                },\n            });\n\n            // const data = await res.json();\n\n            console.log(res)\n\n            resolve(data);\n        } catch (error) {\n            reject(error.message);\n            console.log(error);\n        }\n    });\n}\n\nexport function post(url, values) {\n    return new Promise(async (resolve) => {\n\n        const token = cookie.get('token');\n\n        const res = await fetch(baseUrl + url, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token || ''}`\n            },\n            body: JSON.stringify(values)\n        });\n\n        const data = await res.json();\n\n        resolve(data);\n    });\n}\n\nexport function patch(url, values) {\n    return new Promise(async (resolve) => {\n\n        const res = await fetch(baseUrl + url, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${cookie.get('token')}`\n            },\n            body: JSON.stringify(values)\n        });\n\n        const data = await res.json();\n\n        resolve(data);\n    });\n}\n\nexport function httpDelete(url) {\n    return new Promise(async (resolve) => {\n\n        const res = await fetch(baseUrl + url, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${cookie.get('token')}`\n            },\n        });\n\n        const data = await res.json();\n\n        resolve(data);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}