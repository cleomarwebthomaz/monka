{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/components/Pages/Addresses/form.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useRouter } from 'next/router';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { withRouter } from 'next/router';\nimport Spinner from '../../Spinner';\nimport Loading from '../../Loading';\nimport { get, patch, post } from '../../../services/http';\n\nfunction ChangePasswordForm(props) {\n  var router = useRouter();\n\n  var _useState = useState([]),\n      neighborhoods = _useState[0],\n      setNeighborhoods = _useState[1];\n\n  useEffect(function () {\n    if (props.status && props.status.success) {\n      toast.success('Salvo com sucesso!', {\n        position: toast.POSITION.BOTTOM_CENTER\n      });\n      router.push('/account/addresses');\n    }\n  }, [props.status]);\n  useEffect(function () {\n    function getNeighborhoods() {\n      var result, data;\n      return _regeneratorRuntime.async(function getNeighborhoods$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(get('/neighborhood'));\n\n            case 2:\n              result = _context.sent;\n              data = result.map(function (neighborhood) {\n                return {\n                  label: neighborhood.name,\n                  value: neighborhood.id\n                };\n              });\n              setNeighborhoods(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    getNeighborhoods();\n  }, [props.router]);\n  useEffect(function () {\n    function getNeighborhood() {\n      var result, neighborhood;\n      return _regeneratorRuntime.async(function getNeighborhood$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(props.router.query.id && neighborhoods.length > 0)) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(get(\"/myAddress/\".concat(props.router.query.id)));\n\n            case 3:\n              result = _context2.sent;\n              neighborhood = neighborhoods.find(function (item) {\n                return item.value === result.neighborhood_id;\n              });\n              props.setFieldValue('id', result.id);\n              props.setFieldValue('street', result.street);\n              props.setFieldValue('number', result.number);\n              props.setFieldValue('complement', result.complement || '');\n              props.setFieldValue('neighborhood_id', neighborhood);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n\n    getNeighborhood();\n  }, [neighborhoods]);\n  if (neighborhoods.length <= 0) return __jsx(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  });\n  return __jsx(Form, {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Cidade\"), __jsx(Form.Control, {\n    value: \"Cascavel PR\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))), __jsx(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Bairro\"), __jsx(Select, {\n    options: neighborhoods,\n    placeholder: \"Selecione o Bairro\",\n    value: props.values.neighborhood_id,\n    onChange: function onChange(value) {\n      return props.setFieldValue('neighborhood_id', value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), props.touched.neighborhood_id && props.errors.neighborhood_id && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, props.errors.neighborhood_id)))), __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Rua\"), __jsx(Form.Control, {\n    onChange: function onChange(e) {\n      return props.setFieldValue('street', e.target.value);\n    },\n    value: props.values.street,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), props.touched.street && props.errors.street && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, props.errors.street))), __jsx(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"N\\xBA\"), __jsx(Form.Control, {\n    type: \"number\",\n    onChange: function onChange(e) {\n      return props.setFieldValue('number', e.target.value);\n    },\n    value: props.values.number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), props.touched.number && props.errors.number && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, props.errors.number)))), __jsx(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Complemento\"), __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    value: props.values.complement,\n    onChange: function onChange(e) {\n      return props.setFieldValue('complement', e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), props.touched.complement && props.errors.complement && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, props.errors.complement)), __jsx(\"div\", {\n    className: \"mt-3 mb-5 d-flex justify-content-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    disabled: props.isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Salvar\", __jsx(\"i\", {\n    className: \"fas fa-disk\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), props.isSubmitting && __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }))));\n}\n\nexport default withFormik({\n  mapPropsToValues: function mapPropsToValues(props) {\n    return {\n      id: '',\n      street: '',\n      number: '',\n      neighborhood_id: {},\n      complement: ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    street: Yup.string().required('Informe uma nova senha'),\n    number: Yup.number().required('Informe o número').positive('Digite apenas número').integer('Digite apenas número'),\n    neighborhood_id: Yup.object().required('Selecione o bairro')\n  }),\n  handleSubmit: function handleSubmit(values, _ref) {\n    var setSubmitting, setErrors, setStatus, result;\n    return _regeneratorRuntime.async(function handleSubmit$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setSubmitting = _ref.setSubmitting, setErrors = _ref.setErrors, setStatus = _ref.setStatus;\n            _context3.prev = 1;\n            setSubmitting(true);\n\n            if (values.neighborhood_id.value) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", setErrors({\n              neighborhood_id: 'Selecione o bairro'\n            }));\n\n          case 5:\n            if (!values.id) {\n              _context3.next = 11;\n              break;\n            }\n\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(patch(\"/myAddress/\".concat(values.id), _objectSpread({}, values, {\n              neighborhood_id: values.neighborhood_id.value\n            })));\n\n          case 8:\n            result = _context3.sent;\n            _context3.next = 14;\n            break;\n\n          case 11:\n            _context3.next = 13;\n            return _regeneratorRuntime.awrap(post(\"/myAddress\", _objectSpread({}, values, {\n              neighborhood_id: values.neighborhood_id.value\n            })));\n\n          case 13:\n            result = _context3.sent;\n\n          case 14:\n            if (result.success) {\n              setSubmitting(false);\n              setStatus({\n                success: true\n              });\n            }\n\n            if (result.validations) {\n              result.validations.map(function (e) {\n                var error = {};\n                error[e.field] = e.message;\n                setErrors(error);\n              });\n            }\n\n            _context3.next = 22;\n            break;\n\n          case 18:\n            _context3.prev = 18;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.log(_context3.t0);\n            setErrors({\n              error: 'Não foi possível salvar. Tente novamente.'\n            });\n\n          case 22:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 18]]);\n  }\n})(withRouter(ChangePasswordForm));","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/components/Pages/Addresses/form.js"],"names":["Form","Button","Row","Col","useRouter","withFormik","Yup","toast","useEffect","useState","Select","withRouter","Spinner","Loading","get","patch","post","ChangePasswordForm","props","router","neighborhoods","setNeighborhoods","status","success","position","POSITION","BOTTOM_CENTER","push","getNeighborhoods","result","data","map","neighborhood","label","name","value","id","getNeighborhood","query","length","find","item","neighborhood_id","setFieldValue","street","number","complement","handleSubmit","values","touched","errors","e","target","isSubmitting","mapPropsToValues","validationSchema","object","shape","string","required","positive","integer","setSubmitting","setErrors","setStatus","validations","error","field","message","console","log"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,IAArB,QAAiC,wBAAjC;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/B,MAAMC,MAAM,GAAGf,SAAS,EAAxB;;AAD+B,kBAEWK,QAAQ,CAAC,EAAD,CAFnB;AAAA,MAExBW,aAFwB;AAAA,MAETC,gBAFS;;AAI/Bb,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIU,KAAK,CAACI,MAAN,IAAgBJ,KAAK,CAACI,MAAN,CAAaC,OAAjC,EAA0C;AACtChB,MAAAA,KAAK,CAACgB,OAAN,CAAc,oBAAd,EAAoC;AAChCC,QAAAA,QAAQ,EAAEjB,KAAK,CAACkB,QAAN,CAAeC;AADO,OAApC;AAIAP,MAAAA,MAAM,CAACQ,IAAP,CAAY,oBAAZ;AACH;AACJ,GARQ,EAQN,CAACT,KAAK,CAACI,MAAP,CARM,CAAT;AAUAd,EAAAA,SAAS,CAAC,YAAM;AACZ,aAAeoB,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACyBd,GAAG,CAAC,eAAD,CAD5B;;AAAA;AACUe,cAAAA,MADV;AAEUC,cAAAA,IAFV,GAEiBD,MAAM,CAACE,GAAP,CAAW,UAAAC,YAAY,EAAI;AACpC,uBAAO;AAAEC,kBAAAA,KAAK,EAAED,YAAY,CAACE,IAAtB;AAA4BC,kBAAAA,KAAK,EAAEH,YAAY,CAACI;AAAhD,iBAAP;AACH,eAFY,CAFjB;AAMIf,cAAAA,gBAAgB,CAACS,IAAD,CAAhB;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASAF,IAAAA,gBAAgB;AACnB,GAXQ,EAWN,CAACV,KAAK,CAACC,MAAP,CAXM,CAAT;AAaAX,EAAAA,SAAS,CAAC,YAAM;AACZ,aAAe6B,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQnB,KAAK,CAACC,MAAN,CAAamB,KAAb,CAAmBF,EAAnB,IAAyBhB,aAAa,CAACmB,MAAd,GAAuB,CADxD;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAE6BzB,GAAG,sBAAeI,KAAK,CAACC,MAAN,CAAamB,KAAb,CAAmBF,EAAlC,EAFhC;;AAAA;AAEcP,cAAAA,MAFd;AAIcG,cAAAA,YAJd,GAI6BZ,aAAa,CAACoB,IAAd,CAAmB,UAAAC,IAAI;AAAA,uBAAIA,IAAI,CAACN,KAAL,KAAeN,MAAM,CAACa,eAA1B;AAAA,eAAvB,CAJ7B;AAMQxB,cAAAA,KAAK,CAACyB,aAAN,CAAoB,IAApB,EAA0Bd,MAAM,CAACO,EAAjC;AACAlB,cAAAA,KAAK,CAACyB,aAAN,CAAoB,QAApB,EAA8Bd,MAAM,CAACe,MAArC;AACA1B,cAAAA,KAAK,CAACyB,aAAN,CAAoB,QAApB,EAA8Bd,MAAM,CAACgB,MAArC;AACA3B,cAAAA,KAAK,CAACyB,aAAN,CAAoB,YAApB,EAAkCd,MAAM,CAACiB,UAAP,IAAqB,EAAvD;AACA5B,cAAAA,KAAK,CAACyB,aAAN,CAAoB,iBAApB,EAAuCX,YAAvC;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcAK,IAAAA,eAAe;AAClB,GAhBQ,EAgBN,CAACjB,aAAD,CAhBM,CAAT;AAkBA,MAAIA,aAAa,CAACmB,MAAd,IAAwB,CAA5B,EAA+B,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAE/B,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAErB,KAAK,CAAC6B,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,EAAC,aAApB;AAAkC,IAAA,QAAQ,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ,EAOI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,MAAC,MAAD;AACI,IAAA,OAAO,EAAE3B,aADb;AAEI,IAAA,WAAW,EAAC,oBAFhB;AAGI,IAAA,KAAK,EAAEF,KAAK,CAAC8B,MAAN,CAAaN,eAHxB;AAII,IAAA,QAAQ,EAAE,kBAAAP,KAAK;AAAA,aAAIjB,KAAK,CAACyB,aAAN,CAAoB,iBAApB,EAAuCR,KAAvC,CAAJ;AAAA,KAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQKjB,KAAK,CAAC+B,OAAN,CAAcP,eAAd,IAAiCxB,KAAK,CAACgC,MAAN,CAAaR,eAA9C,IACG,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCxB,KAAK,CAACgC,MAAN,CAAaR,eAApD,CATR,CADJ,CAPJ,CADJ,EAwBI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI,MAAC,IAAD,CAAM,OAAN;AACI,IAAA,QAAQ,EAAE,kBAAAS,CAAC;AAAA,aAAIjC,KAAK,CAACyB,aAAN,CAAoB,QAApB,EAA8BQ,CAAC,CAACC,MAAF,CAASjB,KAAvC,CAAJ;AAAA,KADf;AAEI,IAAA,KAAK,EAAEjB,KAAK,CAAC8B,MAAN,CAAaJ,MAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAMK1B,KAAK,CAAC+B,OAAN,CAAcL,MAAd,IAAwB1B,KAAK,CAACgC,MAAN,CAAaN,MAArC,IACG,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuC1B,KAAK,CAACgC,MAAN,CAAaN,MAApD,CAPR,CADJ,CADJ,EAaI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,MAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,QAAQ,EAAE,kBAAAO,CAAC;AAAA,aAAIjC,KAAK,CAACyB,aAAN,CAAoB,QAApB,EAA8BQ,CAAC,CAACC,MAAF,CAASjB,KAAvC,CAAJ;AAAA,KAFf;AAGI,IAAA,KAAK,EAAEjB,KAAK,CAAC8B,MAAN,CAAaH,MAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOK3B,KAAK,CAAC+B,OAAN,CAAcJ,MAAd,IAAwB3B,KAAK,CAACgC,MAAN,CAAaL,MAArC,IACG,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuC3B,KAAK,CAACgC,MAAN,CAAaL,MAApD,CARR,CADJ,CAbJ,CAxBJ,EAoDI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,MAAC,IAAD,CAAM,OAAN;AACI,IAAA,EAAE,EAAC,UADP;AAEI,IAAA,IAAI,EAAC,GAFT;AAGI,IAAA,KAAK,EAAE3B,KAAK,CAAC8B,MAAN,CAAaF,UAHxB;AAII,IAAA,QAAQ,EAAE,kBAAAK,CAAC;AAAA,aAAIjC,KAAK,CAACyB,aAAN,CAAoB,YAApB,EAAkCQ,CAAC,CAACC,MAAF,CAASjB,KAA3C,CAAJ;AAAA,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQKjB,KAAK,CAAC+B,OAAN,CAAcH,UAAd,IAA4B5B,KAAK,CAACgC,MAAN,CAAaJ,UAAzC,IACG,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuC5B,KAAK,CAACgC,MAAN,CAAaJ,UAApD,CATR,CApDJ,EAiEI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,IAAI,EAAC,QAAzC;AAAkD,IAAA,QAAQ,EAAE5B,KAAK,CAACmC,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKnC,KAAK,CAACmC,YAAN,IAAsB,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH3B,CADJ,CAjEJ,CADJ;AA4EH;;AAED,eAAehD,UAAU,CAAC;AACtBiD,EAAAA,gBAAgB,EAAE,0BAAApC,KAAK;AAAA,WAAK;AACxBkB,MAAAA,EAAE,EAAE,EADoB;AAExBQ,MAAAA,MAAM,EAAE,EAFgB;AAGxBC,MAAAA,MAAM,EAAE,EAHgB;AAIxBH,MAAAA,eAAe,EAAE,EAJO;AAKxBI,MAAAA,UAAU,EAAE;AALY,KAAL;AAAA,GADD;AAStBS,EAAAA,gBAAgB,EAAEjD,GAAG,CAACkD,MAAJ,GAAaC,KAAb,CAAmB;AACjCb,IAAAA,MAAM,EAAEtC,GAAG,CAACoD,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CADyB;AAEjCd,IAAAA,MAAM,EAAEvC,GAAG,CAACuC,MAAJ,GAAac,QAAb,CAAsB,kBAAtB,EAA0CC,QAA1C,CAAmD,sBAAnD,EAA2EC,OAA3E,CAAmF,sBAAnF,CAFyB;AAGjCnB,IAAAA,eAAe,EAAEpC,GAAG,CAACkD,MAAJ,GAAaG,QAAb,CAAsB,oBAAtB;AAHgB,GAAnB,CATI;AAetBZ,EAAAA,YAAY,EAAE,sBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBc,YAAAA,aAAjB,QAAiBA,aAAjB,EAAgCC,SAAhC,QAAgCA,SAAhC,EAA2CC,SAA3C,QAA2CA,SAA3C;AAAA;AAENF,YAAAA,aAAa,CAAC,IAAD,CAAb;;AAFM,gBAIDd,MAAM,CAACN,eAAP,CAAuBP,KAJtB;AAAA;AAAA;AAAA;;AAAA,8CAKK4B,SAAS,CAAC;AAAErB,cAAAA,eAAe,EAAG;AAApB,aAAD,CALd;;AAAA;AAAA,iBASFM,MAAM,CAACZ,EATL;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAUarB,KAAK,sBAAeiC,MAAM,CAACZ,EAAtB,qBACbY,MADa;AAEhBN,cAAAA,eAAe,EAAEM,MAAM,CAACN,eAAP,CAAuBP;AAFxB,eAVlB;;AAAA;AAUFN,YAAAA,MAVE;AAAA;AAAA;;AAAA;AAAA;AAAA,6CAeab,IAAI,iCACZgC,MADY;AAEfN,cAAAA,eAAe,EAAEM,MAAM,CAACN,eAAP,CAAuBP;AAFzB,eAfjB;;AAAA;AAeFN,YAAAA,MAfE;;AAAA;AAqBN,gBAAIA,MAAM,CAACN,OAAX,EAAoB;AAChBuC,cAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,cAAAA,SAAS,CAAC;AAAEzC,gBAAAA,OAAO,EAAE;AAAX,eAAD,CAAT;AACH;;AAED,gBAAIM,MAAM,CAACoC,WAAX,EAAwB;AACpBpC,cAAAA,MAAM,CAACoC,WAAP,CAAmBlC,GAAnB,CAAuB,UAAAoB,CAAC,EAAI;AACxB,oBAAIe,KAAK,GAAG,EAAZ;AACAA,gBAAAA,KAAK,CAACf,CAAC,CAACgB,KAAH,CAAL,GAAiBhB,CAAC,CAACiB,OAAnB;AACAL,gBAAAA,SAAS,CAACG,KAAD,CAAT;AACH,eAJD;AAKH;;AAhCK;AAAA;;AAAA;AAAA;AAAA;AAmCNG,YAAAA,OAAO,CAACC,GAAR;AACAP,YAAAA,SAAS,CAAC;AAAEG,cAAAA,KAAK,EAAE;AAAT,aAAD,CAAT;;AApCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfQ,CAAD,CAAV,CAuDVvD,UAAU,CAACM,kBAAD,CAvDA,CAAf","sourcesContent":["import { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useRouter } from 'next/router';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { withRouter } from 'next/router'\n\nimport Spinner from '../../Spinner';\nimport Loading from '../../Loading';\n\nimport { get, patch, post } from '../../../services/http';\n\nfunction ChangePasswordForm(props) {\n    const router = useRouter();\n    const [neighborhoods, setNeighborhoods] = useState([]);\n    \n    useEffect(() => {\n        if (props.status && props.status.success) {\n            toast.success('Salvo com sucesso!', {\n                position: toast.POSITION.BOTTOM_CENTER\n            });\n\n            router.push('/account/addresses');\n        }\n    }, [props.status])\n\n    useEffect(() => {\n        async function getNeighborhoods() {\n            const result = await get('/neighborhood');\n            const data = result.map(neighborhood => {\n                return { label: neighborhood.name, value: neighborhood.id }\n            });\n\n            setNeighborhoods(data);\n        }\n      \n        getNeighborhoods();\n    }, [props.router]);\n\n    useEffect(() => {\n        async function getNeighborhood() {\n            if (props.router.query.id && neighborhoods.length > 0) {\n                const result = await get(`/myAddress/${props.router.query.id}`);\n\n                const neighborhood = neighborhoods.find(item => item.value === result.neighborhood_id);\n\n                props.setFieldValue('id', result.id);\n                props.setFieldValue('street', result.street);\n                props.setFieldValue('number', result.number);\n                props.setFieldValue('complement', result.complement || '');\n                props.setFieldValue('neighborhood_id', neighborhood);\n            }\n        }\n\n        getNeighborhood();\n    }, [neighborhoods]);\n\n    if (neighborhoods.length <= 0) return <Loading />;\n\n    return (\n        <Form onSubmit={props.handleSubmit}>\n            <Row>\n                <Col>\n                    <Form.Group>\n                        <Form.Label>Cidade</Form.Label>\n                        <Form.Control value=\"Cascavel PR\" disabled />\n                    </Form.Group>                        \n                </Col>\n                <Col>\n                    <Form.Group>\n                        <Form.Label>Bairro</Form.Label>\n                        <Select\n                            options={neighborhoods}\n                            placeholder=\"Selecione o Bairro\"\n                            value={props.values.neighborhood_id}\n                            onChange={value => props.setFieldValue('neighborhood_id', value)}\n                        />\n                        {props.touched.neighborhood_id && props.errors.neighborhood_id && \n                            <Form.Control.Feedback type=\"invalid\">{props.errors.neighborhood_id}</Form.Control.Feedback>\n                        }\n                    </Form.Group>                        \n                </Col>\n            </Row>\n\n            <Row>\n                <Col xs={8}>\n                    <Form.Group>\n                        <Form.Label>Rua</Form.Label>\n                        <Form.Control \n                            onChange={e => props.setFieldValue('street', e.target.value)}\n                            value={props.values.street}\n                        />\n                        {props.touched.street && props.errors.street && \n                            <Form.Control.Feedback type=\"invalid\">{props.errors.street}</Form.Control.Feedback>\n                        }\n                    </Form.Group>                        \n                </Col>\n                <Col>\n                    <Form.Group>\n                        <Form.Label>Nº</Form.Label>\n                        <Form.Control \n                            type=\"number\"\n                            onChange={e => props.setFieldValue('number', e.target.value)}\n                            value={props.values.number}\n                        />\n                        {props.touched.number && props.errors.number && \n                            <Form.Control.Feedback type=\"invalid\">{props.errors.number}</Form.Control.Feedback>\n                        }\n                    </Form.Group>\n                </Col>\n            </Row>\n\n            <Form.Group>\n                <Form.Label>Complemento</Form.Label>\n                <Form.Control \n                    as=\"textarea\"\n                    rows=\"3\" \n                    value={props.values.complement}\n                    onChange={e => props.setFieldValue('complement', e.target.value)}\n                />\n                {props.touched.complement && props.errors.complement && \n                    <Form.Control.Feedback type=\"invalid\">{props.errors.complement}</Form.Control.Feedback>\n                }                        \n            </Form.Group>\n\n            <div className=\"mt-3 mb-5 d-flex justify-content-end\">\n                <button className=\"btn btn-primary\" type=\"submit\" disabled={props.isSubmitting}>\n                    Salvar  \n                    <i className=\"fas fa-disk\"></i> \n                    {props.isSubmitting && <Spinner />}\n                </button>\n            </div>\n        </Form>\n    );\n    \n}\n\nexport default withFormik({\n    mapPropsToValues: props => ({ \n        id: '', \n        street: '', \n        number: '', \n        neighborhood_id: {}, \n        complement: ''\n    }),\n  \n    validationSchema: Yup.object().shape({\n        street: Yup.string().required('Informe uma nova senha'),\n        number: Yup.number().required('Informe o número').positive('Digite apenas número').integer('Digite apenas número'),\n        neighborhood_id: Yup.object().required('Selecione o bairro'),\n    }),\n  \n    handleSubmit: async (values, { setSubmitting, setErrors, setStatus }) => {\n        try {\n            setSubmitting(true);\n\n            if (!values.neighborhood_id.value) {\n                return setErrors({ neighborhood_id:  'Selecione o bairro' });\n            }\n            \n            let result;\n            if (values.id) {\n                result = await patch(`/myAddress/${values.id}`, {\n                    ...values,\n                    neighborhood_id: values.neighborhood_id.value\n                });\n            } else {\n                result = await post(`/myAddress`, {\n                    ...values,\n                    neighborhood_id: values.neighborhood_id.value\n                });\n            }\n\n            if (result.success) {\n                setSubmitting(false);\n                setStatus({ success: true });\n            }\n    \n            if (result.validations) {\n                result.validations.map(e => {\n                    let error = {};\n                    error[e.field] = e.message;\n                    setErrors(error);\n                });\n            }\n  \n        } catch(error) {\n            console.log(error)\n            setErrors({ error: 'Não foi possível salvar. Tente novamente.' });\n        }\n    },\n  \n  })(withRouter(ChangePasswordForm));\n  \n  "]},"metadata":{},"sourceType":"module"}