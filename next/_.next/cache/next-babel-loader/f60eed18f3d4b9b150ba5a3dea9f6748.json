{"ast":null,"code":"var _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/pages/components/ProducItem/show.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Modal, Button, Image, ListGroup, Spinner, Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport Carousel from './Carousel';\nimport ProductGroups from './Groups';\nimport LoginModal from '../../auth/Modal';\nimport currency from \"../../../utils/currency\";\nimport { post } from \"../../../services/http\";\nimport { loadCart, showCart } from \"../../../store/actions/cart\";\nexport default function (props) {\n  const {\n    show,\n    setShow,\n    setting\n  } = props;\n  const {\n    0: product,\n    1: setProduct\n  } = useState(props.product);\n  const {\n    0: quantity,\n    1: setQuantity\n  } = useState(props.product.quantity || 1);\n  const {\n    0: basePrice,\n    1: setBasePrice\n  } = useState(props.product.price);\n  const {\n    0: totalPrice,\n    1: setTotalPrice\n  } = useState(props.product.price);\n  const {\n    0: error,\n    1: setError\n  } = useState({});\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: showLoginModal,\n    1: setShowLoginModal\n  } = useState(false);\n  const {\n    0: observation,\n    1: setObservation\n  } = useState('');\n  const dispatch = useDispatch();\n  const {\n    isLogged\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    if (product.options) {\n      const selected = product.options.find(item => item.selected);\n\n      if (!selected) {\n        product.options[0].selected = true;\n        setBasePrice(product.options[0].price);\n      }\n    }\n  }, []);\n\n  function updateProductPrices(base) {\n    let total = 0;\n\n    if (base) {\n      setBasePrice(base);\n    } else {\n      base = basePrice;\n    }\n\n    if (product.groups.length > 0) {\n      for (let i in product.groups) {\n        const group = product.groups[i];\n\n        for (let key in group.options) {\n          const option = group.options[key];\n\n          if (option.quantity > 0) {\n            const totalOptionPrice = option.price * option.quantity;\n            total = total += totalOptionPrice;\n          }\n        }\n      }\n    }\n\n    const totalPrice = (base + total) * quantity;\n    setTotalPrice(totalPrice);\n  }\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  useEffect(() => {\n    updateProductPrices();\n  }, [quantity, basePrice, product]);\n\n  function incrementQuantity() {\n    let newQuantity = quantity;\n    newQuantity = newQuantity += 1;\n    setQuantity(newQuantity);\n  }\n\n  function decrementQuantity() {\n    let newQuantity = quantity;\n    newQuantity = newQuantity -= 1;\n    if (newQuantity <= 0) newQuantity = 1;\n    setQuantity(newQuantity);\n  }\n\n  async function addCart(force = false) {\n    try {\n      if (setting.store_status.value !== \"1\") {\n        return;\n      }\n\n      if (!isLogged && !force) {\n        setShow(false);\n        return setShowLoginModal(true);\n      }\n\n      setLoading(true);\n      setError({});\n      await validateProductAddToCart().then(async e => {\n        const productData = {\n          product_id: product.id,\n          quantity,\n          observation\n        };\n        productData.product_option_id = product.options.find(item => item.selected).id;\n        const listOptions = [];\n        product.groups.map(group => {\n          const hasOptions = group.options.filter(op => op.quantity > 0).length;\n\n          if (hasOptions > 0) {\n            group.options.filter(option => option.quantity > 0).map(option => {\n              listOptions.push({\n                product_group_option_id: option.id,\n                product_group_id: option.product_group_id,\n                quantity: option.quantity\n              });\n            });\n            return productData.options;\n          }\n        });\n        productData.options = listOptions;\n        await post('/cart', productData);\n        toast.success('Produto adicionado ao carrinho de compras', {\n          position: toast.POSITION.BOTTOM_CENTER\n        });\n        dispatch(loadCart());\n        dispatch(showCart(true));\n        setShow(false);\n        setLoading(false);\n      }).catch(error => {\n        setError(error);\n        setLoading(false);\n        console.log(error);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function validateProductAddToCart() {\n    return new Promise((resolve, reject) => {\n      if (product.groups && product.groups.length > 0) {\n        product.groups.map(group => {\n          if (group.options && group.options.length > 0) {\n            let countSelects = 0;\n            group.options.filter(item => item.quantity > 0).map(op => {\n              countSelects = countSelects += op.quantity;\n            });\n\n            if (countSelects < group.min) {\n              return reject({\n                group_id: group.id,\n                title: group.name,\n                message: group.rules\n              });\n            }\n          }\n        });\n      }\n\n      resolve(true);\n    });\n  }\n\n  return __jsx(React.Fragment, null, !isLogged && __jsx(LoginModal, {\n    showLogin: showLoginModal,\n    closeModal: () => {\n      setShowLoginModal(false);\n      setShow(true);\n    },\n    onSuccess: () => {\n      setShow(true);\n      addCart(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), __jsx(Modal, {\n    show: show,\n    onHide: handleClose,\n    animation: false,\n    size: \"md\",\n    className: \"modal-product-show\",\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    className: \"border-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, product.name)), __jsx(Modal.Body, {\n    className: \"modal-body-show\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, __jsx(Carousel, {\n    images: product.images,\n    imageDefault: product.image_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, product.description), product.options && __jsx(ListGroup, {\n    className: \"options mt-4 mb-4\",\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, product.options.map(option => __jsx(ListGroup.Item, {\n    key: option.id,\n    active: option.selected,\n    onClick: () => {\n      product.options.map(op => op.selected = false);\n      option.selected = true;\n      setBasePrice(option.price);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, option.name))), __jsx(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"Observa\\xE7\\xE3o\"), __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    onChange: e => setObservation(e.target.value),\n    defaultValue: observation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  })), __jsx(ProductGroups, {\n    product: product,\n    groups: product.groups,\n    error: error,\n    onChange: data => {\n      setProduct(() => _objectSpread({}, product, {}, data));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  })), __jsx(Modal.Footer, {\n    className: \"d-flex justify-content-between align-items-center pt-0 pb-0 bg-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, __jsx(\"h5\", {\n    className: \"price text-white pt-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, currency(totalPrice)), __jsx(\"div\", {\n    className: \"d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, isLogged && __jsx(React.Fragment, null, __jsx(Button, {\n    className: \"btn-quantity border-0 left btn-sm\",\n    onClick: decrementQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-minus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"quantity btn btn-sm border-sm pl-3 pr-3 rounded-0 text-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, quantity || 1), __jsx(Button, {\n    className: \"btn-quantity border-0 right btn-sm\",\n    onClick: incrementQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-plus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }))), setting.store_status.value === \"1\" && __jsx(Button, {\n    className: \"btn-quantity right btn-md ml-3 border-0 text-uppercase\",\n    disabled: loading,\n    onClick: () => {\n      setShowObservation(true);\n      setShow(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-shopping-cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }), \" Pedir\", loading && __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"Loading...\")))))));\n}","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/pages/components/ProducItem/show.js"],"names":["Modal","Button","Image","ListGroup","Spinner","Form","useState","useEffect","useDispatch","useSelector","toast","Carousel","ProductGroups","LoginModal","currency","post","loadCart","showCart","props","show","setShow","setting","product","setProduct","quantity","setQuantity","basePrice","setBasePrice","price","totalPrice","setTotalPrice","error","setError","loading","setLoading","showLoginModal","setShowLoginModal","observation","setObservation","dispatch","isLogged","state","auth","options","selected","find","item","updateProductPrices","base","total","groups","length","i","group","key","option","totalOptionPrice","handleClose","incrementQuantity","newQuantity","decrementQuantity","addCart","force","store_status","value","validateProductAddToCart","then","e","productData","product_id","id","product_option_id","listOptions","map","hasOptions","filter","op","push","product_group_option_id","product_group_id","success","position","POSITION","BOTTOM_CENTER","catch","console","log","Promise","resolve","reject","countSelects","min","group_id","title","name","message","rules","images","image_url","description","target","data","setShowObservation"],"mappings":"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","sourcesContent":["import { Modal, Button, Image, ListGroup, Spinner, Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from 'react-toastify';\n\nimport Carousel from './Carousel';\nimport ProductGroups from './Groups';\n\nimport LoginModal from '../../auth/Modal';\n\nimport currency from \"../../../utils/currency\";\nimport { post } from \"../../../services/http\";\nimport { loadCart, showCart } from \"../../../store/actions/cart\";\n\nexport default function(props) {\n    const {show, setShow, setting } = props;\n    const [product, setProduct] = useState(props.product);\n    const [quantity, setQuantity] = useState(props.product.quantity || 1);\n    const [basePrice, setBasePrice] = useState(props.product.price);\n    const [totalPrice, setTotalPrice] = useState(props.product.price);\n    const [error, setError] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [showLoginModal, setShowLoginModal] = useState(false);\n    const [observation, setObservation] = useState('');\n\n    const dispatch = useDispatch();\n    const { isLogged } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        if (product.options) {\n            const selected = product.options.find(item => item.selected);\n\n            if (!selected) {\n                product.options[0].selected = true;\n                setBasePrice(product.options[0].price);\n            }\n        }\n\n    }, []);\n\n    function updateProductPrices(base) {\n        let total = 0;\n        \n        if (base) {\n            setBasePrice(base);\n        } else {\n            base = basePrice;\n        }\n\n        if (product.groups.length > 0) {\n            for (let i in product.groups) {\n                const group = product.groups[i];\n                for (let key in group.options) {\n                    const option = group.options[key];\n                    if (option.quantity > 0) {\n                        const totalOptionPrice = option.price * option.quantity;\n                        total = total += totalOptionPrice;\n                    }\n                }\n            }\n        }\n\n        const totalPrice = (base + total) * quantity ;\n        \n        setTotalPrice(totalPrice);\n    }\n\n    const handleClose = () => {\n        setShow(false);\n    }\n\n    useEffect(() => {\n        updateProductPrices();\n    }, [quantity, basePrice, product]);\n\n    function incrementQuantity() {\n        let newQuantity = quantity;\n        newQuantity = newQuantity += 1;\n        setQuantity(newQuantity);\n    }\n    \n    function decrementQuantity() {\n        let newQuantity = quantity;\n        newQuantity = newQuantity -= 1;\n        if (newQuantity <= 0) newQuantity = 1;\n        setQuantity(newQuantity);\n    }\n\n    async function addCart(force = false) {\n        try {\n            if (setting.store_status.value !== \"1\") {\n                return;\n            }\n\n            if (!isLogged && !force) {\n                setShow(false);\n                return setShowLoginModal(true);\n            }\n\n            setLoading(true);\n            setError({});\n\n            await validateProductAddToCart().then(async e => {\n                const productData = {\n                    product_id: product.id,\n                    quantity,\n                    observation\n                };\n\n                productData.product_option_id = product.options.find(item => item.selected).id;\n\n                const listOptions = [];\n                product.groups.map(group => {\n                    const hasOptions = group.options.filter(op => op.quantity > 0).length;\n\n                    if (hasOptions > 0) {\n                        group.options.filter(option => option.quantity > 0).map(option => {\n                            listOptions.push({\n                                product_group_option_id: option.id,\n                                product_group_id: option.product_group_id,\n                                quantity: option.quantity\n                            });\n                        });\n\n                        return productData.options\n                    }\n                });\n\n                productData.options = listOptions;\n\n                await post('/cart', productData);\n\n                toast.success('Produto adicionado ao carrinho de compras', { position: toast.POSITION.BOTTOM_CENTER });\n\n                dispatch(loadCart());\n                dispatch(showCart(true));\n\n                setShow(false);\n                setLoading(false);\n\n            }).catch((error) => {\n                setError(error);\n                setLoading(false);\n                console.log(error);\n            });\n\n        } catch (error) {\n            console.log( error );\n        }\n    }\n\n    async function validateProductAddToCart() {\n        return new Promise((resolve, reject) => {\n            if (product.groups && product.groups.length > 0) {\n                product.groups.map(group => {\n                    if (group.options && group.options.length > 0) {\n\n                        let countSelects = 0;\n                        group.options.filter(item => item.quantity > 0).map(op => {\n                            countSelects = countSelects += op.quantity;\n                        });\n\n                        if (countSelects < group.min) {\n                            return reject({ group_id: group.id, title: group.name,  message: group.rules });\n                        }\n                    }\n                })\n            }\n\n            resolve(true);\n        });\n    }\n\n    return (\n        <>\n        {!isLogged &&\n            <LoginModal \n                showLogin={showLoginModal} \n                closeModal={() => {\n                    setShowLoginModal(false);\n                    setShow(true);\n                }}\n                onSuccess={() => {\n                    setShow(true);\n                    addCart(true);\n                }}\n            />\n        }\n\n       <Modal show={show} onHide={handleClose} animation={false} size=\"md\" className=\"modal-product-show\" centered>\n        <Modal.Header closeButton className=\"border-0\">\n            <h3>{product.name}</h3>\n        </Modal.Header>\n\n        <Modal.Body className=\"modal-body-show\">\n            <Carousel images={product.images} imageDefault={product.image_url} />\n\n            <p>{product.description}</p>\n\n            {product.options && \n                <ListGroup className=\"options mt-4 mb-4\" horizontal>\n                    {product.options.map(option =>\n                        <ListGroup.Item \n                            key={option.id} \n                            active={option.selected}\n                            onClick={() => {\n                                product.options.map(op => op.selected = false);\n                                option.selected = true;\n                                setBasePrice(option.price);\n                            }}\n                        >\n                            {option.name}\n                        </ListGroup.Item>\n                    )}\n                </ListGroup>\n            }\n\n            <Form.Group>\n                <Form.Label>Observação</Form.Label>\n                <Form.Control\n                    as=\"textarea\" \n                    rows=\"3\"\n                    onChange={e => setObservation(e.target.value)}\n                    defaultValue={observation}\n                />\n            </Form.Group>\n            \n            <ProductGroups \n                product={product} \n                groups={product.groups} \n                error={error} \n                onChange={data => {\n                    setProduct(() => ({...product, ...data}));\n                }}\n            />\n\n        </Modal.Body>\n\n        <Modal.Footer className=\"d-flex justify-content-between align-items-center pt-0 pb-0 bg-success\">\n            <h5 className=\"price text-white pt-1\">{currency(totalPrice)}</h5>\n\n            <div className=\"d-flex\">\n                {isLogged &&\n                <>\n                    <Button className=\"btn-quantity border-0 left btn-sm\" onClick={decrementQuantity}>\n                        <i className=\"fas fa-minus-circle\"></i>\n                    </Button>\n                    <div className=\"quantity btn btn-sm border-sm pl-3 pr-3 rounded-0 text-white\">\n                        {quantity || 1}\n                    </div>\n                    <Button className=\"btn-quantity border-0 right btn-sm\" onClick={incrementQuantity}>\n                        <i className=\"fas fa-plus-circle\"></i>\n                    </Button>\n                </>\n                }\n\n                {setting.store_status.value === \"1\" &&\n                    <Button className=\"btn-quantity right btn-md ml-3 border-0 text-uppercase\" disabled={loading} onClick={() => {\n                        setShowObservation(true);\n                        setShow(false);\n                     }}>\n                        \n                        <i className=\"fas fa-shopping-cart\"></i> Pedir\n\n                        {loading &&\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </Spinner>\n                        }\n\n                    </Button>\n                }\n            </div>\n        </Modal.Footer>\n      </Modal>   \n\n      </>     \n    );\n    \n}\n  \n"]},"metadata":{},"sourceType":"module"}