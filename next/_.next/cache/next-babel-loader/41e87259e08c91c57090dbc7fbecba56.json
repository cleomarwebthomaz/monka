{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/account/edit/index.js\",\n    _withFormik;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from 'next/router';\nimport { toast } from 'react-toastify';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, Form, Alert, Spinner } from \"react-bootstrap\";\nimport { useEffect } from \"react\";\nimport Layout from '../../../components/Layouts/Customer';\nimport Page from \"../../../components/Page\";\nimport { patch } from '../../../services/http';\nimport { setUserData } from \"../../../store/actions/auth\";\n\nfunction EditAccount(props) {\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      user = _useSelector.user,\n      isLogged = _useSelector.isLogged;\n\n  var router = useRouter();\n  var dispatch = useDispatch();\n  var crumbs = [{\n    name: 'Minha Conta'\n  }];\n  var pageTitle = 'Minha Conta';\n  useEffect(function () {\n    if (props.status && props.status.success) {\n      dispatch(setUserData(props.status.data));\n      toast.success('Dados atualizados com sucesso!', {\n        position: toast.POSITION.BOTTOM_CENTER\n      });\n      router.push('/account');\n    }\n  }, [props.status]);\n  useEffect(function () {\n    props.setFieldValue('id', user.id);\n    props.setFieldValue('name', user.name);\n    props.setFieldValue('email', user.email);\n    props.setFieldValue('phone', user.phone);\n    props.setFieldValue('person_type', user.person_type);\n    props.setFieldValue('document', user.document);\n  }, []);\n  return __jsx(Page, {\n    title: pageTitle,\n    crumbs: crumbs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Layout, {\n    pageTitle: pageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Form, {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.errors.error && __jsx(Alert, {\n    variant: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, props.errors.error)), __jsx(Form.Group, {\n    controlId: \"formName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Nome\"), __jsx(Form.Control, {\n    type: \"text\",\n    value: props.values.name,\n    onChange: function onChange(e) {\n      return props.setFieldValue('name', e.target.value);\n    },\n    placeholder: \"Seu nome Completo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), props.touched.name && props.errors.name && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, props.errors.name)), __jsx(Form.Group, {\n    controlId: \"formEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"E-mail\"), __jsx(Form.Control, {\n    type: \"email\",\n    value: props.values.email,\n    onChange: function onChange(e) {\n      return props.setFieldValue('email', e.target.value);\n    },\n    placeholder: \"E-mail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), props.touched.email && props.errors.email && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, props.errors.email)), __jsx(Form.Group, {\n    controlId: \"formPhone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Celular\"), __jsx(Form.Control, {\n    type: \"text\",\n    value: props.values.phone,\n    onChange: function onChange(e) {\n      return props.setFieldValue('phone', e.target.value);\n    },\n    placeholder: \"Celular\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), props.touched.phone && props.errors.phone && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, props.errors.phone)), __jsx(Form.Group, {\n    controlId: \"formPersonType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Tipo de Pessoa\"), __jsx(Form.Control, {\n    as: \"select\",\n    value: props.values.person_type,\n    onChange: function onChange(e) {\n      return props.setFieldValue('person_type', e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"individual\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Pessoa F\\xEDsica\"), __jsx(\"option\", {\n    value: \"legal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Pessoa Jur\\xEDdica\")), props.touched.person_type && props.errors.person_type && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, props.errors.person_type)), __jsx(Form.Group, {\n    controlId: \"formDocument\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, props.values.person_type === 'legal' ? 'CNPJ' : 'CPF'), __jsx(Form.Control, {\n    type: \"text\",\n    value: props.values.document,\n    onChange: function onChange(e) {\n      return props.setFieldValue('document', e.target.value);\n    },\n    placeholder: props.values.person_type === 'legal' ? 'CNPJ' : 'CPF',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), props.touched.document && props.errors.document && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, props.errors.document)), __jsx(\"div\", {\n    className: \"mt-3 mb-5 d-flex justify-content-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Salvar\", __jsx(\"i\", {\n    className: \"fas fa-disk\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), props.isSubmitting && __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }))))));\n}\n\nexport default withFormik((_withFormik = {\n  mapPropsToValues: function mapPropsToValues(props) {\n    console.log(props);\n  }\n}, _defineProperty(_withFormik, \"mapPropsToValues\", function mapPropsToValues(props) {\n  return {\n    id: '',\n    name: '',\n    email: '',\n    phone: '',\n    person_type: '',\n    document: ''\n  };\n}), _defineProperty(_withFormik, \"validationSchema\", Yup.object().shape({\n  name: Yup.string().required('Informe seu nome').test('real', 'Informe seu nome completo.', function (value) {\n    if (!value) return;\n    var count = value.split(' ');\n\n    if (!count[1]) {\n      return false;\n    }\n\n    return true;\n  }),\n  email: Yup.string().email('Informe um e-mail válido').required('Informe seu e-mail'),\n  phone: Yup.string().required('Esse campo é obrigatório'),\n  document: Yup.string().required('Esse campo é obrigatório')\n})), _defineProperty(_withFormik, \"handleSubmit\", function handleSubmit(values, _ref) {\n  var setSubmitting, setErrors, props, setStatus, data;\n  return _regeneratorRuntime.async(function handleSubmit$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          setSubmitting = _ref.setSubmitting, setErrors = _ref.setErrors, props = _ref.props, setStatus = _ref.setStatus;\n          _context.prev = 1;\n          setSubmitting(true);\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(patch(\"/profile/\".concat(values.id), values));\n\n        case 5:\n          data = _context.sent;\n\n          if (data.success) {\n            setSubmitting(false);\n            setStatus({\n              success: true,\n              data: values\n            });\n          }\n\n          if (data.validations) {\n            data.validations.map(function (e) {\n              var error = {};\n              error[e.field] = e.message;\n              setErrors(error);\n            });\n          }\n\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n          setErrors({\n            error: 'Não foi possível salvar os dados. Tente novamente.'\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 10]]);\n}), _withFormik))(EditAccount);","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/account/edit/index.js"],"names":["useSelector","useDispatch","useRouter","toast","withFormik","Yup","Button","Form","Alert","Spinner","useEffect","Layout","Page","patch","setUserData","EditAccount","props","state","auth","user","isLogged","router","dispatch","crumbs","name","pageTitle","status","success","data","position","POSITION","BOTTOM_CENTER","push","setFieldValue","id","email","phone","person_type","document","handleSubmit","errors","error","values","e","target","value","touched","isSubmitting","mapPropsToValues","console","log","object","shape","string","required","test","count","split","setSubmitting","setErrors","setStatus","validations","map","field","message"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from 'next/router';\nimport { toast } from 'react-toastify';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, Form, Alert, Spinner } from \"react-bootstrap\";\nimport { useEffect } from \"react\";\n\nimport Layout from '../../../components/Layouts/Customer';\nimport Page from \"../../../components/Page\";\n\nimport { patch } from '../../../services/http';\nimport { setUserData } from \"../../../store/actions/auth\";\n\nfunction EditAccount(props) {\n    const { user, isLogged } = useSelector(state => state.auth);\n    const router = useRouter();\n    const dispatch = useDispatch();\n\n    const crumbs = [\n        { name: 'Minha Conta' },\n    ];\n  \n    const pageTitle = 'Minha Conta';\n\n    useEffect(() => {\n        if (props.status && props.status.success) {\n            dispatch(setUserData(props.status.data));\n\n            toast.success('Dados atualizados com sucesso!', {\n                position: toast.POSITION.BOTTOM_CENTER\n            });\n\n            router.push('/account');\n        }\n    }, [props.status]);\n\n    useEffect(() => {\n        props.setFieldValue('id', user.id)\n        props.setFieldValue('name', user.name)\n        props.setFieldValue('email', user.email)\n        props.setFieldValue('phone', user.phone)\n        props.setFieldValue('person_type', user.person_type)\n        props.setFieldValue('document', user.document)\n    }, []);\n\n    return (\n        <Page title={pageTitle} crumbs={crumbs}>\n            <Layout pageTitle={pageTitle}>\n\n                <Form onSubmit={props.handleSubmit}>\n\n                    {props.errors.error &&\n                        <Alert variant=\"danger\">\n                            <Form.Control.Feedback type=\"invalid\">{props.errors.error}</Form.Control.Feedback>\n                        </Alert>\n                    }\n\n                    <Form.Group controlId=\"formName\">\n                        <Form.Label>Nome</Form.Label>\n                        <Form.Control \n                            type=\"text\" \n                            value={props.values.name}\n                            onChange={e => props.setFieldValue('name', e.target.value)}\n                            placeholder=\"Seu nome Completo\"\n                        />\n                        {props.touched.name && props.errors.name && \n                            <Form.Control.Feedback type=\"invalid\">{props.errors.name}</Form.Control.Feedback>\n                        }\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formEmail\">\n                        <Form.Label>E-mail</Form.Label>\n                        <Form.Control \n                            type=\"email\" \n                            value={props.values.email}\n                            onChange={e => props.setFieldValue('email', e.target.value)}\n                            placeholder=\"E-mail\"\n                        />\n                        {props.touched.email && props.errors.email && \n                            <Form.Control.Feedback type=\"invalid\">{props.errors.email}</Form.Control.Feedback>\n                        }\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formPhone\">\n                        <Form.Label>Celular</Form.Label>\n                        <Form.Control \n                            type=\"text\" \n                            value={props.values.phone}\n                            onChange={e => props.setFieldValue('phone', e.target.value)}\n                            placeholder=\"Celular\"\n                        />\n                        {props.touched.phone && props.errors.phone && \n                            <Form.Control.Feedback type=\"invalid\">{props.errors.phone}</Form.Control.Feedback>\n                        }\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formPersonType\">\n                        <Form.Label>Tipo de Pessoa</Form.Label>\n                        <Form.Control\n                            as=\"select\"\n                            value={props.values.person_type}\n                            onChange={e => props.setFieldValue('person_type', e.target.value)}\n                        >\n                            <option value=\"individual\">Pessoa Física</option>\n                            <option value=\"legal\">Pessoa Jurídica</option>\n                        </Form.Control>\n                        {props.touched.person_type && props.errors.person_type && \n                            <Form.Control.Feedback type=\"invalid\">{props.errors.person_type}</Form.Control.Feedback>\n                        }                  \n                    </Form.Group>\n\n                    <Form.Group controlId=\"formDocument\">\n                        <Form.Label>{props.values.person_type === 'legal' ? 'CNPJ' : 'CPF'}</Form.Label>\n                        <Form.Control \n                            type=\"text\" \n                            value={props.values.document}\n                            onChange={e => props.setFieldValue('document', e.target.value)}\n                            placeholder={props.values.person_type === 'legal' ? 'CNPJ' : 'CPF'}\n                        />\n                        {props.touched.document && props.errors.document && \n                            <Form.Control.Feedback type=\"invalid\">{props.errors.document}</Form.Control.Feedback>\n                        }\n                    </Form.Group>\n\n                    <div className=\"mt-3 mb-5 d-flex justify-content-end\">\n                        <button className=\"btn btn-primary\" type=\"submit\">\n                            Salvar  \n                            <i className=\"fas fa-disk\"></i> \n                            {props.isSubmitting && <Spinner />}\n                        </button>\n                    </div>\n                </Form>\n\n            </Layout>\n        </Page>\n    );\n}\n\nexport default withFormik({\n    mapPropsToValues: props => {\n        console.log( props )\n    },\n\n    mapPropsToValues: props => ({ \n        id: '',\n        name: '',\n        email: '',\n        phone: '',\n        person_type: '',\n        document: ''\n    }),\n\n    validationSchema: Yup.object().shape({\n      name: Yup.string()\n        .required('Informe seu nome')\n        .test('real', 'Informe seu nome completo.', (value) => {\n            if (!value) return;\n  \n            const count = value.split(' ');\n  \n            if (!count[1]) {\n                return false;\n            }\n  \n            return true;\n        }),\n      email: Yup.string().email('Informe um e-mail válido')\n          .required('Informe seu e-mail'),\n      phone: Yup.string().required('Esse campo é obrigatório'),\n      document: Yup.string().required('Esse campo é obrigatório')\n    }),\n  \n    handleSubmit: async (values, { setSubmitting, setErrors, props, setStatus }) => {\n        try {\n          setSubmitting(true);\n          const data = await patch(`/profile/${values.id}`, values);\n\n          if (data.success) {\n              setSubmitting(false);\n              setStatus({ success: true, data: values });\n          }\n  \n          if (data.validations) {\n              data.validations.map(e => {\n                  let error = {};\n                  error[e.field] = e.message;\n                  setErrors(error);\n              });\n          }\n  \n        } catch(error) {\n          console.log(error)\n          setErrors({ error: 'Não foi possível salvar os dados. Tente novamente.' });\n        }\n    },\n  \n  })(EditAccount);\n  "]},"metadata":{},"sourceType":"module"}