{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/account/addresses/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { Table, Spinner, Alert } from 'react-bootstrap';\nimport Layout from '../../../components/Layouts/Customer';\nimport { get } from '../../../services/http';\nimport Page from '../../../components/Page';\n\nvar MyAddresses = function MyAddresses(props) {\n  var addresses = props.addresses; // const [addresses, setAddresses] = useState([]);\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1]; // useEffect(() => {\n  //   async function getData() {\n  //       const result = await get('/myAddress');\n  //       setAddresses(result);\n  //       setLoading(false);\n  //   }\n  //   getData();\n  // }, []);\n\n\n  console.log(props, 'endereco');\n  var pageTitle = 'Meus Endereços';\n  var crumbs = [{\n    name: 'Minha Conta',\n    link: '/account'\n  }, {\n    name: pageTitle\n  }];\n  if (!addresses) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n  return __jsx(Page, {\n    title: pageTitle,\n    crumbs: crumbs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Layout, {\n    pageTitle: pageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"pt-4 pb-4 text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/account/addresses/create\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"btn btn-sm btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Cadastrar Endere\\xE7o\"))), __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Cidade\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"UF\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Rua\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"N\\xFAmero\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Bairro\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, addresses.map(function (address) {\n    return __jsx(\"tr\", {\n      key: address.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, address.city.name), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, address.city.state.name), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, address.number), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, address.street), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, address.neighborhood.name), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/account/addresses/\".concat(address.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"btn btn-primary btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"fas fa-edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })))));\n  })))));\n};\n\nMyAddresses.getIntialData = function _callee() {\n  var addresses;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(get('/myAddress'));\n\n        case 2:\n          addresses = _context.sent;\n          return _context.abrupt(\"return\", {\n            addresses: addresses\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default MyAddresses;","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/account/addresses/index.js"],"names":["useEffect","useState","Link","Table","Spinner","Alert","Layout","get","Page","MyAddresses","props","addresses","loading","setLoading","console","log","pageTitle","crumbs","name","link","map","address","id","city","state","number","street","neighborhood","getIntialData"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { Table, Spinner, Alert } from 'react-bootstrap';\n\nimport Layout from '../../../components/Layouts/Customer';\n\nimport { get } from '../../../services/http';\nimport Page from '../../../components/Page';\n\nconst MyAddresses = (props) => {\n    const { addresses } = props\n    // const [addresses, setAddresses] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    // useEffect(() => {\n    //   async function getData() {\n    //       const result = await get('/myAddress');\n    //       setAddresses(result);\n    //       setLoading(false);\n    //   }\n \n    //   getData();\n    // }, []);\n\n    console.log(props, 'endereco')\n\n    const pageTitle = 'Meus Endereços';\n\n    const crumbs = [\n      { name: 'Minha Conta', link: '/account' },\n      { name: pageTitle },\n    ];\n\n    if (!addresses) return <div />;\n\n    return (\n      <Page title={pageTitle} crumbs={crumbs}>\n        <Layout pageTitle={pageTitle}>\n\n            {/* {loading && <Spinner /> } */}\n            {/* {addresses.length <= 0 && <Alert>Sem Registros</Alert>} */}\n\n            <div className=\"pt-4 pb-4 text-right\">\n              <Link href=\"/account/addresses/create\">\n                <a className=\"btn btn-sm btn-primary\">\n                  Cadastrar Endereço\n                </a>\n              </Link>\n            </div>\n\n            {/* {!loading && */}\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Cidade</th>\n                    <th>UF</th>\n                    <th>Rua</th>\n                    <th>Número</th>\n                    <th>Bairro</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {addresses.map(address =>\n                    <tr key={address.id}>\n                      <td>{address.city.name}</td>\n                      <td>{address.city.state.name}</td>\n                      <td>{address.number}</td>\n                      <td>{address.street}</td>\n                      <td>{address.neighborhood.name}</td>\n                      <td>\n                          <Link href={`/account/addresses/${address.id}`}>\n                            <a className=\"btn btn-primary btn-sm\">\n                                <i className=\"fas fa-edit\"></i> \n                            </a>\n                          </Link>\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </Table>\n            {/* } */}\n        </Layout>\n      </Page>\n    );\n\n}\n\nMyAddresses.getIntialData = async () => {\n    const addresses = await get('/myAddress');\n\n    return {\n      addresses\n    }\n}\n\nexport default MyAddresses;\n"]},"metadata":{},"sourceType":"module"}