{"ast":null,"code":"var _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/api/next/pages/products/[slug]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { Container, Row, Col, Button, ListGroup, Spinner } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport LoginModal from '../../auth/Modal';\nimport Page from '../../../components/Page';\nimport Loading from '../../../components/Loading';\nimport Breadcrumb from '../../../components/Breadcrumb';\nimport Carousel from './Carousel';\nimport ProductGroups from './components/Groups';\nimport { loadCart } from '../../../store/actions/cart';\nimport currency from '../../../utils/currency';\nimport { addCrumb, clearCrumbs } from '../../../store/actions/breadcrumb';\nimport { get, post } from '../../../services/http';\nimport './styles.scss';\nimport PageTitle from '../../../components/PageTitle';\n\nconst ProductShow = props => {\n  const {\n    0: product,\n    1: setProduct\n  } = useState(props.product);\n  const {\n    0: quantity,\n    1: setQuantity\n  } = useState(props.product.quantity || 1);\n  const {\n    0: basePrice,\n    1: setBasePrice\n  } = useState(props.basePrice);\n  const {\n    0: totalPrice,\n    1: setTotalPrice\n  } = useState(props.basePrice);\n  const {\n    0: error,\n    1: setError\n  } = useState({});\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: showLoginModal,\n    1: setShowLoginModal\n  } = useState(false);\n  const {\n    isLogged\n  } = useSelector(state => state.auth);\n  const {\n    setting,\n    loaded\n  } = useSelector(state => state.setting);\n  const dispatch = useDispatch();\n  const router = useRouter();\n  useEffect(() => {\n    dispatch(clearCrumbs());\n    dispatch(addCrumb('Produtos', '/'));\n  }, []);\n  useEffect(() => {\n    updateProductPrices();\n  }, [quantity, basePrice, product]);\n\n  function incrementQuantity() {\n    let newQuantity = quantity;\n    newQuantity = newQuantity += 1;\n    setQuantity(newQuantity);\n  }\n\n  function decrementQuantity() {\n    let newQuantity = quantity;\n    newQuantity = newQuantity -= 1;\n    if (newQuantity <= 0) newQuantity = 1;\n    setQuantity(newQuantity);\n  }\n\n  function updateProductPrices(base) {\n    let total = 0;\n\n    if (base) {\n      setBasePrice(base);\n    } else {\n      base = basePrice;\n    }\n\n    if (product.groups.length > 0) {\n      for (let i in product.groups) {\n        const group = product.groups[i];\n\n        for (let key in group.options) {\n          const option = group.options[key];\n\n          if (option.quantity > 0) {\n            const totalOptionPrice = option.price * option.quantity;\n            total = total += totalOptionPrice;\n          }\n        }\n      }\n    }\n\n    const totalPrice = (base + total) * quantity;\n    setTotalPrice(totalPrice);\n  }\n\n  async function validateProductAddToCart() {\n    return new Promise((resolve, reject) => {\n      if (product.groups && product.groups.length > 0) {\n        product.groups.map(group => {\n          if (group.options && group.options.length > 0) {\n            let countSelects = 0;\n            group.options.filter(item => item.quantity > 0).map(op => {\n              countSelects = countSelects += op.quantity;\n            });\n\n            if (countSelects < group.min) {\n              return reject({\n                group_id: group.id,\n                title: group.name,\n                message: group.rules\n              });\n            }\n          }\n        });\n      }\n\n      resolve(true);\n    });\n  }\n\n  async function addCart(force = false) {\n    try {\n      if (setting.store_status.value !== \"1\") {\n        return;\n      }\n\n      if (!isLogged && !force) {\n        return setShowLoginModal(true);\n      }\n\n      setLoading(true);\n      setError({});\n      await validateProductAddToCart().then(async e => {\n        const productData = {\n          product_id: product.id,\n          quantity\n        };\n        productData.product_option_id = product.options.find(item => item.selected).id;\n        const listOptions = [];\n        product.groups.map(group => {\n          const hasOptions = group.options.filter(op => op.quantity > 0).length;\n\n          if (hasOptions > 0) {\n            group.options.filter(option => option.quantity > 0).map(option => {\n              listOptions.push({\n                product_group_option_id: option.id,\n                product_group_id: option.product_group_id,\n                quantity: option.quantity\n              });\n            });\n            return productData.options;\n          }\n        });\n        productData.options = listOptions;\n        await post('/cart', productData);\n        toast.success('Produto adicionado ao carrinho de compras', {\n          position: toast.POSITION.BOTTOM_CENTER\n        });\n        dispatch(loadCart());\n        router.push('/cart');\n      }).catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  if (!loaded) return __jsx(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  });\n  return __jsx(Page, {\n    title: product.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, __jsx(Container, {\n    className: \"mb-5 productShow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, __jsx(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), !isLogged && __jsx(LoginModal, {\n    showLogin: showLoginModal,\n    closeModal: () => setShowLoginModal(false),\n    onSuccess: () => addCart(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, __jsx(Carousel, {\n    images: product.images,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), __jsx(\"h4\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Descri\\xE7\\xE3o\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, product.description)), __jsx(Col, {\n    className: \"pt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, __jsx(PageTitle, {\n    className: \"name\",\n    title: product.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, product.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, product.short_description), __jsx(\"h1\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, currency(totalPrice)), product.options && __jsx(ListGroup, {\n    className: \"options mt-4\",\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, product.options.map(option => __jsx(ListGroup.Item, {\n    key: option.id,\n    active: option.selected,\n    onClick: () => {\n      product.options.map(op => op.selected = false);\n      option.selected = true;\n      setBasePrice(option.price);\n      setProduct(() => _objectSpread({}, product, {}, product));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, option.name))), __jsx(ProductGroups, {\n    product: product,\n    groups: product.groups,\n    error: error,\n    onChange: data => {\n      setProduct(() => _objectSpread({}, product, {}, data));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"d-flex mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, __jsx(Button, {\n    className: \"btn-quantity left btn-md\",\n    onClick: decrementQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-minus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"quantity btn btn-md bg-light border-sm pl-3 pr-3 rounded-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, quantity || 1), __jsx(Button, {\n    className: \"btn-quantity right btn-md\",\n    onClick: incrementQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-plus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  })), setting.store_status.value === \"1\" && __jsx(Button, {\n    className: \"btn-quantity right btn-md ml-3\",\n    disabled: loading,\n    onClick: () => addCart(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-shopping-cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }), \" Comprar\", loading && __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Loading...\"))))))));\n};\n\nProductShow.getInitialProps = async function ({\n  query\n}) {\n  if (!query.slug) return {\n    error: true,\n    product: {}\n  };\n  const product = await get(`/product/${query.slug}`);\n  let basePrice = product.price;\n\n  if (product.options) {\n    basePrice = product.options[0].price;\n    product.options[0].selected = true;\n  }\n\n  return {\n    product,\n    basePrice\n  };\n};\n\nexport default ProductShow;","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/api/next/pages/products/[slug]/index.js"],"names":["useEffect","useState","useRouter","Container","Row","Col","Button","ListGroup","Spinner","useDispatch","useSelector","toast","LoginModal","Page","Loading","Breadcrumb","Carousel","ProductGroups","loadCart","currency","addCrumb","clearCrumbs","get","post","PageTitle","ProductShow","props","product","setProduct","quantity","setQuantity","basePrice","setBasePrice","totalPrice","setTotalPrice","error","setError","loading","setLoading","showLoginModal","setShowLoginModal","isLogged","state","auth","setting","loaded","dispatch","router","updateProductPrices","incrementQuantity","newQuantity","decrementQuantity","base","total","groups","length","i","group","key","options","option","totalOptionPrice","price","validateProductAddToCart","Promise","resolve","reject","map","countSelects","filter","item","op","min","group_id","id","title","name","message","rules","addCart","force","store_status","value","then","e","productData","product_id","product_option_id","find","selected","listOptions","hasOptions","push","product_group_option_id","product_group_id","success","position","POSITION","BOTTOM_CENTER","catch","console","log","images","description","short_description","data","getInitialProps","query","slug"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router'\nimport { Container, Row, Col, Button, ListGroup, Spinner } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport LoginModal from '../../auth/Modal';\nimport Page from '../../../components/Page';\nimport Loading from '../../../components/Loading';\nimport Breadcrumb from '../../../components/Breadcrumb';\nimport Carousel from './Carousel';\n\nimport ProductGroups from './components/Groups';\n\nimport { loadCart } from '../../../store/actions/cart';\nimport currency from '../../../utils/currency';\nimport { addCrumb, clearCrumbs } from '../../../store/actions/breadcrumb';\nimport { get, post } from '../../../services/http';\n\nimport './styles.scss';\nimport PageTitle from '../../../components/PageTitle';\n\nconst ProductShow = (props) => {\n    const [product, setProduct] = useState(props.product);\n    const [quantity, setQuantity] = useState(props.product.quantity || 1);\n    const [basePrice, setBasePrice] = useState(props.basePrice);\n    const [totalPrice, setTotalPrice] = useState(props.basePrice);\n    const [error, setError] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [showLoginModal, setShowLoginModal] = useState(false);\n\n    const { isLogged } = useSelector(state => state.auth);\n    const { setting, loaded } = useSelector(state => state.setting);\n    const dispatch = useDispatch();\n    const router = useRouter();\n\n    useEffect(() => {\n        dispatch(clearCrumbs());\n        dispatch(addCrumb('Produtos', '/'));\n    }, []);\n\n    useEffect(() => {\n        updateProductPrices();\n    }, [quantity, basePrice, product]);\n\n    function incrementQuantity() {\n        let newQuantity = quantity;\n        newQuantity = newQuantity += 1;\n        setQuantity(newQuantity);\n    }\n    \n    function decrementQuantity() {\n        let newQuantity = quantity;\n        newQuantity = newQuantity -= 1;\n        if (newQuantity <= 0) newQuantity = 1;\n        setQuantity(newQuantity);\n    }\n\n    function updateProductPrices(base) {\n        let total = 0;\n        \n        if (base) {\n            setBasePrice(base);\n        } else {\n            base = basePrice;\n        }\n\n        if (product.groups.length > 0) {\n            for (let i in product.groups) {\n                const group = product.groups[i];\n                for (let key in group.options) {\n                    const option = group.options[key];\n                    if (option.quantity > 0) {\n                        const totalOptionPrice = option.price * option.quantity;\n                        total = total += totalOptionPrice;\n                    }\n                }\n            }\n        }\n\n        const totalPrice = (base + total) * quantity ;\n        \n        setTotalPrice(totalPrice);\n    }\n\n    async function validateProductAddToCart() {\n        return new Promise((resolve, reject) => {\n            if (product.groups && product.groups.length > 0) {\n                product.groups.map(group => {\n                    if (group.options && group.options.length > 0) {\n\n                        let countSelects = 0;\n                        group.options.filter(item => item.quantity > 0).map(op => {\n                            countSelects = countSelects += op.quantity;\n                        });\n\n                        if (countSelects < group.min) {\n                            return reject({ group_id: group.id, title: group.name,  message: group.rules });\n                        }\n                    }\n                })\n            }\n\n            resolve(true);\n        });\n    }\n\n    async function addCart(force = false) {\n        try {\n            if (setting.store_status.value !== \"1\") {\n                return;\n            }\n\n            if (!isLogged && !force) {\n                return setShowLoginModal(true);\n            }\n\n            setLoading(true);\n            setError({});\n\n            await validateProductAddToCart().then(async e => {\n                const productData = {\n                    product_id: product.id,\n                    quantity\n                };\n\n                productData.product_option_id = product.options.find(item => item.selected).id;\n\n                const listOptions = [];\n                product.groups.map(group => {\n                    const hasOptions = group.options.filter(op => op.quantity > 0).length;\n\n                    if (hasOptions > 0) {\n                        group.options.filter(option => option.quantity > 0).map(option => {\n                            listOptions.push({\n                                product_group_option_id: option.id,\n                                product_group_id: option.product_group_id,\n                                quantity: option.quantity\n                            });\n                        });\n\n                        return productData.options\n                    }\n                });\n\n                productData.options = listOptions;\n\n                await post('/cart', productData);\n\n                toast.success('Produto adicionado ao carrinho de compras', {\n                    position: toast.POSITION.BOTTOM_CENTER\n                });\n\n                dispatch(loadCart());\n\n                router.push('/cart');\n\n            }).catch((error) => {\n                setError(error);\n                setLoading(false);\n            });\n\n        } catch (error) {\n            console.log( error );\n        }\n    }\n\n    if (!loaded) return <Loading />;\n\n    return (\n        <Page title={product.name}>\n            <Container className=\"mb-5 productShow\">\n                <Breadcrumb />\n\n                {!isLogged && \n                    <LoginModal \n                        showLogin={showLoginModal} \n                        closeModal={() => setShowLoginModal(false)}\n                        onSuccess={() => \n                        addCart(true) } \n                    />\n                }\n\n                <Row>\n                    <Col xs={6}>\n                        <Carousel images={product.images} />\n\n                        <h4 className=\"mt-5\">Descrição</h4>\n                        <p>{product.description}</p>\n                    </Col>\n\n                    <Col className=\"pt-4\">\n                        <PageTitle className=\"name\" title={product.name}>{product.name}</PageTitle>\n                        <p>{product.short_description}</p>\n\n                        <h1 className=\"price\">{currency(totalPrice)}</h1>\n\n                        {product.options && <ListGroup className=\"options mt-4\" horizontal>\n                            {product.options.map(option =>\n                                <ListGroup.Item \n                                    key={option.id} \n                                    active={option.selected}\n                                    onClick={() => {\n                                        product.options.map(op => op.selected = false);\n                                        option.selected = true;\n                                        setBasePrice(option.price);\n                                        setProduct(() => ({...product, ...product}));\n                                    }}\n                                >\n                                    {option.name}\n                                </ListGroup.Item>\n                            )}\n                        </ListGroup>\n                        }\n\n                        <ProductGroups \n                            product={product} \n                            groups={product.groups} \n                            error={error} \n                            onChange={data => {\n                                setProduct(() => ({...product, ...data}));\n                            }}\n                        />\n                        \n                        <div className=\"d-flex mt-4\">\n                            <Button className=\"btn-quantity left btn-md\" onClick={decrementQuantity}>\n                                <i className=\"fas fa-minus-circle\"></i>\n                            </Button>\n                            <div className=\"quantity btn btn-md bg-light border-sm pl-3 pr-3 rounded-0\">\n                                {quantity || 1}\n                                </div>\n                            <Button className=\"btn-quantity right btn-md\" onClick={incrementQuantity}>\n                                <i className=\"fas fa-plus-circle\"></i>\n                            </Button>\n\n                            {setting.store_status.value === \"1\" &&\n                            <Button className=\"btn-quantity right btn-md ml-3\" disabled={loading} onClick={() => addCart()}>\n                                <i className=\"fas fa-shopping-cart\"></i> Comprar\n\n                                {loading &&\n                                    <Spinner animation=\"border\" role=\"status\">\n                                        <span className=\"sr-only\">Loading...</span>\n                                    </Spinner>\n                                }\n\n                            </Button>\n                            }\n                        </div>\n\n                    </Col>\n\n                </Row>\n            </Container>\n        </Page>\n    );\n}\n\nProductShow.getInitialProps = async function({ query }) {\n    if (!query.slug) return {\n        error: true,\n        product: {}\n    };\n\n    const product = await get(`/product/${query.slug}`);\n\n    let basePrice = product.price;\n\n    if (product.options) {\n        basePrice = product.options[0].price;\n        product.options[0].selected = true;\n    }\n    \n    return {\n        product,\n        basePrice\n    };\n};\n  \nexport default ProductShow;\n"]},"metadata":{},"sourceType":"module"}