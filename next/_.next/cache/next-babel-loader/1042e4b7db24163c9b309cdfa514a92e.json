{"ast":null,"code":"var _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/components/Cart/Voucher/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { ButtonGroup, ListGroup, Form, Spinner, Row, Col, Image, Card, Button, InputGroup } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { get, post, patch, httpDelete } from '../../../services/http';\nimport { loadCart } from '../../../store/actions/cart';\n\nfunction VoucherForm(props) {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (props.status && props.status.success) {\n      dispatch(loadCart());\n      toast.success('Cupom aplicado com sucesso', {\n        position: toast.POSITION.BOTTOM_CENTER\n      });\n    }\n  }, [props.status]);\n  return __jsx(Form, {\n    className: \"pl-3 pr-3\",\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    className: \"mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(Form.Control, {\n    value: props.values.code,\n    onChange: e => props.setFieldValue('code', e.target.value),\n    placeholder: \"Cupom\",\n    className: \"border-0 shadow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"OK\", props.isSubmitting && __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })))), props.touched.code && props.errors.code && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, props.errors.code)));\n}\n\nexport default withFormik({\n  mapPropsToValues: props => ({\n    code: ''\n  }),\n  validationSchema: Yup.object().shape({\n    code: Yup.string().required('Informe o código do cupom')\n  }),\n  handleSubmit: async (values, {\n    setSubmitting,\n    setErrors,\n    setStatus\n  }) => {\n    try {\n      setSubmitting(true);\n      const result = await post(`/cart/add-voucher`, values);\n\n      if (result.success) {\n        setStatus({\n          success: true,\n          data: result\n        });\n      } else {\n        setErrors({\n          code: result.error\n        });\n      }\n    } catch (error) {\n      setErrors({\n        error: 'N!ao foi possível válidar o cupom'\n      });\n    }\n  }\n})(VoucherForm);","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/components/Cart/Voucher/index.js"],"names":["useEffect","withFormik","Yup","ButtonGroup","ListGroup","Form","Spinner","Row","Col","Image","Card","Button","InputGroup","useDispatch","get","post","patch","httpDelete","loadCart","VoucherForm","props","dispatch","status","success","toast","position","POSITION","BOTTOM_CENTER","handleSubmit","values","code","e","setFieldValue","target","value","isSubmitting","touched","errors","mapPropsToValues","validationSchema","object","shape","string","required","setSubmitting","setErrors","setStatus","result","data","error"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { ButtonGroup, ListGroup, Form, Spinner, Row, Col, Image, Card, Button, InputGroup } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\n\nimport { get, post, patch, httpDelete } from '../../../services/http';\nimport { loadCart } from '../../../store/actions/cart';\n\nfunction VoucherForm(props) {\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        if (props.status && props.status.success) {\n            dispatch(loadCart());\n\n            toast.success('Cupom aplicado com sucesso', {\n                position: toast.POSITION.BOTTOM_CENTER\n            });\n        }\n    }, [props.status]);\n\n    return (\n        <Form className=\"pl-3 pr-3\" onSubmit={props.handleSubmit}>\n\n            <Form.Group className=\"mt-4\">\n                <InputGroup>\n                    <Form.Control \n                        value={props.values.code}\n                        onChange={e => props.setFieldValue('code', e.target.value)}\n                        placeholder=\"Cupom\"\n                        className=\"border-0 shadow\"\n                    />\n                    <InputGroup.Prepend>\n                        <Button variant=\"primary\" type=\"submit\">\n                            OK\n                            {props.isSubmitting && \n                                <Spinner animation=\"border\" role=\"status\" />\n                            }\n                        </Button>\n                    </InputGroup.Prepend>\n                </InputGroup>\n\n                {props.touched.code && props.errors.code && \n                    <Form.Control.Feedback type=\"invalid\">{props.errors.code}</Form.Control.Feedback>\n                }\n            </Form.Group>\n        \n        </Form>\n    )\n\n}\n\nexport default withFormik({\n  mapPropsToValues: props => ({ \n      code: '',\n    }),\n\n  validationSchema: Yup.object().shape({\n    code: Yup.string().required('Informe o código do cupom'),\n  }),\n\n  handleSubmit: async (values, { setSubmitting, setErrors, setStatus }) => {\n      try {\n        setSubmitting(true);\n\n        const result = await post(`/cart/add-voucher`, values);\n\n        if (result.success) {\n            setStatus({ success: true, data: result });\n        } else {\n            setErrors({ code: result.error });\n        }\n\n      } catch(error) {\n          setErrors({ error: 'N!ao foi possível válidar o cupom' });\n      }\n  },\n\n})(VoucherForm);\n\n"]},"metadata":{},"sourceType":"module"}