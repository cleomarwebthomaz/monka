{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { Container, Row, Col, Button, ListGroup, Spinner } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport LoginModal from '../../auth/Modal';\nimport Page from '../../../components/Page';\nimport Loading from '../../../components/Loading';\nimport Breadcrumb from '../../../components/Breadcrumb';\nimport Carousel from './Carousel';\nimport ProductGroups from './components/Groups';\nimport { loadCart } from '../../../store/actions/cart';\nimport currency from '../../../utils/currency';\nimport { addCrumb, clearCrumbs } from '../../../store/actions/breadcrumb';\nimport { get, post } from '../../../services/http';\nimport './styles.scss';\nimport PageTitle from '../../../components/PageTitle';\n\nvar ProductShow = function ProductShow(props) {\n  var _useState = useState(props.product),\n      product = _useState[0],\n      setProduct = _useState[1];\n\n  var _useState2 = useState(props.product.quantity || 1),\n      quantity = _useState2[0],\n      setQuantity = _useState2[1];\n\n  var _useState3 = useState(props.basePrice),\n      basePrice = _useState3[0],\n      setBasePrice = _useState3[1];\n\n  var _useState4 = useState(props.basePrice),\n      totalPrice = _useState4[0],\n      setTotalPrice = _useState4[1];\n\n  var _useState5 = useState({}),\n      error = _useState5[0],\n      setError = _useState5[1];\n\n  var _useState6 = useState(false),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      showLoginModal = _useState7[0],\n      setShowLoginModal = _useState7[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      isLogged = _useSelector.isLogged;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.setting;\n  }),\n      setting = _useSelector2.setting,\n      loaded = _useSelector2.loaded;\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  useEffect(function () {\n    dispatch(clearCrumbs());\n    dispatch(addCrumb('Produtos', '/'));\n  }, []);\n  useEffect(function () {\n    updateProductPrices();\n  }, [quantity, basePrice, product]);\n\n  function incrementQuantity() {\n    var newQuantity = quantity;\n    newQuantity = newQuantity += 1;\n    setQuantity(newQuantity);\n  }\n\n  function decrementQuantity() {\n    var newQuantity = quantity;\n    newQuantity = newQuantity -= 1;\n    if (newQuantity <= 0) newQuantity = 1;\n    setQuantity(newQuantity);\n  }\n\n  function updateProductPrices(base) {\n    var total = 0;\n\n    if (base) {\n      setBasePrice(base);\n    } else {\n      base = basePrice;\n    }\n\n    if (product.groups.length > 0) {\n      for (var i in product.groups) {\n        var group = product.groups[i];\n\n        for (var key in group.options) {\n          var option = group.options[key];\n\n          if (option.quantity > 0) {\n            var totalOptionPrice = option.price * option.quantity;\n            total = total += totalOptionPrice;\n          }\n        }\n      }\n    }\n\n    var totalPrice = (base + total) * quantity;\n    setTotalPrice(totalPrice);\n  }\n\n  function validateProductAddToCart() {\n    return _regeneratorRuntime.async(function validateProductAddToCart$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new _Promise(function (resolve, reject) {\n              if (product.groups && product.groups.length > 0) {\n                product.groups.map(function (group) {\n                  if (group.options && group.options.length > 0) {\n                    var countSelects = 0;\n                    group.options.filter(function (item) {\n                      return item.quantity > 0;\n                    }).map(function (op) {\n                      countSelects = countSelects += op.quantity;\n                    });\n\n                    if (countSelects < group.min) {\n                      return reject({\n                        group_id: group.id,\n                        title: group.name,\n                        message: group.rules\n                      });\n                    }\n                  }\n                });\n              }\n\n              resolve(true);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function addCart() {\n    var force,\n        _args3 = arguments;\n    return _regeneratorRuntime.async(function addCart$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            force = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : false;\n            _context3.prev = 1;\n\n            if (!(setting.store_status.value !== \"1\")) {\n              _context3.next = 4;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 4:\n            if (!(!isLogged && !force)) {\n              _context3.next = 6;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", setShowLoginModal(true));\n\n          case 6:\n            setLoading(true);\n            setError({});\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(validateProductAddToCart().then(function _callee(e) {\n              var productData, listOptions;\n              return _regeneratorRuntime.async(function _callee$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      productData = {\n                        product_id: product.id,\n                        quantity: quantity\n                      };\n                      productData.product_option_id = product.options.find(function (item) {\n                        return item.selected;\n                      }).id;\n                      listOptions = [];\n                      product.groups.map(function (group) {\n                        var hasOptions = group.options.filter(function (op) {\n                          return op.quantity > 0;\n                        }).length;\n\n                        if (hasOptions > 0) {\n                          group.options.filter(function (option) {\n                            return option.quantity > 0;\n                          }).map(function (option) {\n                            listOptions.push({\n                              product_group_option_id: option.id,\n                              product_group_id: option.product_group_id,\n                              quantity: option.quantity\n                            });\n                          });\n                          return productData.options;\n                        }\n                      });\n                      productData.options = listOptions;\n                      _context2.next = 7;\n                      return _regeneratorRuntime.awrap(post('/cart', productData));\n\n                    case 7:\n                      toast.success('Produto adicionado ao carrinho de compras', {\n                        position: toast.POSITION.BOTTOM_CENTER\n                      });\n                      dispatch(loadCart());\n                      router.push('/cart');\n\n                    case 10:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              });\n            })[\"catch\"](function (error) {\n              setError(error);\n              setLoading(false);\n            }));\n\n          case 10:\n            _context3.next = 15;\n            break;\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.log(_context3.t0);\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 12]]);\n  }\n\n  if (!loaded) return __jsx(Loading, null);\n  return __jsx(Page, {\n    title: product.name\n  }, __jsx(Container, {\n    className: \"mb-5 productShow\"\n  }, __jsx(Breadcrumb, null), !isLogged && __jsx(LoginModal, {\n    showLogin: showLoginModal,\n    closeModal: function closeModal() {\n      return setShowLoginModal(false);\n    },\n    onSuccess: function onSuccess() {\n      return addCart(true);\n    }\n  }), __jsx(Row, null, __jsx(Col, {\n    xs: 6\n  }, __jsx(Carousel, {\n    images: product.images\n  }), __jsx(\"h4\", {\n    className: \"mt-5\"\n  }, \"Descri\\xE7\\xE3o\"), __jsx(\"p\", null, product.description)), __jsx(Col, {\n    className: \"pt-4\"\n  }, __jsx(PageTitle, {\n    className: \"name\",\n    title: product.name\n  }, product.name), __jsx(\"p\", null, product.short_description), __jsx(\"h1\", {\n    className: \"price\"\n  }, currency(totalPrice)), product.options && __jsx(ListGroup, {\n    className: \"options mt-4\",\n    horizontal: true\n  }, product.options.map(function (option) {\n    return __jsx(ListGroup.Item, {\n      key: option.id,\n      active: option.selected,\n      onClick: function onClick() {\n        product.options.map(function (op) {\n          return op.selected = false;\n        });\n        option.selected = true;\n        setBasePrice(option.price);\n        setProduct(function () {\n          return _objectSpread({}, product, {}, product);\n        });\n      }\n    }, option.name);\n  })), __jsx(ProductGroups, {\n    product: product,\n    groups: product.groups,\n    error: error,\n    onChange: function onChange(data) {\n      setProduct(function () {\n        return _objectSpread({}, product, {}, data);\n      });\n    }\n  }), __jsx(\"div\", {\n    className: \"d-flex mt-4\"\n  }, __jsx(Button, {\n    className: \"btn-quantity left btn-md\",\n    onClick: decrementQuantity\n  }, __jsx(\"i\", {\n    className: \"fas fa-minus-circle\"\n  })), __jsx(\"div\", {\n    className: \"quantity btn btn-md bg-light border-sm pl-3 pr-3 rounded-0\"\n  }, quantity || 1), __jsx(Button, {\n    className: \"btn-quantity right btn-md\",\n    onClick: incrementQuantity\n  }, __jsx(\"i\", {\n    className: \"fas fa-plus-circle\"\n  })), setting.store_status.value === \"1\" && __jsx(Button, {\n    className: \"btn-quantity right btn-md ml-3\",\n    disabled: loading,\n    onClick: function onClick() {\n      return addCart();\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-shopping-cart\"\n  }), \" Comprar\", loading && __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\"))))))));\n};\n\nProductShow.getInitialProps = function _callee2(_ref) {\n  var query, product, basePrice;\n  return _regeneratorRuntime.async(function _callee2$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          query = _ref.query;\n\n          if (query.slug) {\n            _context4.next = 3;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", {\n            error: true,\n            product: {}\n          });\n\n        case 3:\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(get(\"/product/\".concat(query.slug)));\n\n        case 5:\n          product = _context4.sent;\n          basePrice = product.price;\n\n          if (product.options) {\n            basePrice = product.options[0].price;\n            product.options[0].selected = true;\n          }\n\n          return _context4.abrupt(\"return\", {\n            product: product,\n            basePrice: basePrice\n          });\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n};\n\nexport default ProductShow;","map":null,"metadata":{},"sourceType":"module"}