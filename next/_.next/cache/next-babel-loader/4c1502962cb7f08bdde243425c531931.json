{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/cart/Checkout/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Modal, Button, Row, Col, ListGroup, Alert } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport cookie from \"js-cookie\";\nimport Spinner from '../../../components/Spinner';\nimport { get, post } from '../../../services/http';\nimport { loadCart } from '../../../store/actions/cart';\nimport currency from '../../../utils/currency';\n\nfunction Checkout(props) {\n  var onHide = props.onHide,\n      show = props.show,\n      userAddresses = props.userAddresses;\n\n  var _useState = useState([]),\n      paymentMethods = _useState[0],\n      setPaymentMethods = _useState[1];\n\n  var _useState2 = useState([]),\n      addresses = _useState2[0],\n      setAddresses = _useState2[1];\n\n  var _useState3 = useState(true),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState({}),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState({}),\n      error = _useState5[0],\n      setError = _useState5[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      isLogged = _useSelector.isLogged;\n\n  var dispatch = useDispatch(loadCart());\n  var router = useRouter();\n  useEffect(function () {\n    function getAddresses() {\n      var result;\n      return _regeneratorRuntime.async(function getAddresses$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(get('/myAddress'));\n\n            case 2:\n              result = _context.sent;\n              setAddresses(result);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    if (isLogged) getAddresses();\n  }, [isLogged]);\n  useEffect(function () {\n    function getPaymentMethods() {\n      var result;\n      return _regeneratorRuntime.async(function getPaymentMethods$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(get('/paymentMethod'));\n\n            case 2:\n              result = _context2.sent;\n              setPaymentMethods(result);\n\n              if (!data.payment_method_id) {\n                data.payment_method_id = result[0].id;\n                setData(function () {\n                  return _objectSpread({}, data, {}, data);\n                });\n              }\n\n              setLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n\n    getPaymentMethods();\n  }, []);\n\n  function processCheckout() {\n    var result;\n    return _regeneratorRuntime.async(function processCheckout$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setError({});\n            setLoading(true);\n\n            if (data.user_address_id) {\n              _context3.next = 4;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", setError({\n              user_address_id: 'Selecione um endereÃ§o para entrega.'\n            }));\n\n          case 4:\n            if (data.payment_method_id) {\n              _context3.next = 6;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", setError({\n              payment_method_id: 'Selecione a forma de pagamento.'\n            }));\n\n          case 6:\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(post('/checkout', data));\n\n          case 8:\n            result = _context3.sent;\n            setLoading(true);\n            toast.success('Seu pedido fopi enviado com sucesso!', {\n              position: toast.POSITION.BOTTOM_CENTER\n            });\n            router.push(\"/order/\".concat(result.id));\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(Modal, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    show: show,\n    onHide: onHide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Finalizar Pedido\")), __jsx(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Selecione o endere\\xE7o de entrega\"), error.user_address_id && __jsx(Alert, {\n    variant: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, error.user_address_id), addresses.map(function (address) {\n    return __jsx(Form.Group, {\n      key: address.id,\n      controlId: \"address-\".concat(address.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(Form.Check, {\n      type: \"radio\",\n      value: address.id,\n      checked: data.user_address_id === address.id,\n      label: \"\\n                                \".concat(address.street, \", \").concat(address.number, \" - \\n                                \").concat(address.neighborhood.name, \" \\n                                \").concat(address.city.name, \" - \").concat(address.city.state.uf, \", \\n                                \").concat(address.cep ? address.cep : '', \"\\n                            \"),\n      onChange: function onChange(e) {\n        data.user_address_id = _parseInt(e.target.value);\n        setError(_objectSpread({}, error, {\n          user_address_id: null\n        }));\n        setData(function () {\n          return _objectSpread({}, data, {}, data);\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Entrega:\"), \" \", currency(address.neighborhood.price), \" \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), address.neighborhood.description, __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  })), paymentMethods && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Selecione o m\\xE9todo de Pagamento\"), __jsx(ListGroup, {\n    className: \"options mt-4\",\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, paymentMethods.map(function (paymentMethod) {\n    return __jsx(ListGroup.Item, {\n      key: paymentMethod.id,\n      active: data.payment_method_id === paymentMethod.id,\n      onClick: function onClick() {\n        data.payment_method_id = paymentMethod.id;\n        setData(function () {\n          return _objectSpread({}, data, {}, data);\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, paymentMethod.name);\n  }))), __jsx(Form.Group, {\n    controlId: \"observation\",\n    className: \"mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Observa\\xE7\\xE3o\"), __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    onChange: function onChange(e) {\n      data.observation = e.target.value;\n      setData(function () {\n        return _objectSpread({}, data, {}, data);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }))), __jsx(Modal.Footer, {\n    className: \"d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Cancelar\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: processCheckout,\n    disabled: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Confirmar Pedido\", loading && __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }))));\n}\n\nCheckout.mapInitialProps = function _callee() {\n  var userAddresses;\n  return _regeneratorRuntime.async(function _callee$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          userAddresses = [];\n\n          if (!cookie.get('token')) {\n            _context4.next = 5;\n            break;\n          }\n\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(get('/myAddress'));\n\n        case 4:\n          userAddresses = _context4.sent;\n\n        case 5:\n          return _context4.abrupt(\"return\", {\n            userAddresses: userAddresses\n          });\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n};\n\nexport default Checkout;","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/cart/Checkout/index.js"],"names":["useState","useEffect","useRouter","useDispatch","useSelector","Form","Modal","Button","Row","Col","ListGroup","Alert","toast","cookie","Spinner","get","post","loadCart","currency","Checkout","props","onHide","show","userAddresses","paymentMethods","setPaymentMethods","addresses","setAddresses","loading","setLoading","data","setData","error","setError","state","auth","isLogged","dispatch","router","getAddresses","result","getPaymentMethods","payment_method_id","id","processCheckout","user_address_id","success","position","POSITION","BOTTOM_CENTER","push","map","address","street","number","neighborhood","name","city","uf","cep","e","target","value","price","description","paymentMethod","observation","mapInitialProps"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Modal, Button, Row, Col, ListGroup, Alert } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport cookie from \"js-cookie\";\n\nimport Spinner from '../../../components/Spinner';\n\nimport { get, post } from '../../../services/http';\nimport { loadCart } from '../../../store/actions/cart';\nimport currency from '../../../utils/currency';\n\nfunction Checkout(props) {\n    const { onHide, show, userAddresses } = props;\n\n    const [paymentMethods, setPaymentMethods] = useState([]);\n    const [addresses, setAddresses] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [data, setData] = useState({});\n    const [error, setError] = useState({});\n\n    const { isLogged } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch(loadCart());\n\n    const router = useRouter();\n\n    useEffect(() => {\n        async function getAddresses() {\n            const result = await get('/myAddress');\n            setAddresses(result);\n        } \n\n        if (isLogged) getAddresses();\n    }, [isLogged]);\n\n    useEffect(() => {\n        async function getPaymentMethods() {\n            const result = await get('/paymentMethod');\n            setPaymentMethods(result);\n\n            if (!data.payment_method_id) {\n                data.payment_method_id = result[0].id;\n                setData(() => ({ ...data, ...data }));\n            }\n\n            setLoading(false);\n        } \n\n        getPaymentMethods();\n    }, []);\n\n    async function processCheckout() {\n        setError({});\n        setLoading(true);\n\n        if (!data.user_address_id) {\n            return setError({ user_address_id: 'Selecione um endereÃ§o para entrega.' });\n        }\n\n        if (!data.payment_method_id) {\n            return setError({ payment_method_id: 'Selecione a forma de pagamento.' });\n        }\n\n        const result = await post('/checkout', data);\n        setLoading(true);\n\n        toast.success('Seu pedido fopi enviado com sucesso!', {\n            position: toast.POSITION.BOTTOM_CENTER\n        });\n\n        router.push(`/order/${result.id}`);\n    }\n\n    return (\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        show={show}\n        onHide={onHide}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Finalizar Pedido\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n            <div className=\"mb-3\">\n                <h6>Selecione o endereÃ§o de entrega</h6>\n                {error.user_address_id && <Alert variant=\"danger\">{error.user_address_id}</Alert>}\n\n                {addresses.map(address => \n                    <Form.Group key={address.id} controlId={`address-${address.id}`}>\n                        <Form.Check \n                            type=\"radio\" \n                            value={address.id}\n                            checked={data.user_address_id === address.id}\n                            label={`\n                                ${address.street}, ${address.number} - \n                                ${address.neighborhood.name} \n                                ${address.city.name} - ${address.city.state.uf}, \n                                ${address.cep ? address.cep : ''}\n                            `} \n                            onChange={(e) => {\n                                data.user_address_id = parseInt(e.target.value);\n                                setError({ ...error, user_address_id: null })\n                                setData(() => ({ ...data, ...data }));\n                            }}\n                        />\n\n                        <strong>Entrega:</strong> {currency(address.neighborhood.price)} <br/>\n                        {address.neighborhood.description}\n\n                        <hr />\n                    </Form.Group>\n                )}\n            </div>\n\n            {paymentMethods && \n                <div>\n                    <h6>Selecione o mÃ©todo de Pagamento</h6>\n                    <ListGroup className=\"options mt-4\" horizontal>\n                        {paymentMethods.map(paymentMethod =>\n                            <ListGroup.Item \n                                key={paymentMethod.id} \n                                active={data.payment_method_id === paymentMethod.id}\n                                onClick={() => {\n                                    data.payment_method_id = paymentMethod.id;\n                                    setData(() => ({ ...data, ...data }));\n                                }}\n                            >\n                                {paymentMethod.name}\n                            </ListGroup.Item>\n                        )}\n                    </ListGroup>\n                </div>\n            }\n\n            <Form.Group controlId=\"observation\" className=\"mt-3\">\n                <Form.Label>ObservaÃ§Ã£o</Form.Label>\n                <Form.Control as=\"textarea\" rows=\"3\" onChange={(e) => {\n                    data.observation = e.target.value;\n                    setData(() => ({ ...data, ...data }));\n                }} />\n            </Form.Group>\n            \n        </Modal.Body>\n        <Modal.Footer className=\"d-flex justify-content-between\">\n            <Button variant=\"secondary\">\n                Cancelar\n            </Button>\n            <Button variant=\"primary\" onClick={processCheckout} disabled={loading}>\n                Confirmar Pedido\n                {loading && <Spinner />}\n            </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n}\n\nCheckout.mapInitialProps = async () => {\n    let userAddresses = [];\n\n    if (cookie.get('token')) {\n        userAddresses = await get('/myAddress');\n    }\n\n    return {\n        userAddresses\n    }\n}\n  \nexport default Checkout;"]},"metadata":{},"sourceType":"module"}