{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/auth/access/register-address.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form } from \"react-bootstrap\";\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useRouter } from \"next/router\";\nimport FormRegister from '../../../components/Pages/Auth/Register/form';\nimport Layouts from \"../../../components/Layouts\";\nimport Page from \"../../../components/Page\";\n\nfunction AccessRegister(props) {\n  var route = useRouter();\n  var pageTitle = 'Cadastre-se seu endereço';\n  var crumbs = [{\n    name: 'Cadastro'\n  }, {\n    name: 'Adicionar Endereço'\n  }];\n\n  function onSuccess() {\n    route.push('/');\n  }\n\n  return __jsx(Page, {\n    title: pageTitle,\n    crumbs: crumbs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Layouts, {\n    pageTitle: pageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.continueRegister && __jsx(FormRegister, {\n    onContinueRegister: function onContinueRegister() {\n      return props.onContinueRegister(false);\n    },\n    onSuccess: onSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), !props.continueRegister && __jsx(Form, {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Nome\"), __jsx(Form.Control, {\n    type: \"text\",\n    value: props.values.name,\n    onChange: function onChange(e) {\n      return props.setFieldValue('name', e.target.value);\n    },\n    placeholder: \"Seu nome Completo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), props.touched.name && props.errors.name && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.errors.name)), __jsx(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"E-mail\"), __jsx(Form.Control, {\n    type: \"email\",\n    value: props.values.email,\n    onChange: function onChange(e) {\n      return props.setFieldValue('email', e.target.value);\n    },\n    placeholder: \"E-mail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), props.touched.email && props.errors.email && __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, props.errors.email)), __jsx(\"div\", {\n    className: \"mt-3 mb-5 d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"button\",\n    onClick: function onClick() {\n      return props.onContinueRegister(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Cadastre-se\", __jsx(\"i\", {\n    className: \"fas fa-disk\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))))));\n}\n\nexport default withFormik({\n  mapPropsToValues: function mapPropsToValues(props) {\n    return {\n      name: '',\n      email: ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Informe seu nome').test('real', 'Informe seu nome completo.', function (value) {\n      if (!value) return;\n      var count = value.split(' ');\n\n      if (!count[1]) {\n        return false;\n      }\n\n      return true;\n    }),\n    email: Yup.string().email('Informe um e-mail válido').required('Informe seu e-mail')\n  }),\n  handleSubmit: function handleSubmit(values, _ref) {\n    var setSubmitting, setErrors, props, setStatus;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setSubmitting = _ref.setSubmitting, setErrors = _ref.setErrors, props = _ref.props, setStatus = _ref.setStatus;\n            setStatus({\n              \"continue\": true\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n})(AccessRegister);","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/auth/access/register-address.js"],"names":["Form","withFormik","Yup","useRouter","FormRegister","Layouts","Page","AccessRegister","props","route","pageTitle","crumbs","name","onSuccess","push","continueRegister","onContinueRegister","handleSubmit","values","e","setFieldValue","target","value","touched","errors","email","mapPropsToValues","validationSchema","object","shape","string","required","test","count","split","setSubmitting","setErrors","setStatus"],"mappings":"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","sourcesContent":["import { Form } from \"react-bootstrap\";\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useRouter } from \"next/router\";\n\nimport FormRegister from '../../../components/Pages/Auth/Register/form';\nimport Layouts from \"../../../components/Layouts\";\nimport Page from \"../../../components/Page\";\n\nfunction AccessRegister(props   ) {\n    const route = useRouter();\n\n    const pageTitle = 'Cadastre-se seu endereço';\n\n    const crumbs = [\n        { name: 'Cadastro' },\n        { name: 'Adicionar Endereço' }\n    ]\n\n    function onSuccess() {\n        route.push('/');\n    }\n\n    return (\n        <Page title={pageTitle} crumbs={crumbs}>\n            <Layouts pageTitle={pageTitle}>\n\n                {props.continueRegister && <FormRegister \n                    onContinueRegister={() => props.onContinueRegister(false)}\n                    onSuccess={onSuccess}\n                />}\n\n                {!props.continueRegister &&\n                <Form onSubmit={props.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Nome</Form.Label>\n                        <Form.Control \n                            type=\"text\" \n                            value={props.values.name}\n                            onChange={e => props.setFieldValue('name', e.target.value)}\n                            placeholder=\"Seu nome Completo\"\n                        />\n                        {props.touched.name && props.errors.name && \n                            <Form.Control.Feedback type=\"invalid\">{props.errors.name}</Form.Control.Feedback>\n                        }\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>E-mail</Form.Label>\n                        <Form.Control \n                            type=\"email\" \n                            value={props.values.email}\n                            onChange={e => props.setFieldValue('email', e.target.value)}\n                            placeholder=\"E-mail\"\n                        />\n                        {props.touched.email && props.errors.email && \n                            <Form.Control.Feedback type=\"invalid\">{props.errors.email}</Form.Control.Feedback>\n                        }\n                    </Form.Group>\n                    \n                    <div className=\"mt-3 mb-5 d-flex justify-content-between\">\n                        <button className=\"btn btn-primary\" type=\"button\" onClick={() => props.onContinueRegister(true)}>\n                            Cadastre-se\n                            <i className=\"fas fa-disk\"></i> \n                        </button>\n                    </div>\n                </Form>\n                }\n            </Layouts>\n        </Page>\n    );\n}\n\nexport default withFormik({\n    mapPropsToValues: props => ({ \n        name: '',\n        email: ''\n      }),\n  \n    validationSchema: Yup.object().shape({\n      name: Yup.string()\n        .required('Informe seu nome')\n        .test('real', 'Informe seu nome completo.', (value) => {\n            if (!value) return;\n  \n            const count = value.split(' ');\n  \n            if (!count[1]) {\n                return false;\n            }\n  \n            return true;\n        }),      \n      email: Yup.string().email('Informe um e-mail válido')\n          .required('Informe seu e-mail'),\n    }),\n  \n    handleSubmit: async (values, { setSubmitting, setErrors, props, setStatus }) => {\n        setStatus({ continue: true });\n    },\n  \n  })(AccessRegister);\n  "]},"metadata":{},"sourceType":"module"}