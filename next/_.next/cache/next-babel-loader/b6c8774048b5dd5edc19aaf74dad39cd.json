{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/components/Cart/Quantity/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport currency from '../../../utils/currency';\nimport { loadCart } from '../../../store/actions/cart';\nimport { patch } from '../../../services/http';\nexport default function (_ref) {\n  var cartProduct = _ref.cartProduct;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.cart;\n  }),\n      show = _useSelector.show,\n      cart = _useSelector.cart,\n      loading = _useSelector.loading;\n\n  function incrementQuantity(cartProduct) {\n    return _regeneratorRuntime.async(function incrementQuantity$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            cartProduct.quantity += 1;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(patch(\"/cart/\".concat(cart.id, \"/product/\").concat(cartProduct.id), {\n              quantity: cartProduct.quantity\n            }));\n\n          case 3:\n            dispatch(loadCart());\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function decrementQuantity(cartProduct) {\n    return _regeneratorRuntime.async(function decrementQuantity$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            cartProduct.quantity -= 1;\n\n            if (cartProduct.quantity <= 0) {\n              cartProduct.quantity = 1;\n            }\n\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(patch(\"/cart/\".concat(cart.id, \"/product/\").concat(cartProduct.id), {\n              quantity: cartProduct.quantity\n            }));\n\n          case 4:\n            dispatch(loadCart());\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  if (!cartProduct) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n  return __jsx(\"div\", {\n    className: \"p-2 bg-light d-flex flex-column text-center block-quantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Button, {\n    className: \"btn-quantity border-0 left btn-sm rounded-circle\",\n    onClick: function onClick() {\n      decrementQuantity(cartProduct);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-minus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"quantity btn btn-sm border-sm pl-3 pr-3 rounded-0 text-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, cartProduct.quantity || 1), __jsx(Button, {\n    className: \"btn-quantity border-0 right btn-sm rounded-circle\",\n    onClick: function onClick() {\n      incrementQuantity(cartProduct);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-plus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"total_price text-success mt-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, currency(cartProduct.total_price))));\n}","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/components/Cart/Quantity/index.js"],"names":["React","Button","useDispatch","currency","loadCart","patch","cartProduct","dispatch","useSelector","state","cart","show","loading","incrementQuantity","quantity","id","decrementQuantity","total_price"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AAEA,eAAe,gBAA0B;AAAA,MAAfC,WAAe,QAAfA,WAAe;AACrC,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AADqC,qBAGLM,WAAW,CAAC,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAHN;AAAA,MAG7BC,IAH6B,gBAG7BA,IAH6B;AAAA,MAGvBD,IAHuB,gBAGvBA,IAHuB;AAAA,MAGjBE,OAHiB,gBAGjBA,OAHiB;;AAKrC,WAAeC,iBAAf,CAAiCP,WAAjC;AAAA;AAAA;AAAA;AAAA;AACIA,YAAAA,WAAW,CAACQ,QAAZ,IAAwB,CAAxB;AADJ;AAAA,6CAEUT,KAAK,iBAAUK,IAAI,CAACK,EAAf,sBAA6BT,WAAW,CAACS,EAAzC,GAA+C;AAAED,cAAAA,QAAQ,EAAER,WAAW,CAACQ;AAAxB,aAA/C,CAFf;;AAAA;AAGIP,YAAAA,QAAQ,CAACH,QAAQ,EAAT,CAAR;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,WAAeY,iBAAf,CAAiCV,WAAjC;AAAA;AAAA;AAAA;AAAA;AACIA,YAAAA,WAAW,CAACQ,QAAZ,IAAwB,CAAxB;;AAEA,gBAAIR,WAAW,CAACQ,QAAZ,IAAwB,CAA5B,EAA+B;AAC7BR,cAAAA,WAAW,CAACQ,QAAZ,GAAuB,CAAvB;AACD;;AALL;AAAA,6CAOUT,KAAK,iBAAUK,IAAI,CAACK,EAAf,sBAA6BT,WAAW,CAACS,EAAzC,GAA+C;AAAED,cAAAA,QAAQ,EAAER,WAAW,CAACQ;AAAxB,aAA/C,CAPf;;AAAA;AAQIP,YAAAA,QAAQ,CAACH,QAAQ,EAAT,CAAR;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,MAAI,CAACE,WAAL,EAAkB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAElB,SACI;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,kDAAlB;AAAqE,IAAA,OAAO,EAAE,mBAAM;AAChFU,MAAAA,iBAAiB,CAACV,WAAD,CAAjB;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,6DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,WAAW,CAACQ,QAAZ,IAAwB,CAD7B,CANJ,EASI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,mDAAlB;AAAsE,IAAA,OAAO,EAAE,mBAAM;AACjFD,MAAAA,iBAAiB,CAACP,WAAD,CAAjB;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CATJ,CADJ,EAiBI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,QAAQ,CAACG,WAAW,CAACW,WAAb,CAAZ,CADJ,CAjBJ,CADJ;AAwBH","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\n\nimport currency from '../../../utils/currency';\nimport { loadCart } from '../../../store/actions/cart';\nimport { patch } from '../../../services/http';\n\nexport default function({ cartProduct }) {\n    const dispatch = useDispatch();\n    \n    const { show, cart, loading } = useSelector(state => state.cart);\n\n    async function incrementQuantity(cartProduct) {\n        cartProduct.quantity += 1;\n        await patch(`/cart/${cart.id}/product/${cartProduct.id}`, { quantity: cartProduct.quantity });\n        dispatch(loadCart());\n    }\n  \n    async function decrementQuantity(cartProduct) {\n        cartProduct.quantity -= 1;\n  \n        if (cartProduct.quantity <= 0) {\n          cartProduct.quantity = 1;\n        }\n  \n        await patch(`/cart/${cart.id}/product/${cartProduct.id}`, { quantity: cartProduct.quantity });\n        dispatch(loadCart());\n    }\n\n    if (!cartProduct) return <div/>;\n\n    return (\n        <div className=\"p-2 bg-light d-flex flex-column text-center block-quantity\">\n            <div>\n                <Button className=\"btn-quantity border-0 left btn-sm rounded-circle\" onClick={() => {\n                    decrementQuantity(cartProduct);\n                }}>\n                    <i className=\"fas fa-minus-circle\"></i>\n                </Button>\n                <div className=\"quantity btn btn-sm border-sm pl-3 pr-3 rounded-0 text-dark\">\n                    {cartProduct.quantity || 1}\n                </div>\n                <Button className=\"btn-quantity border-0 right btn-sm rounded-circle\" onClick={() => {\n                    incrementQuantity(cartProduct);\n                }}>\n                    <i className=\"fas fa-plus-circle\"></i>\n                </Button>                                        \n            </div>\n\n            <div className=\"total_price text-success mt-1\">\n                <b>{currency(cartProduct.total_price)}</b>\n            </div>\n        </div>        \n    );\n\n}"]},"metadata":{},"sourceType":"module"}