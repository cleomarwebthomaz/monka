{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport renderHTML from 'react-render-html';\nimport Layout from '../../../components/Layouts';\nimport Loading from '../../../components/Loading';\nimport { get } from '../../../services/http';\nimport Page from '../../../components/Page';\n\nfunction PageStatic() {\n  var _useState = useState({}),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var _useState2 = useState('PÃ¡gina'),\n      pageTitle = _useState2[0],\n      setPageTitle = _useState2[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    function getPageData() {\n      var _page;\n\n      return _regeneratorRuntime.async(function getPageData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(router.query.slug && router.query.slug)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(get(\"/page/\".concat(router.query.slug)));\n\n            case 3:\n              _page = _context.sent;\n              setPageTitle(_page.title);\n              setPage(_page);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    getPageData();\n  }, [router.query]);\n  var crumbs = [{\n    name: pageTitle\n  }];\n  if (!page.id) return __jsx(Loading, null);\n  return __jsx(Page, {\n    title: pageTitle,\n    crumbs: crumbs\n  }, __jsx(Layout, {\n    pageTitle: pageTitle\n  }, renderHTML(page.content)));\n}\n\nexport default PageStatic;","map":null,"metadata":{},"sourceType":"module"}