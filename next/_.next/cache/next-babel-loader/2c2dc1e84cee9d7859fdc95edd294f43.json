{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { SET_SETTING } from '../types/setting';\nimport { get } from '../../services/http';\nexport var loadSettings = function loadSettings() {\n  return function _callee(dispatch) {\n    var data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(get('/setting'));\n\n          case 2:\n            data = _context.sent;\n            dispatch({\n              type: SET_SETTING,\n              payload: data\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n};\nexport var setSettings = function setSettings(data) {\n  return {\n    type: SET_SETTING,\n    payload: data\n  };\n};","map":null,"metadata":{},"sourceType":"module"}