{"ast":null,"code":"var _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/App.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { loginStorage } from '../store/actions/auth';\nimport { loadSettings, setSettings } from '../store/actions/setting';\nimport { ToastContainer } from 'react-toastify';\nimport pusher from '../services/pusher';\nimport { get } from '../services/http';\n\nconst App = props => {\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  console.log(props.settings);\n  useEffect(() => {// pusher.bind(`updatedSettings`, function() {\n    //     dispatch(loadSettings());\n    // });\n    // dispatch( setSettings(props.settings) );\n    // dispatch(loadSettings());\n    // dispatch(loginStorage());\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), props.children);\n};\n\nApp.getInitialProps = async ctx => {\n  const settings = await get('/setting');\n  return {\n    settings\n  };\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/App.js"],"names":["useDispatch","useSelector","useEffect","loginStorage","loadSettings","setSettings","ToastContainer","pusher","get","App","props","dispatch","auth","state","console","log","settings","children","getInitialProps","ctx"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,0BAA1C;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,GAAT,QAAoB,kBAApB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACnB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,IAAI,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,QAAlB;AAEAd,EAAAA,SAAS,CAAC,MAAM,CAEZ;AACA;AACA;AAEA;AACA;AACA;AAEH,GAVQ,EAUN,EAVM,CAAT;AAYA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKQ,KAAK,CAACO,QAFX,CADJ;AAOH,CAzBD;;AA2BAR,GAAG,CAACS,eAAJ,GAAsB,MAAMC,GAAN,IAAa;AAC/B,QAAMH,QAAQ,GAAG,MAAMR,GAAG,CAAC,UAAD,CAA1B;AAEA,SAAO;AACHQ,IAAAA;AADG,GAAP;AAGH,CAND;;AAQA,eAAeP,GAAf","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { loginStorage } from '../store/actions/auth';\nimport { loadSettings, setSettings } from '../store/actions/setting';\nimport { ToastContainer } from 'react-toastify';\n\nimport pusher from '../services/pusher';\nimport { get } from '../services/http';\n\nconst App = (props) => {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth);\n\n    console.log(props.settings)\n\n    useEffect(() => {\n\n        // pusher.bind(`updatedSettings`, function() {\n        //     dispatch(loadSettings());\n        // });\n        \n        // dispatch( setSettings(props.settings) );\n        // dispatch(loadSettings());\n        // dispatch(loginStorage());\n\n    }, []);\n\n    return (\n        <div>\n            <ToastContainer />\n            {props.children}\n        </div>\n    );\n\n}\n\nApp.getInitialProps = async ctx => {\n    const settings = await get('/setting');\n\n    return {\n        settings\n    }\n}\n \nexport default App; "]},"metadata":{},"sourceType":"module"}