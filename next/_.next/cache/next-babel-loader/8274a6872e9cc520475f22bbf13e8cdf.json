{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/pages/page/[slug]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport renderHTML from 'react-render-html';\nimport Layout from '../../../components/Layouts';\nimport Loading from '../../../components/Loading';\nimport { get } from '../../../services/http';\nimport Page from '../../../components/Page';\n\nfunction PageStatic() {\n  var _useState = useState({}),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var _useState2 = useState('Página'),\n      pageTitle = _useState2[0],\n      setPageTitle = _useState2[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    function getPageData() {\n      var _page;\n\n      return _regeneratorRuntime.async(function getPageData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(router.query.slug && router.query.slug)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(get(\"/page/\".concat(router.query.slug)));\n\n            case 3:\n              _page = _context.sent;\n              setPageTitle(_page.title);\n              setPage(_page);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    getPageData();\n  }, [router.query]);\n  var crumbs = [{\n    name: pageTitle\n  }];\n  if (!page.id) return __jsx(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n  return __jsx(Page, {\n    title: pageTitle,\n    crumbs: crumbs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Layout, {\n    pageTitle: pageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, renderHTML(page.content)));\n}\n\nexport default PageStatic;","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/nps/monka-api/next/pages/page/[slug]/index.js"],"names":["useEffect","useState","useRouter","renderHTML","Layout","Loading","get","Page","PageStatic","page","setPage","pageTitle","setPageTitle","router","getPageData","query","slug","title","crumbs","name","id","content"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AAEA,SAASC,GAAT,QAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;;AAEA,SAASC,UAAT,GAAsB;AAAA,kBACMP,QAAQ,CAAC,EAAD,CADd;AAAA,MACXQ,IADW;AAAA,MACLC,OADK;;AAAA,mBAEgBT,QAAQ,CAAC,QAAD,CAFxB;AAAA,MAEXU,SAFW;AAAA,MAEAC,YAFA;;AAIlB,MAAMC,MAAM,GAAGX,SAAS,EAAxB;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACZ,aAAec,WAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEQD,MAAM,CAACE,KAAP,CAAaC,IAAb,IAAqBH,MAAM,CAACE,KAAP,CAAaC,IAF1C;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAG2BV,GAAG,iBAAUO,MAAM,CAACE,KAAP,CAAaC,IAAvB,EAH9B;;AAAA;AAGcP,cAAAA,KAHd;AAIQG,cAAAA,YAAY,CAACH,KAAI,CAACQ,KAAN,CAAZ;AACAP,cAAAA,OAAO,CAACD,KAAD,CAAP;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASAK,IAAAA,WAAW;AACd,GAXQ,EAWN,CAACD,MAAM,CAACE,KAAR,CAXM,CAAT;AAaA,MAAMG,MAAM,GAAG,CACX;AAAEC,IAAAA,IAAI,EAAER;AAAR,GADW,CAAf;AAIA,MAAI,CAACF,IAAI,CAACW,EAAV,EAAc,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEd,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAET,SAAb;AAAwB,IAAA,MAAM,EAAEO,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEP,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,UAAU,CAACM,IAAI,CAACY,OAAN,CADf,CADJ,CADJ;AAOH;;AAGD,eAAeb,UAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport renderHTML from 'react-render-html';\n\nimport Layout from '../../../components/Layouts';\nimport Loading from '../../../components/Loading';\n\nimport { get } from '../../../services/http';\nimport Page from '../../../components/Page';\n\nfunction PageStatic() {\n    const [page, setPage] = useState({});\n    const [pageTitle, setPageTitle] = useState('Página');\n\n    const router = useRouter()\n\n    useEffect(() => {\n        async function getPageData() {\n            \n            if (router.query.slug && router.query.slug) {\n                const page = await get(`/page/${router.query.slug}`);\n                setPageTitle(page.title);\n                setPage(page);\n            }\n        }\n\n        getPageData();\n    }, [router.query]);\n\n    const crumbs = [\n        { name: pageTitle },\n    ];\n  \n    if (!page.id) return <Loading />;\n\n    return (\n        <Page title={pageTitle} crumbs={crumbs}>\n            <Layout pageTitle={pageTitle}>\n                {renderHTML(page.content)}\n            </Layout>\n        </Page>\n    );\n}\n\n\nexport default PageStatic;\n"]},"metadata":{},"sourceType":"module"}