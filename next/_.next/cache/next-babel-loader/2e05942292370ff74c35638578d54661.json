{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/components/ProducItem/show.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Modal, Button, Image, ListGroup } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LoginModal from '../../auth/Modal';\nimport currency from \"../../../utils/currency\";\nexport default function (props) {\n  var show = props.show,\n      setShow = props.setShow,\n      product = props.product,\n      setting = props.setting;\n\n  var _useState = useState(props.product.quantity || 1),\n      quantity = _useState[0],\n      setQuantity = _useState[1];\n\n  var _useState2 = useState(props.product.price),\n      basePrice = _useState2[0],\n      setBasePrice = _useState2[1];\n\n  var _useState3 = useState(props.product.price),\n      totalPrice = _useState3[0],\n      setTotalPrice = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      showLoginModal = _useState5[0],\n      setShowLoginModal = _useState5[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      isLogged = _useSelector.isLogged;\n\n  useEffect(function () {\n    if (product.options) {\n      var selected = product.options.find(function (item) {\n        return item.selected;\n      });\n\n      if (!selected) {\n        product.options[0].selected = true;\n        setBasePrice(product.options[0].price);\n      }\n    }\n  }, []);\n\n  function updateProductPrices(base) {\n    var total = 0;\n\n    if (base) {\n      setBasePrice(base);\n    } else {\n      base = basePrice;\n    }\n\n    if (product.groups.length > 0) {\n      for (var i in product.groups) {\n        var group = product.groups[i];\n\n        for (var key in group.options) {\n          var option = group.options[key];\n\n          if (option.quantity > 0) {\n            var totalOptionPrice = option.price * option.quantity;\n            total = total += totalOptionPrice;\n          }\n        }\n      }\n    }\n\n    var totalPrice = (base + total) * quantity;\n    setTotalPrice(totalPrice);\n  }\n\n  var handleClose = function handleClose() {\n    setShow(false);\n  };\n\n  useEffect(function () {\n    updateProductPrices();\n  }, [quantity, basePrice, product]);\n\n  function incrementQuantity() {\n    var newQuantity = quantity;\n    newQuantity = newQuantity += 1;\n    setQuantity(newQuantity);\n  }\n\n  function decrementQuantity() {\n    var newQuantity = quantity;\n    newQuantity = newQuantity -= 1;\n    if (newQuantity <= 0) newQuantity = 1;\n    setQuantity(newQuantity);\n  }\n\n  function addCart() {\n    var force,\n        _args2 = arguments;\n    return _regeneratorRuntime.async(function addCart$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            force = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : false;\n            _context2.prev = 1;\n\n            if (!(setting.store_status.value !== \"1\")) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 4:\n            if (!(!isLogged && !force)) {\n              _context2.next = 7;\n              break;\n            }\n\n            setShow(false);\n            return _context2.abrupt(\"return\", setShowLoginModal(true));\n\n          case 7:\n            setLoading(true);\n            setError({});\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(validateProductAddToCart().then(function _callee(e) {\n              var productData, listOptions;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      productData = {\n                        product_id: product.id,\n                        quantity: quantity\n                      };\n                      productData.product_option_id = product.options.find(function (item) {\n                        return item.selected;\n                      }).id;\n                      listOptions = [];\n                      product.groups.map(function (group) {\n                        var hasOptions = group.options.filter(function (op) {\n                          return op.quantity > 0;\n                        }).length;\n\n                        if (hasOptions > 0) {\n                          group.options.filter(function (option) {\n                            return option.quantity > 0;\n                          }).map(function (option) {\n                            listOptions.push({\n                              product_group_option_id: option.id,\n                              product_group_id: option.product_group_id,\n                              quantity: option.quantity\n                            });\n                          });\n                          return productData.options;\n                        }\n                      });\n                      productData.options = listOptions;\n                      _context.next = 7;\n                      return _regeneratorRuntime.awrap(post('/cart', productData));\n\n                    case 7:\n                      toast.success('Produto adicionado ao carrinho de compras', {\n                        position: toast.POSITION.BOTTOM_CENTER\n                      });\n                      dispatch(loadCart());\n                      router.push('/cart');\n\n                    case 10:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              });\n            })[\"catch\"](function (error) {\n              setError(error);\n              setLoading(false);\n            }));\n\n          case 11:\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(_context2.t0);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 13]]);\n  }\n\n  return __jsx(React.Fragment, null, !isLogged && __jsx(LoginModal, {\n    showLogin: showLoginModal,\n    closeModal: function closeModal() {\n      setShowLoginModal(false);\n      setShow(true);\n    },\n    onSuccess: function onSuccess() {\n      return addCart(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), __jsx(Modal, {\n    show: show,\n    onHide: handleClose,\n    animation: false,\n    size: \"md\",\n    className: \"modal-product-show\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    className: \"border-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), __jsx(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, __jsx(Image, {\n    src: product.image_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, product.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, product.description), product.options && __jsx(ListGroup, {\n    className: \"options mt-4\",\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, product.options.map(function (option) {\n    return __jsx(ListGroup.Item, {\n      key: option.id,\n      active: option.selected,\n      onClick: function onClick() {\n        product.options.map(function (op) {\n          return op.selected = false;\n        });\n        option.selected = true;\n        setBasePrice(option.price);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, option.name);\n  }))), __jsx(Modal.Footer, {\n    className: \"d-flex justify-content-between align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, __jsx(\"h5\", {\n    className: \"price text-white pt-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, currency(totalPrice))), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, __jsx(Button, {\n    className: \"btn-quantity border-0 left btn-sm\",\n    onClick: decrementQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-minus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"quantity btn btn-sm border-sm pl-3 pr-3 rounded-0 text-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, quantity || 1), __jsx(Button, {\n    className: \"btn-quantity border-0 right btn-sm\",\n    onClick: incrementQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-plus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  })), setting.store_status.value === \"1\" && __jsx(Button, {\n    className: \"btn-quantity right btn-md ml-3 border-0 text-uppercase\",\n    disabled: loading,\n    onClick: function onClick() {\n      return addCart();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-shopping-cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), \" Pedir\", loading && __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Loading...\"))))))));\n}","map":{"version":3,"sources":["/Users/webthomaz/Desktop/Desenvolvimento/m/monka/monka-api/next/pages/components/ProducItem/show.js"],"names":["Modal","Button","Image","ListGroup","useState","useEffect","useDispatch","useSelector","LoginModal","currency","props","show","setShow","product","setting","quantity","setQuantity","price","basePrice","setBasePrice","totalPrice","setTotalPrice","loading","setLoading","showLoginModal","setShowLoginModal","dispatch","state","auth","isLogged","options","selected","find","item","updateProductPrices","base","total","groups","length","i","group","key","option","totalOptionPrice","handleClose","incrementQuantity","newQuantity","decrementQuantity","addCart","force","store_status","value","setError","validateProductAddToCart","then","e","productData","product_id","id","product_option_id","listOptions","map","hasOptions","filter","op","push","product_group_option_id","product_group_id","post","toast","success","position","POSITION","BOTTOM_CENTER","loadCart","router","error","console","log","image_url","name","description"],"mappings":";;;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,SAA/B,QAAgD,iBAAhD;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,eAAe,UAASC,KAAT,EAAgB;AAAA,MACpBC,IADoB,GACgBD,KADhB,CACpBC,IADoB;AAAA,MACdC,OADc,GACgBF,KADhB,CACdE,OADc;AAAA,MACLC,OADK,GACgBH,KADhB,CACLG,OADK;AAAA,MACIC,OADJ,GACgBJ,KADhB,CACII,OADJ;;AAAA,kBAEKV,QAAQ,CAACM,KAAK,CAACG,OAAN,CAAcE,QAAd,IAA0B,CAA3B,CAFb;AAAA,MAEpBA,QAFoB;AAAA,MAEVC,WAFU;;AAAA,mBAGOZ,QAAQ,CAACM,KAAK,CAACG,OAAN,CAAcI,KAAf,CAHf;AAAA,MAGpBC,SAHoB;AAAA,MAGTC,YAHS;;AAAA,mBAISf,QAAQ,CAACM,KAAK,CAACG,OAAN,CAAcI,KAAf,CAJjB;AAAA,MAIpBG,UAJoB;AAAA,MAIRC,aAJQ;;AAAA,mBAKGjB,QAAQ,CAAC,KAAD,CALX;AAAA,MAKpBkB,OALoB;AAAA,MAKXC,UALW;;AAAA,mBAMiBnB,QAAQ,CAAC,KAAD,CANzB;AAAA,MAMpBoB,cANoB;AAAA,MAMJC,iBANI;;AAQ3B,MAAMC,QAAQ,GAAGpB,WAAW,EAA5B;;AAR2B,qBASNC,WAAW,CAAC,UAAAoB,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CATL;AAAA,MASnBC,QATmB,gBASnBA,QATmB;;AAW3BxB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIQ,OAAO,CAACiB,OAAZ,EAAqB;AACjB,UAAMC,QAAQ,GAAGlB,OAAO,CAACiB,OAAR,CAAgBE,IAAhB,CAAqB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACF,QAAT;AAAA,OAAzB,CAAjB;;AAEA,UAAI,CAACA,QAAL,EAAe;AACXlB,QAAAA,OAAO,CAACiB,OAAR,CAAgB,CAAhB,EAAmBC,QAAnB,GAA8B,IAA9B;AACAZ,QAAAA,YAAY,CAACN,OAAO,CAACiB,OAAR,CAAgB,CAAhB,EAAmBb,KAApB,CAAZ;AACH;AACJ;AAEJ,GAVQ,EAUN,EAVM,CAAT;;AAYA,WAASiB,mBAAT,CAA6BC,IAA7B,EAAmC;AAC/B,QAAIC,KAAK,GAAG,CAAZ;;AAEA,QAAID,IAAJ,EAAU;AACNhB,MAAAA,YAAY,CAACgB,IAAD,CAAZ;AACH,KAFD,MAEO;AACHA,MAAAA,IAAI,GAAGjB,SAAP;AACH;;AAED,QAAIL,OAAO,CAACwB,MAAR,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC3B,WAAK,IAAIC,CAAT,IAAc1B,OAAO,CAACwB,MAAtB,EAA8B;AAC1B,YAAMG,KAAK,GAAG3B,OAAO,CAACwB,MAAR,CAAeE,CAAf,CAAd;;AACA,aAAK,IAAIE,GAAT,IAAgBD,KAAK,CAACV,OAAtB,EAA+B;AAC3B,cAAMY,MAAM,GAAGF,KAAK,CAACV,OAAN,CAAcW,GAAd,CAAf;;AACA,cAAIC,MAAM,CAAC3B,QAAP,GAAkB,CAAtB,EAAyB;AACrB,gBAAM4B,gBAAgB,GAAGD,MAAM,CAACzB,KAAP,GAAeyB,MAAM,CAAC3B,QAA/C;AACAqB,YAAAA,KAAK,GAAGA,KAAK,IAAIO,gBAAjB;AACH;AACJ;AACJ;AACJ;;AAED,QAAMvB,UAAU,GAAG,CAACe,IAAI,GAAGC,KAAR,IAAiBrB,QAApC;AAEAM,IAAAA,aAAa,CAACD,UAAD,CAAb;AACH;;AAED,MAAMwB,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBhC,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIAP,EAAAA,SAAS,CAAC,YAAM;AACZ6B,IAAAA,mBAAmB;AACtB,GAFQ,EAEN,CAACnB,QAAD,EAAWG,SAAX,EAAsBL,OAAtB,CAFM,CAAT;;AAIA,WAASgC,iBAAT,GAA6B;AACzB,QAAIC,WAAW,GAAG/B,QAAlB;AACA+B,IAAAA,WAAW,GAAGA,WAAW,IAAI,CAA7B;AACA9B,IAAAA,WAAW,CAAC8B,WAAD,CAAX;AACH;;AAED,WAASC,iBAAT,GAA6B;AACzB,QAAID,WAAW,GAAG/B,QAAlB;AACA+B,IAAAA,WAAW,GAAGA,WAAW,IAAI,CAA7B;AACA,QAAIA,WAAW,IAAI,CAAnB,EAAsBA,WAAW,GAAG,CAAd;AACtB9B,IAAAA,WAAW,CAAC8B,WAAD,CAAX;AACH;;AAED,WAAeE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,YAAAA,KAAvB,8DAA+B,KAA/B;AAAA;;AAAA,kBAEYnC,OAAO,CAACoC,YAAR,CAAqBC,KAArB,KAA+B,GAF3C;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,kBAMY,CAACtB,QAAD,IAAa,CAACoB,KAN1B;AAAA;AAAA;AAAA;;AAOYrC,YAAAA,OAAO,CAAC,KAAD,CAAP;AAPZ,8CAQmBa,iBAAiB,CAAC,IAAD,CARpC;;AAAA;AAWQF,YAAAA,UAAU,CAAC,IAAD,CAAV;AACA6B,YAAAA,QAAQ,CAAC,EAAD,CAAR;AAZR;AAAA,6CAccC,wBAAwB,GAAGC,IAA3B,CAAgC,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BC,sBAAAA,WAD4B,GACd;AAChBC,wBAAAA,UAAU,EAAE5C,OAAO,CAAC6C,EADJ;AAEhB3C,wBAAAA,QAAQ,EAARA;AAFgB,uBADc;AAMlCyC,sBAAAA,WAAW,CAACG,iBAAZ,GAAgC9C,OAAO,CAACiB,OAAR,CAAgBE,IAAhB,CAAqB,UAAAC,IAAI;AAAA,+BAAIA,IAAI,CAACF,QAAT;AAAA,uBAAzB,EAA4C2B,EAA5E;AAEME,sBAAAA,WAR4B,GAQd,EARc;AASlC/C,sBAAAA,OAAO,CAACwB,MAAR,CAAewB,GAAf,CAAmB,UAAArB,KAAK,EAAI;AACxB,4BAAMsB,UAAU,GAAGtB,KAAK,CAACV,OAAN,CAAciC,MAAd,CAAqB,UAAAC,EAAE;AAAA,iCAAIA,EAAE,CAACjD,QAAH,GAAc,CAAlB;AAAA,yBAAvB,EAA4CuB,MAA/D;;AAEA,4BAAIwB,UAAU,GAAG,CAAjB,EAAoB;AAChBtB,0BAAAA,KAAK,CAACV,OAAN,CAAciC,MAAd,CAAqB,UAAArB,MAAM;AAAA,mCAAIA,MAAM,CAAC3B,QAAP,GAAkB,CAAtB;AAAA,2BAA3B,EAAoD8C,GAApD,CAAwD,UAAAnB,MAAM,EAAI;AAC9DkB,4BAAAA,WAAW,CAACK,IAAZ,CAAiB;AACbC,8BAAAA,uBAAuB,EAAExB,MAAM,CAACgB,EADnB;AAEbS,8BAAAA,gBAAgB,EAAEzB,MAAM,CAACyB,gBAFZ;AAGbpD,8BAAAA,QAAQ,EAAE2B,MAAM,CAAC3B;AAHJ,6BAAjB;AAKH,2BAND;AAQA,iCAAOyC,WAAW,CAAC1B,OAAnB;AACH;AACJ,uBAdD;AAgBA0B,sBAAAA,WAAW,CAAC1B,OAAZ,GAAsB8B,WAAtB;AAzBkC;AAAA,uDA2B5BQ,IAAI,CAAC,OAAD,EAAUZ,WAAV,CA3BwB;;AAAA;AA6BlCa,sBAAAA,KAAK,CAACC,OAAN,CAAc,2CAAd,EAA2D;AAAEC,wBAAAA,QAAQ,EAAEF,KAAK,CAACG,QAAN,CAAeC;AAA3B,uBAA3D;AAEA/C,sBAAAA,QAAQ,CAACgD,QAAQ,EAAT,CAAR;AAEAC,sBAAAA,MAAM,CAACV,IAAP,CAAY,OAAZ;;AAjCkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC,WAmCG,UAACW,KAAD,EAAW;AAChBxB,cAAAA,QAAQ,CAACwB,KAAD,CAAR;AACArD,cAAAA,UAAU,CAAC,KAAD,CAAV;AACH,aAtCK,CAdd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuDQsD,YAAAA,OAAO,CAACC,GAAR;;AAvDR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2DA,SACI,4BAEC,CAACjD,QAAD,IACG,MAAC,UAAD;AACI,IAAA,SAAS,EAAEL,cADf;AAEI,IAAA,UAAU,EAAE,sBAAM;AACdC,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAb,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KALL;AAMI,IAAA,SAAS,EAAE;AAAA,aACXoC,OAAO,CAAC,IAAD,CADI;AAAA,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAcD,MAAC,KAAD;AAAO,IAAA,IAAI,EAAErC,IAAb;AAAmB,IAAA,MAAM,EAAEiC,WAA3B;AAAwC,IAAA,SAAS,EAAE,KAAnD;AAA0D,IAAA,IAAI,EAAC,IAA/D;AAAoE,IAAA,SAAS,EAAC,oBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAA0B,IAAA,SAAS,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAGC,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,GAAG,EAAE/B,OAAO,CAACkE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlE,OAAO,CAACmE,IAAb,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAInE,OAAO,CAACoE,WAAZ,CAJJ,EAMKpE,OAAO,CAACiB,OAAR,IACG,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,cAArB;AAAoC,IAAA,UAAU,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjB,OAAO,CAACiB,OAAR,CAAgB+B,GAAhB,CAAoB,UAAAnB,MAAM;AAAA,WACvB,MAAC,SAAD,CAAW,IAAX;AACI,MAAA,GAAG,EAAEA,MAAM,CAACgB,EADhB;AAEI,MAAA,MAAM,EAAEhB,MAAM,CAACX,QAFnB;AAGI,MAAA,OAAO,EAAE,mBAAM;AACXlB,QAAAA,OAAO,CAACiB,OAAR,CAAgB+B,GAAhB,CAAoB,UAAAG,EAAE;AAAA,iBAAIA,EAAE,CAACjC,QAAH,GAAc,KAAlB;AAAA,SAAtB;AACAW,QAAAA,MAAM,CAACX,QAAP,GAAkB,IAAlB;AACAZ,QAAAA,YAAY,CAACuB,MAAM,CAACzB,KAAR,CAAZ;AACH,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASKyB,MAAM,CAACsC,IATZ,CADuB;AAAA,GAA1B,CADL,CAPR,CAHD,EA8BC,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,SAAS,EAAC,mDAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCvE,QAAQ,CAACW,UAAD,CAA/C,CADJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,mCAAlB;AAAsD,IAAA,OAAO,EAAE2B,iBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,8DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhC,QAAQ,IAAI,CADjB,CAJJ,EAOI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,oCAAlB;AAAuD,IAAA,OAAO,EAAE8B,iBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,EAWK/B,OAAO,CAACoC,YAAR,CAAqBC,KAArB,KAA+B,GAA/B,IACG,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,wDAAlB;AAA2E,IAAA,QAAQ,EAAE7B,OAArF;AAA8F,IAAA,OAAO,EAAE;AAAA,aAAM0B,OAAO,EAAb;AAAA,KAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,YAGK1B,OAAO,IACJ,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAJR,CAZR,CAHJ,CALJ,CA9BD,CAdC,CADJ;AAoFH","sourcesContent":["import { Modal, Button, Image, ListGroup } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport LoginModal from '../../auth/Modal';\n\nimport currency from \"../../../utils/currency\";\n\nexport default function(props) {\n    const {show, setShow, product, setting } = props;\n    const [quantity, setQuantity] = useState(props.product.quantity || 1);\n    const [basePrice, setBasePrice] = useState(props.product.price);\n    const [totalPrice, setTotalPrice] = useState(props.product.price);\n    const [loading, setLoading] = useState(false);\n    const [showLoginModal, setShowLoginModal] = useState(false);\n\n    const dispatch = useDispatch();\n    const { isLogged } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        if (product.options) {\n            const selected = product.options.find(item => item.selected);\n\n            if (!selected) {\n                product.options[0].selected = true;\n                setBasePrice(product.options[0].price);\n            }\n        }\n\n    }, []);\n\n    function updateProductPrices(base) {\n        let total = 0;\n        \n        if (base) {\n            setBasePrice(base);\n        } else {\n            base = basePrice;\n        }\n\n        if (product.groups.length > 0) {\n            for (let i in product.groups) {\n                const group = product.groups[i];\n                for (let key in group.options) {\n                    const option = group.options[key];\n                    if (option.quantity > 0) {\n                        const totalOptionPrice = option.price * option.quantity;\n                        total = total += totalOptionPrice;\n                    }\n                }\n            }\n        }\n\n        const totalPrice = (base + total) * quantity ;\n        \n        setTotalPrice(totalPrice);\n    }\n\n    const handleClose = () => {\n        setShow(false);\n    }\n\n    useEffect(() => {\n        updateProductPrices();\n    }, [quantity, basePrice, product]);\n\n    function incrementQuantity() {\n        let newQuantity = quantity;\n        newQuantity = newQuantity += 1;\n        setQuantity(newQuantity);\n    }\n    \n    function decrementQuantity() {\n        let newQuantity = quantity;\n        newQuantity = newQuantity -= 1;\n        if (newQuantity <= 0) newQuantity = 1;\n        setQuantity(newQuantity);\n    }\n\n    async function addCart(force = false) {\n        try {\n            if (setting.store_status.value !== \"1\") {\n                return;\n            }\n\n            if (!isLogged && !force) {\n                setShow(false);\n                return setShowLoginModal(true);\n            }\n\n            setLoading(true);\n            setError({});\n\n            await validateProductAddToCart().then(async e => {\n                const productData = {\n                    product_id: product.id,\n                    quantity\n                };\n\n                productData.product_option_id = product.options.find(item => item.selected).id;\n\n                const listOptions = [];\n                product.groups.map(group => {\n                    const hasOptions = group.options.filter(op => op.quantity > 0).length;\n\n                    if (hasOptions > 0) {\n                        group.options.filter(option => option.quantity > 0).map(option => {\n                            listOptions.push({\n                                product_group_option_id: option.id,\n                                product_group_id: option.product_group_id,\n                                quantity: option.quantity\n                            });\n                        });\n\n                        return productData.options\n                    }\n                });\n\n                productData.options = listOptions;\n\n                await post('/cart', productData);\n\n                toast.success('Produto adicionado ao carrinho de compras', { position: toast.POSITION.BOTTOM_CENTER });\n\n                dispatch(loadCart());\n\n                router.push('/cart');\n\n            }).catch((error) => {\n                setError(error);\n                setLoading(false);\n            });\n\n        } catch (error) {\n            console.log( error );\n        }\n    }    \n\n    return (\n        <>\n\n        {!isLogged && \n            <LoginModal \n                showLogin={showLoginModal} \n                closeModal={() => {\n                    setShowLoginModal(false);\n                    setShow(true);\n                }}\n                onSuccess={() => \n                addCart(true) } \n            />\n        }\n\n       <Modal show={show} onHide={handleClose} animation={false} size=\"md\" className=\"modal-product-show\">\n        <Modal.Header closeButton className=\"border-0\" />\n\n        <Modal.Body>\n            <Image src={product.image_url} />\n\n            <h3>{product.name}</h3>\n            <p>{product.description}</p>\n\n            {product.options && \n                <ListGroup className=\"options mt-4\" horizontal>\n                    {product.options.map(option =>\n                        <ListGroup.Item \n                            key={option.id} \n                            active={option.selected}\n                            onClick={() => {\n                                product.options.map(op => op.selected = false);\n                                option.selected = true;\n                                setBasePrice(option.price);\n                            }}\n                        >\n                            {option.name}\n                        </ListGroup.Item>\n                    )}\n                </ListGroup>\n            }\n\n\n        </Modal.Body>\n\n        <Modal.Footer className=\"d-flex justify-content-between align-items-center\">\n            <div>\n                <h5 className=\"price text-white pt-1\">{currency(totalPrice)}</h5>\n            </div>\n\n            <div>\n                <div></div>\n\n                <div className=\"d-flex\">\n                    <Button className=\"btn-quantity border-0 left btn-sm\" onClick={decrementQuantity}>\n                        <i className=\"fas fa-minus-circle\"></i>\n                    </Button>\n                    <div className=\"quantity btn btn-sm border-sm pl-3 pr-3 rounded-0 text-white\">\n                        {quantity || 1}\n                    </div>\n                    <Button className=\"btn-quantity border-0 right btn-sm\" onClick={incrementQuantity}>\n                        <i className=\"fas fa-plus-circle\"></i>\n                    </Button>\n\n                    {setting.store_status.value === \"1\" &&\n                        <Button className=\"btn-quantity right btn-md ml-3 border-0 text-uppercase\" disabled={loading} onClick={() => addCart()}>\n                            <i className=\"fas fa-shopping-cart\"></i> Pedir\n\n                            {loading &&\n                                <Spinner animation=\"border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </Spinner>\n                            }\n\n                        </Button>\n                    }\n                </div>\n            </div>\n        </Modal.Footer>\n      </Modal>   \n\n      </>     \n    );\n    \n}\n  \n"]},"metadata":{},"sourceType":"module"}