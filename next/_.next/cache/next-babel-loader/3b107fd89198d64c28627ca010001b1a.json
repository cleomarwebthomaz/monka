{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Form, Modal, Button, ListGroup, Alert } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport Spinner from '../../../components/Spinner';\nimport Details from '../components/Details';\nimport Voucher from '../Voucher';\nimport { get, post } from '../../../services/http';\nimport currency from '../../../utils/currency';\n\nfunction CheckoutComponent(props) {\n  var onHide = props.onHide,\n      show = props.show,\n      addresses = props.addresses,\n      addressSelected = props.addressSelected,\n      cart = props.cart,\n      cartLoading = props.cartLoading;\n\n  var _useState = useState([]),\n      paymentMethods = _useState[0],\n      setPaymentMethods = _useState[1];\n\n  var _useState2 = useState([]),\n      credits = _useState2[0],\n      setCredits = _useState2[1];\n\n  var _useState3 = useState(true),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState({}),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState({}),\n      error = _useState5[0],\n      setError = _useState5[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    if (addressSelected) {\n      data.user_address_id = addressSelected.id;\n      setData(function () {\n        return _objectSpread({}, data, {}, data);\n      });\n    }\n  }, [addressSelected]);\n  useEffect(function () {\n    function getPaymentMethods() {\n      var result;\n      return _regeneratorRuntime.async(function getPaymentMethods$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(get('/paymentMethod'));\n\n            case 2:\n              result = _context.sent;\n              setPaymentMethods(result);\n\n              if (!data.payment_method_id) {\n                data.payment_method_id = result[0].id;\n                setData(function () {\n                  return _objectSpread({}, data, {}, data);\n                });\n              }\n\n              setLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    function getCredits() {\n      var result;\n      return _regeneratorRuntime.async(function getCredits$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(get('/credit'));\n\n            case 2:\n              result = _context2.sent;\n              setCredits(result);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n\n    getCredits();\n    getPaymentMethods();\n  }, []);\n\n  function processCheckout() {\n    var result;\n    return _regeneratorRuntime.async(function processCheckout$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setError({});\n\n            if (!(data.payment_method_id === 4 && credits.total_value < cart.total_price)) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", setError({\n              credit: 'Você não tem créditos suficientes para realizar esse pedido. Escolha outra forma de pagamento.'\n            }));\n\n          case 3:\n            if (data.user_address_id) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", setError({\n              user_address_id: 'Selecione um endereço para entrega.'\n            }));\n\n          case 5:\n            if (data.payment_method_id) {\n              _context3.next = 7;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", setError({\n              payment_method_id: 'Selecione a forma de pagamento.'\n            }));\n\n          case 7:\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(post('/checkout', data));\n\n          case 9:\n            result = _context3.sent;\n            toast.success('Seu pedido fopi enviado com sucesso!', {\n              position: toast.POSITION.BOTTOM_CENTER\n            });\n            router.push(\"/order/\".concat(result.id, \"?credit=\").concat(result.credit ? result.credit.id : false));\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(Modal, {\n    size: \"lg\",\n    show: show,\n    onHide: onHide\n  }, __jsx(Modal.Header, {\n    closeButton: true\n  }, __jsx(Modal.Title, {\n    id: \"contained-modal-title-vcenter\"\n  }, \"Finalizar Pedido\")), __jsx(Modal.Body, null, __jsx(\"div\", {\n    className: \"mb-3\"\n  }, __jsx(\"h6\", {\n    className: \"text-primary\"\n  }, \"Selecione o endere\\xE7o de entrega\"), error.user_address_id && __jsx(Alert, {\n    variant: \"danger\"\n  }, error.user_address_id), addresses.map(function (address) {\n    return __jsx(Form.Group, {\n      key: address.id,\n      controlId: \"address-\".concat(address.id)\n    }, __jsx(Form.Check, {\n      type: \"radio\",\n      value: address.id,\n      checked: data.user_address_id === address.id,\n      label: \"\\n                                \".concat(address.street, \", \").concat(address.number, \" - \\n                                \").concat(address.neighborhood.name, \" \\n                            \"),\n      onChange: function onChange(e) {\n        data.user_address_id = _parseInt(e.target.value);\n        setError(_objectSpread({}, error, {\n          user_address_id: null\n        }));\n        setData(function () {\n          return _objectSpread({}, data, {}, data);\n        });\n      }\n    }), __jsx(\"hr\", null));\n  })), paymentMethods && __jsx(\"div\", null, __jsx(\"h6\", {\n    className: \"text-primary\"\n  }, \"Selecione o m\\xE9todo de Pagamento\"), __jsx(ListGroup, {\n    className: \"options mt-3\",\n    horizontal: true\n  }, paymentMethods.map(function (paymentMethod) {\n    return __jsx(ListGroup.Item, {\n      key: paymentMethod.id,\n      active: data.payment_method_id === paymentMethod.id,\n      onClick: function onClick() {\n        data.payment_method_id = paymentMethod.id;\n        setData(function () {\n          return _objectSpread({}, data, {}, data);\n        });\n      }\n    }, paymentMethod.name);\n  }))), credits.total_value > 0 && __jsx(Alert, {\n    variant: \"success\",\n    className: \"mt-3 shadow\"\n  }, \"Voc\\xEA tem \", currency(credits.total_value), \" dispon\\xEDvel\"), error.credit && __jsx(Alert, {\n    variant: \"danger\",\n    className: \"mt-3 shadow\"\n  }, \"Voc\\xEA n\\xE3o tem cr\\xE9ditos suficientes para realizar esse pedido. Escolha outra forma de pagamento.\"), data.payment_method_id === 4 && credits.total_value < cart.total_price && !error.credit && __jsx(Alert, {\n    variant: \"danger\",\n    className: \"mt-3 shadow\"\n  }, \"Voc\\xEA n\\xE3o tem cr\\xE9ditos suficientes para realizar esse pedido. Escolha outra forma de pagamento.\"), __jsx(Form.Group, {\n    controlId: \"observation\",\n    className: \"mt-3\"\n  }, __jsx(Form.Label, null, \"Observa\\xE7\\xE3o\"), __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    placeholder: \"Ex: (Troco Para R$ 50,00)\",\n    onChange: function onChange(e) {\n      data.observation = e.target.value;\n      setData(function () {\n        return _objectSpread({}, data, {}, data);\n      });\n    }\n  })), __jsx(Voucher, null), __jsx(Details, {\n    cart: cart,\n    loading: loading\n  }), __jsx(\"div\", {\n    className: \"btn btn-light btn-lg rounded-0 btn-block\"\n  }, cartLoading ? __jsx(Spinner, {\n    animation: \"border\"\n  }) : 'Total a Pagar: ' + currency(cart.total_price))), __jsx(Modal.Footer, {\n    className: \"d-flex justify-content-between\"\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: onHide\n  }, \"Cancelar\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: processCheckout,\n    disabled: loading || cartLoading\n  }, \"Confirmar Pedido\", loading && __jsx(Spinner, null))));\n}\n\nexport default CheckoutComponent;","map":null,"metadata":{},"sourceType":"module"}