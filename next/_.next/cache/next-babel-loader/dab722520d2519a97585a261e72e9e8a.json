{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, ListGroup, Alert } from 'react-bootstrap';\nimport currency from '../../../../utils/currency';\nexport default function (_ref) {\n  var groups = _ref.groups,\n      product = _ref.product,\n      error = _ref.error,\n      onChange = _ref.onChange;\n\n  function enableAndDisabeGroupOptions(group) {\n    var max = group.max;\n    var totalCountGroupQuantities = countGroupQuantities(group);\n\n    if (totalCountGroupQuantities >= max) {\n      group.options.map(function (op) {\n        return op.disabled = false;\n      });\n      group.options.filter(function (op) {\n        if (!op.quantity) op.quantity = 0;\n\n        if (op.quantity <= 0) {\n          return op;\n        }\n      }).map(function (op) {\n        op.disabled = true;\n      });\n    } else {\n      group.options.map(function (op) {\n        return op.disabled = false;\n      });\n    }\n  }\n\n  var countGroupQuantities = function countGroupQuantities(group) {\n    var countQuantities = 0;\n    group.options.filter(function (i) {\n      return i.quantity > 0;\n    }).map(function (option) {\n      countQuantities += option.quantity;\n    });\n    return countQuantities;\n  };\n\n  function increment(group, option) {\n    if (!option.quantity) option.quantity = 0;\n    var max = group.max;\n    var currentQuantity = option.quantity;\n    var quantity = option.quantity += 1;\n    var countQuantities = countGroupQuantities(group);\n    if (countQuantities > max) quantity = currentQuantity;\n    option.quantity = quantity;\n    enableAndDisabeGroupOptions(group);\n    onChange(product);\n  }\n\n  function decrement(group, option) {\n    if (!option.quantity) option.quantity = 0;\n    option.quantity -= 1;\n\n    if (option.quantity <= 0) {\n      option.quantity = 0;\n    }\n\n    enableAndDisabeGroupOptions(group);\n    onChange(product);\n  }\n\n  if (!groups) return __jsx(\"div\", null);\n  return __jsx(\"div\", {\n    className: \"mt-4 groups\"\n  }, groups.map(function (group) {\n    return __jsx(\"div\", {\n      key: group.id\n    }, __jsx(\"h4\", null, group.name), error.group_id === group.id && __jsx(Alert, {\n      variant: \"danger\"\n    }, error.message), __jsx(ListGroup, {\n      className: \"mb-4\"\n    }, group.options.map(function (option) {\n      return __jsx(ListGroup.Item, {\n        key: option.id,\n        active: option.disabled === true,\n        className: \"d-flex justify-content-between align-items-center\",\n        disabled: option.disabled === true\n      }, __jsx(\"div\", null, option.name, __jsx(\"span\", {\n        className: \"text-muted\"\n      }, \"+ \", currency(option.price))), __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"d-flex\"\n      }, __jsx(Button, {\n        className: \"btn-quantity left btn-sm\",\n        onClick: function onClick() {\n          decrement(group, option);\n        }\n      }, __jsx(\"i\", {\n        className: \"fas fa-minus-circle\"\n      })), __jsx(\"div\", {\n        className: \"quantity btn btn-sm bg-light border-sm pl-3 pr-3 rounded-0\"\n      }, option.quantity || 0), __jsx(Button, {\n        className: \"btn-quantity right btn-sm\",\n        onClick: function onClick() {\n          increment(group, option);\n        },\n        disabled: option.disabled === true\n      }, __jsx(\"i\", {\n        className: \"fas fa-plus-circle\"\n      })))));\n    })));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}