{"ast":null,"code":"import fetch from 'isomorphic-unfetch';\nimport cookie from \"js-cookie\";\nimport { url as baseUrl } from '../config';\nexport function get(url, params = {}) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const res = await fetch(baseUrl + url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${cookie.get('token')}`\n        }\n      });\n      const data = await res.json();\n      resolve(data);\n    } catch (error) {\n      reject(error.message);\n      console.log(error);\n    }\n  });\n}\nexport function post(url, values) {\n  return new Promise(async resolve => {\n    const token = cookie.get('token');\n    const res = await fetch(baseUrl + url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token || ''}`\n      },\n      body: JSON.stringify(values)\n    });\n    const data = await res.json();\n    resolve(data);\n  });\n}\nexport function patch(url, values) {\n  return new Promise(async resolve => {\n    const res = await fetch(baseUrl + url, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${cookie.get('token')}`\n      },\n      body: JSON.stringify(values)\n    });\n    const data = await res.json();\n    resolve(data);\n  });\n}\nexport function httpDelete(url) {\n  return new Promise(async resolve => {\n    const res = await fetch(baseUrl + url, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${cookie.get('token')}`\n      }\n    });\n    const data = await res.json();\n    resolve(data);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}